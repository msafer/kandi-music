{"id":"9d224ef331217b4ee0920b04ecd8d72b","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/ERC222Vault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\ninterface IERC222NFT is IERC721 {\n    function MAX_SUPPLY() external view returns (uint256);\n    function totalMinted() external view returns (uint256);\n    function songName() external view returns (string memory);\n}\n\ninterface IERC222Token is IERC20 {\n    function TOKENS_PER_NFT() external view returns (uint256);\n    function songName() external view returns (string memory);\n    function mint(address to, uint256 amount) external;\n}\n\n/**\n * @title ERC222Vault\n * @dev Vault contract that enables swapping between NFTs and kTokens\n * @dev Tracks floor price and manages paired NFT/kToken storage\n * @dev Enters \"open market\" mode after all NFTs are minted\n * \n * Constructor Parameters:\n * - nftContract_ - Address of the paired ERC222NFT contract\n * - tokenContract_ - Address of the paired ERC222Token contract\n * - songName_ - Name of the song this vault represents\n * - admin_ - Admin address for management functions\n */\ncontract ERC222Vault is Ownable, ReentrancyGuard, IERC721Receiver {\n    using SafeERC20 for IERC20;\n    // Paired contracts\n    IERC222NFT public immutable nftContract;\n    IERC222Token public immutable tokenContract;\n    \n    // Song information\n    string public songName;\n    \n    // Conversion ratio (from token contract)\n    uint256 public immutable TOKENS_PER_NFT;\n    uint8 public immutable TOKEN_DECIMALS;\n    uint256 public immutable TOKENS_PER_NFT_UNITS;\n    \n    // Vault state\n    mapping(uint256 => bool) public nftHeld; // Track which NFTs are in vault\n    uint256 public nftCount; // Number of NFTs currently in vault\n    uint256 public tokenBalance; // Number of kTokens currently in vault\n    \n    // Market data\n    uint256 public totalMarketCap; // Total value of all transactions\n    bool public openMarketMode; // True when all NFTs are minted\n    \n    // Admin controls\n    address public admin;\n    bool public swapEnabled = true;\n    \n    // Events\n    event NFTDepositedToVault(address indexed user, uint256 indexed tokenId, uint256 tokensReceived);\n    event TokensDepositedToVault(address indexed user, uint256 tokenAmount, uint256 indexed nftReceived);\n    event NFTWithdrawnFromVault(address indexed user, uint256 indexed tokenId, uint256 tokensPaid);\n    event TokensWithdrawnFromVault(address indexed user, uint256 tokenAmount, uint256 indexed nftDeposited);\n    event AdminUpdated(address indexed oldAdmin, address indexed newAdmin);\n    event SwapStatusUpdated(bool enabled);\n    event OpenMarketModeActivated(uint256 totalNFTsMinted);\n    event VaultPreloaded(uint256 nftCount, uint256 tokenAmount);\n    event FloorPriceUpdated(uint256 newFloorPrice);\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin || msg.sender == owner(), \"Not authorized admin\");\n        _;\n    }\n\n    modifier swapIsEnabled() {\n        require(swapEnabled, \"Swapping is disabled\");\n        _;\n    }\n\n    constructor(\n        address nftContract_,\n        address tokenContract_,\n        string memory songName_,\n        address admin_\n    ) Ownable(msg.sender) {\n        require(nftContract_ != address(0), \"Invalid NFT contract\");\n        require(tokenContract_ != address(0), \"Invalid token contract\");\n        require(bytes(songName_).length > 0, \"Song name cannot be empty\");\n        require(admin_ != address(0), \"Invalid admin address\");\n\n        nftContract = IERC222NFT(nftContract_);\n        tokenContract = IERC222Token(tokenContract_);\n        songName = songName_;\n        admin = admin_;\n        \n        // Get conversion ratio from token contract\n        TOKENS_PER_NFT = tokenContract.TOKENS_PER_NFT();\n        TOKEN_DECIMALS = IERC20Metadata(tokenContract_).decimals();\n        TOKENS_PER_NFT_UNITS = TOKENS_PER_NFT * (10 ** TOKEN_DECIMALS);\n    }\n\n    /**\n     * @dev Deposit NFT to vault and receive kTokens\n     * @param tokenId NFT token ID to deposit\n     */\n    function depositNFT(uint256 tokenId) external nonReentrant swapIsEnabled {\n        require(nftContract.ownerOf(tokenId) == msg.sender, \"Not NFT owner\");\n        require(!nftHeld[tokenId], \"NFT already in vault\");\n        require(tokenBalance >= TOKENS_PER_NFT_UNITS, \"Insufficient tokens in vault\");\n\n        // Transfer NFT to vault\n        nftContract.safeTransferFrom(msg.sender, address(this), tokenId);\n        \n        // Update state\n        nftHeld[tokenId] = true;\n        nftCount++;\n        tokenBalance -= TOKENS_PER_NFT_UNITS;\n        \n        // Transfer kTokens to user\n        IERC20(address(tokenContract)).safeTransfer(msg.sender, TOKENS_PER_NFT_UNITS);\n        \n        emit NFTDepositedToVault(msg.sender, tokenId, TOKENS_PER_NFT_UNITS);\n        emit FloorPriceUpdated(getFloorPrice());\n    }\n\n    /**\n     * @dev Deposit kTokens to vault and receive NFT (if available)\n     * @param tokenAmount Amount of kTokens to deposit (must be multiple of TOKENS_PER_NFT)\n     */\n    function depositTokens(uint256 tokenAmount) external nonReentrant swapIsEnabled {\n        require(tokenAmount >= TOKENS_PER_NFT_UNITS, \"Insufficient token amount\");\n        require(tokenAmount % TOKENS_PER_NFT_UNITS == 0, \"Invalid token amount\");\n        require(nftCount > 0, \"No NFTs available in vault\");\n        \n        uint256 nftAmount = tokenAmount / TOKENS_PER_NFT_UNITS;\n        require(nftAmount <= nftCount, \"Not enough NFTs in vault\");\n\n        // Transfer kTokens from user to vault\n        require(tokenContract.transferFrom(msg.sender, address(this), tokenAmount), \"Token transfer failed\");\n        \n        // Update token balance\n        tokenBalance += tokenAmount;\n        \n        // Transfer NFTs to user\n        uint256 transferredNFTs = 0;\n        for (uint256 i = 1; i <= nftContract.MAX_SUPPLY() && transferredNFTs < nftAmount; i++) {\n            if (nftHeld[i]) {\n                nftContract.safeTransferFrom(address(this), msg.sender, i);\n                nftHeld[i] = false;\n                nftCount--;\n                transferredNFTs++;\n                \n                emit TokensDepositedToVault(msg.sender, TOKENS_PER_NFT_UNITS, i);\n            }\n        }\n        \n        require(transferredNFTs == nftAmount, \"Failed to transfer all NFTs\");\n        emit FloorPriceUpdated(getFloorPrice());\n    }\n\n    /**\n     * @dev Admin function to preload vault with NFTs and tokens\n     * @param nftIds Array of NFT token IDs to deposit\n     * @param tokenAmount Amount of kTokens to deposit\n     */\n    function preloadVault(uint256[] calldata nftIds, uint256 tokenAmount) external onlyAdmin {\n        // Deposit NFTs\n        for (uint256 i = 0; i < nftIds.length; i++) {\n            uint256 tokenId = nftIds[i];\n            require(!nftHeld[tokenId], \"NFT already in vault\");\n            \n            nftContract.safeTransferFrom(msg.sender, address(this), tokenId);\n            nftHeld[tokenId] = true;\n            nftCount++;\n        }\n        \n        // Deposit tokens\n        if (tokenAmount > 0) {\n            IERC20(address(tokenContract)).safeTransferFrom(msg.sender, address(this), tokenAmount);\n            tokenBalance += tokenAmount;\n        }\n        \n        emit VaultPreloaded(nftIds.length, tokenAmount);\n        \n        // Check if we should activate open market mode\n        _checkOpenMarketMode();\n    }\n\n    /**\n     * @dev Calculate current floor price based on market cap and total NFTs\n     * @return Floor price in wei\n     */\n    function getFloorPrice() public view returns (uint256) {\n        uint256 totalNFTs = nftContract.totalMinted();\n        if (totalNFTs == 0) return 0;\n        \n        if (openMarketMode) {\n            // In open market mode, floor price is dynamic based on vault composition\n            if (nftCount == 0) return 0;\n            return tokenBalance / nftCount / TOKENS_PER_NFT_UNITS;\n        } else {\n            // During mint phase, use market cap calculation\n            return totalMarketCap / totalNFTs;\n        }\n    }\n\n    /**\n     * @dev Get vault statistics\n     */\n    function getVaultStats() external view returns (\n        uint256 nftsInVault,\n        uint256 tokensInVault,\n        uint256 floorPrice,\n        bool isOpenMarket,\n        uint256 totalNFTsMinted,\n        uint256 maxNFTSupply\n    ) {\n        return (\n            nftCount,\n            tokenBalance,\n            getFloorPrice(),\n            openMarketMode,\n            nftContract.totalMinted(),\n            nftContract.MAX_SUPPLY()\n        );\n    }\n\n    /**\n     * @dev Check if a specific NFT is held in the vault\n     * @param tokenId NFT token ID to check\n     * @return True if NFT is in vault\n     */\n    function isNFTInVault(uint256 tokenId) external view returns (bool) {\n        return nftHeld[tokenId];\n    }\n\n    /**\n     * @dev Get list of NFT IDs currently in vault (up to maxResults)\n     * @param maxResults Maximum number of results to return\n     * @return Array of NFT token IDs in vault\n     */\n    function getNFTsInVault(uint256 maxResults) external view returns (uint256[] memory) {\n        uint256[] memory result = new uint256[](Math.min(nftCount, maxResults));\n        uint256 found = 0;\n        \n        for (uint256 i = 1; i <= nftContract.MAX_SUPPLY() && found < maxResults; i++) {\n            if (nftHeld[i]) {\n                result[found] = i;\n                found++;\n            }\n        }\n        \n        // Resize array if needed\n        if (found < result.length) {\n            uint256[] memory resized = new uint256[](found);\n            for (uint256 i = 0; i < found; i++) {\n                resized[i] = result[i];\n            }\n            return resized;\n        }\n        \n        return result;\n    }\n\n    /**\n     * @dev Update market cap (called by MintRouter or admin)\n     * @param additionalValue Additional value to add to market cap\n     */\n    function updateMarketCap(uint256 additionalValue) external onlyAdmin {\n        totalMarketCap += additionalValue;\n        emit FloorPriceUpdated(getFloorPrice());\n        \n        // Check if we should activate open market mode\n        _checkOpenMarketMode();\n    }\n\n    /**\n     * @dev Check and activate open market mode if all NFTs are minted\n     */\n    function _checkOpenMarketMode() internal {\n        if (!openMarketMode && nftContract.totalMinted() >= nftContract.MAX_SUPPLY()) {\n            openMarketMode = true;\n            emit OpenMarketModeActivated(nftContract.totalMinted());\n        }\n    }\n\n    /**\n     * @dev Set admin address\n     * @param newAdmin New admin address\n     */\n    function setAdmin(address newAdmin) external onlyOwner {\n        require(newAdmin != address(0), \"Invalid admin address\");\n        \n        address oldAdmin = admin;\n        admin = newAdmin;\n        \n        emit AdminUpdated(oldAdmin, newAdmin);\n    }\n\n    /**\n     * @dev Enable or disable swapping\n     * @param enabled Whether swapping should be enabled\n     */\n    function setSwapEnabled(bool enabled) external onlyAdmin {\n        swapEnabled = enabled;\n        emit SwapStatusUpdated(enabled);\n    }\n\n    /**\n     * @dev Emergency function to withdraw tokens (admin only)\n     * @param to Address to withdraw tokens to\n     * @param amount Amount of tokens to withdraw\n     */\n    function emergencyWithdrawTokens(address to, uint256 amount) external onlyAdmin {\n        require(to != address(0), \"Invalid recipient\");\n        require(amount <= tokenBalance, \"Insufficient token balance\");\n        \n        tokenBalance -= amount;\n        IERC20(address(tokenContract)).safeTransfer(to, amount);\n    }\n\n    /**\n     * @dev Emergency function to withdraw NFTs (admin only)\n     * @param to Address to withdraw NFT to\n     * @param tokenId NFT token ID to withdraw\n     */\n    function emergencyWithdrawNFT(address to, uint256 tokenId) external onlyAdmin {\n        require(to != address(0), \"Invalid recipient\");\n        require(nftHeld[tokenId], \"NFT not in vault\");\n        \n        nftHeld[tokenId] = false;\n        nftCount--;\n        nftContract.safeTransferFrom(address(this), to, tokenId);\n    }\n\n    /**\n     * @dev Handle NFT transfers to this contract\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external pure override returns (bytes4) {\n        return IERC721Receiver.onERC721Received.selector;\n    }\n\n    /**\n     * @dev Get comprehensive vault information\n     */\n    function getVaultInfo() external view returns (\n        string memory vaultSongName,\n        address nftAddress,\n        address tokenAddress,\n        uint256 conversionRatio,\n        uint256 nftsHeld,\n        uint256 tokensHeld,\n        uint256 currentFloorPrice,\n        bool openMarket,\n        bool swappingEnabled\n    ) {\n        return (\n            songName,\n            address(nftContract),\n            address(tokenContract),\n            TOKENS_PER_NFT_UNITS,\n            nftCount,\n            tokenBalance,\n            getFloorPrice(),\n            openMarketMode,\n            swapEnabled\n        );\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/ERC222Vault.sol:345:9:\n    |\n345 |         address operator,\n    |         ^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":12570,"file":"contracts/ERC222Vault.sol","start":12554},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/ERC222Vault.sol:346:9:\n    |\n346 |         address from,\n    |         ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":12592,"file":"contracts/ERC222Vault.sol","start":12580},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/ERC222Vault.sol:347:9:\n    |\n347 |         uint256 tokenId,\n    |         ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":12617,"file":"contracts/ERC222Vault.sol","start":12602},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/ERC222Vault.sol:348:9:\n    |\n348 |         bytes calldata data\n    |         ^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":12646,"file":"contracts/ERC222Vault.sol","start":12627},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[970],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":971,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":970,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,970],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[1103],"IERC20":[315]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1103,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,1103,315],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[249,258]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1103]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":1104,"src":"133:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[315]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":316,"src":"132:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"140:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[315]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"133:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":315,"linearizedBaseContracts":[315],"name":"IERC20","nameLocation":"215:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"228:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":249,"name":"Transfer","nameLocation":"397:8:4","nodeType":"EventDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:4","nodeType":"VariableDeclaration","scope":249,"src":"406:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:4","nodeType":"VariableDeclaration","scope":249,"src":"428:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:4","nodeType":"VariableDeclaration","scope":249,"src":"448:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:4"},"src":"391:72:4"},{"anonymous":false,"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"469:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":258,"name":"Approval","nameLocation":"628:8:4","nodeType":"EventDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:4","nodeType":"VariableDeclaration","scope":258,"src":"637:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:4","nodeType":"VariableDeclaration","scope":258,"src":"660:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:4","nodeType":"VariableDeclaration","scope":258,"src":"685:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:4"},"src":"622:78:4"},{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"706:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":264,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:4","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"796:2:4"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"822:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:4"},"scope":315,"src":"776:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"837:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":272,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:4","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"account","nameLocation":"940:7:4","nodeType":"VariableDeclaration","scope":272,"src":"932:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:4"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":272,"src":"972:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:4"},"scope":315,"src":"913:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"987:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":282,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:4","nodeType":"FunctionDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"to","nameLocation":"1231:2:4","nodeType":"VariableDeclaration","scope":282,"src":"1223:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"value","nameLocation":"1243:5:4","nodeType":"VariableDeclaration","scope":282,"src":"1235:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:4"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":282,"src":"1268:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":279,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:4"},"scope":315,"src":"1205:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"1280:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":292,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:4","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"owner","nameLocation":"1576:5:4","nodeType":"VariableDeclaration","scope":292,"src":"1568:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"spender","nameLocation":"1591:7:4","nodeType":"VariableDeclaration","scope":292,"src":"1583:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:4"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":292,"src":"1623:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:4"},"scope":315,"src":"1549:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"1638:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":302,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:4","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"spender","nameLocation":"2335:7:4","nodeType":"VariableDeclaration","scope":302,"src":"2327:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"value","nameLocation":"2352:5:4","nodeType":"VariableDeclaration","scope":302,"src":"2344:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:4"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"2377:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":299,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:4"},"scope":315,"src":"2310:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"2389:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":314,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:4","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"2721:4:4","nodeType":"VariableDeclaration","scope":314,"src":"2713:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"2735:2:4","nodeType":"VariableDeclaration","scope":314,"src":"2727:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"2747:5:4","nodeType":"VariableDeclaration","scope":314,"src":"2739:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:4"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"2772:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:4"},"scope":315,"src":"2691:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":316,"src":"205:2575:4","usedErrors":[],"usedEvents":[249,258]}],"src":"106:2675:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[315],"IERC20Metadata":[341]},"id":342,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":342,"sourceUnit":316,"src":"151:37:5","symbolAliases":[{"foreign":{"id":318,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"159:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":321,"name":"IERC20","nameLocations":["306:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"306:6:5"},"id":322,"nodeType":"InheritanceSpecifier","src":"306:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"190:87:5","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":341,"linearizedBaseContracts":[341,315],"name":"IERC20Metadata","nameLocation":"288:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"319:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":328,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:5","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[],"src":"391:2:5"},"returnParameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":328,"src":"417:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":325,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:5"},"scope":341,"src":"378:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"438:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":334,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:5","nodeType":"FunctionDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[],"src":"514:2:5"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"540:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":331,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:5"},"scope":341,"src":"499:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"561:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":340,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:5","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"648:2:5"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":340,"src":"674:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":337,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:5"},"scope":341,"src":"631:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":342,"src":"278:405:5","usedErrors":[],"usedEvents":[249,258]}],"src":"125:559:5"},"id":5},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[315],"SafeERC20":[805]},"id":806,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":343,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":806,"sourceUnit":316,"src":"141:37:6","symbolAliases":[{"foreign":{"id":344,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"149:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":806,"sourceUnit":230,"src":"179:58:6","symbolAliases":[{"foreign":{"id":346,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":348,"nodeType":"StructuredDocumentation","src":"239:458:6","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":805,"linearizedBaseContracts":[805],"name":"SafeERC20","nameLocation":"706:9:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"722:65:6","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":353,"name":"SafeERC20FailedOperation","nameLocation":"798:24:6","nodeType":"ErrorDefinition","parameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"token","nameLocation":"831:5:6","nodeType":"VariableDeclaration","scope":353,"src":"823:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:6"},"src":"792:46:6"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"844:71:6","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":362,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:6","nodeType":"ErrorDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"spender","nameLocation":"967:7:6","nodeType":"VariableDeclaration","scope":362,"src":"959:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:6","nodeType":"VariableDeclaration","scope":362,"src":"976:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:6","nodeType":"VariableDeclaration","scope":362,"src":"1002:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:6"},"src":"920:109:6"},{"body":{"id":385,"nodeType":"Block","src":"1291:88:6","statements":[{"expression":{"arguments":[{"id":374,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1321:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":377,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1343:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":282,"src":"1343:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":379,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1360:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"1364:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":375,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":373,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"1301:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"ExpressionStatement","src":"1301:71:6"}]},"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"1035:179:6","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":386,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:6","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"token","nameLocation":"1248:5:6","nodeType":"VariableDeclaration","scope":386,"src":"1241:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":365,"nodeType":"UserDefinedTypeName","pathNode":{"id":364,"name":"IERC20","nameLocations":["1241:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1241:6:6"},"referencedDeclaration":315,"src":"1241:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"to","nameLocation":"1263:2:6","nodeType":"VariableDeclaration","scope":386,"src":"1255:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"value","nameLocation":"1275:5:6","nodeType":"VariableDeclaration","scope":386,"src":"1267:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:6"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1291:0:6"},"scope":805,"src":"1219:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"1708:98:6","statements":[{"expression":{"arguments":[{"id":400,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"1738:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":403,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"1760:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":314,"src":"1760:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1781:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":406,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"1787:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"1791:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":401,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":399,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"1718:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"ExpressionStatement","src":"1718:81:6"}]},"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"1385:228:6","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:6","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"token","nameLocation":"1651:5:6","nodeType":"VariableDeclaration","scope":413,"src":"1644:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":389,"nodeType":"UserDefinedTypeName","pathNode":{"id":388,"name":"IERC20","nameLocations":["1644:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1644:6:6"},"referencedDeclaration":315,"src":"1644:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"from","nameLocation":"1666:4:6","nodeType":"VariableDeclaration","scope":413,"src":"1658:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"to","nameLocation":"1680:2:6","nodeType":"VariableDeclaration","scope":413,"src":"1672:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"value","nameLocation":"1692:5:6","nodeType":"VariableDeclaration","scope":413,"src":"1684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:6"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"1708:0:6"},"scope":805,"src":"1618:188:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":438,"nodeType":"Block","src":"2033:99:6","statements":[{"expression":{"arguments":[{"id":427,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2074:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":430,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2096:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":282,"src":"2096:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":432,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"2113:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2117:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":434,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":428,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":426,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"2050:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":425,"id":437,"nodeType":"Return","src":"2043:82:6"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"1812:126:6","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":439,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:6","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"token","nameLocation":"1975:5:6","nodeType":"VariableDeclaration","scope":439,"src":"1968:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":416,"nodeType":"UserDefinedTypeName","pathNode":{"id":415,"name":"IERC20","nameLocations":["1968:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1968:6:6"},"referencedDeclaration":315,"src":"1968:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"to","nameLocation":"1990:2:6","nodeType":"VariableDeclaration","scope":439,"src":"1982:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"value","nameLocation":"2002:5:6","nodeType":"VariableDeclaration","scope":439,"src":"1994:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:6"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":439,"src":"2027:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":423,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:6"},"scope":805,"src":"1943:189:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":467,"nodeType":"Block","src":"2381:109:6","statements":[{"expression":{"arguments":[{"id":455,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"2422:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":458,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"2444:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2444:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":460,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2465:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":461,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2471:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2475:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":456,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":454,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"2398:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":453,"id":466,"nodeType":"Return","src":"2391:92:6"}]},"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"2138:130:6","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":468,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:6","nodeType":"FunctionDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"token","nameLocation":"2309:5:6","nodeType":"VariableDeclaration","scope":468,"src":"2302:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"IERC20","nameLocations":["2302:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"2302:6:6"},"referencedDeclaration":315,"src":"2302:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"from","nameLocation":"2324:4:6","nodeType":"VariableDeclaration","scope":468,"src":"2316:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"to","nameLocation":"2338:2:6","nodeType":"VariableDeclaration","scope":468,"src":"2330:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"value","nameLocation":"2350:5:6","nodeType":"VariableDeclaration","scope":468,"src":"2342:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:6"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":468,"src":"2375:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":451,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:6"},"scope":805,"src":"2273:217:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":498,"nodeType":"Block","src":"3232:139:6","statements":[{"assignments":[480],"declarations":[{"constant":false,"id":480,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:6","nodeType":"VariableDeclaration","scope":498,"src":"3242:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":489,"initialValue":{"arguments":[{"arguments":[{"id":485,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$805","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$805","typeString":"library SafeERC20"}],"id":484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:6","typeDescriptions":{}}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3296:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":481,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3265:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":292,"src":"3265:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:6"},{"expression":{"arguments":[{"id":491,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3327:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":492,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3334:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":493,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"3343:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"3358:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":490,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"3314:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"3314:50:6"}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"2496:645:6","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":499,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:6","nodeType":"FunctionDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"token","nameLocation":"3184:5:6","nodeType":"VariableDeclaration","scope":499,"src":"3177:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":471,"nodeType":"UserDefinedTypeName","pathNode":{"id":470,"name":"IERC20","nameLocations":["3177:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"3177:6:6"},"referencedDeclaration":315,"src":"3177:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"spender","nameLocation":"3199:7:6","nodeType":"VariableDeclaration","scope":499,"src":"3191:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"value","nameLocation":"3216:5:6","nodeType":"VariableDeclaration","scope":499,"src":"3208:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:6"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[],"src":"3232:0:6"},"scope":805,"src":"3146:225:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"4137:370:6","statements":[{"id":540,"nodeType":"UncheckedBlock","src":"4147:354:6","statements":[{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:6","nodeType":"VariableDeclaration","scope":540,"src":"4171:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":520,"initialValue":{"arguments":[{"arguments":[{"id":516,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$805","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$805","typeString":"library SafeERC20"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:6","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"4229:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":512,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4198:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:6","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":292,"src":"4198:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":521,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"4255:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":522,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4274:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"4251:160:6","trueBody":{"id":530,"nodeType":"Block","src":"4293:118:6","statements":[{"errorCall":{"arguments":[{"id":525,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"4351:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":526,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"4360:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":527,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4378:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":524,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4318:32:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"RevertStatement","src":"4311:85:6"}]}},{"expression":{"arguments":[{"id":533,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4437:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":534,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"4444:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":535,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"4453:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":536,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4472:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":532,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"4424:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"ExpressionStatement","src":"4424:66:6"}]}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"3377:657:6","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:6","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"token","nameLocation":"4077:5:6","nodeType":"VariableDeclaration","scope":542,"src":"4070:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":502,"nodeType":"UserDefinedTypeName","pathNode":{"id":501,"name":"IERC20","nameLocations":["4070:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"4070:6:6"},"referencedDeclaration":315,"src":"4070:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"spender","nameLocation":"4092:7:6","nodeType":"VariableDeclaration","scope":542,"src":"4084:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:6","nodeType":"VariableDeclaration","scope":542,"src":"4101:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:6"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"4137:0:6"},"scope":805,"src":"4039:468:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":588,"nodeType":"Block","src":"5161:303:6","statements":[{"assignments":[554],"declarations":[{"constant":false,"id":554,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:6","nodeType":"VariableDeclaration","scope":588,"src":"5171:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":553,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":563,"initialValue":{"arguments":[{"expression":{"id":557,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5214:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":302,"src":"5214:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":559,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"5230:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"5239:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":555,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:6"},{"condition":{"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:6","subExpression":{"arguments":[{"id":565,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5286:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":566,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5293:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":564,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"5262:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":587,"nodeType":"IfStatement","src":"5257:201:6","trueBody":{"id":586,"nodeType":"Block","src":"5308:150:6","statements":[{"expression":{"arguments":[{"id":570,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5342:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":573,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5364:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":302,"src":"5364:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":575,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"5380:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":571,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:6","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":569,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"5322:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"ExpressionStatement","src":"5322:71:6"},{"expression":{"arguments":[{"id":582,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5427:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":583,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5434:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":581,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"5407:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"ExpressionStatement","src":"5407:40:6"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"4513:566:6","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":589,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:6","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"token","nameLocation":"5113:5:6","nodeType":"VariableDeclaration","scope":589,"src":"5106:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":545,"nodeType":"UserDefinedTypeName","pathNode":{"id":544,"name":"IERC20","nameLocations":["5106:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"5106:6:6"},"referencedDeclaration":315,"src":"5106:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"spender","nameLocation":"5128:7:6","nodeType":"VariableDeclaration","scope":589,"src":"5120:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"value","nameLocation":"5145:5:6","nodeType":"VariableDeclaration","scope":589,"src":"5137:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:6"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"5161:0:6"},"scope":805,"src":"5084:380:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":631,"nodeType":"Block","src":"5911:219:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":602,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"5925:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:6","memberName":"code","nodeType":"MemberAccess","src":"5925:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:6","memberName":"length","nodeType":"MemberAccess","src":"5925:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:6","subExpression":{"arguments":[{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"6034:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"6038:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":618,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"6045:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":614,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"6012:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:6","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6012:21:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":629,"nodeType":"IfStatement","src":"6007:117:6","trueBody":{"id":628,"nodeType":"Block","src":"6052:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":624,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"6106:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:6","typeDescriptions":{}}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":621,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"6073:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":627,"nodeType":"RevertStatement","src":"6066:47:6"}]}},"id":630,"nodeType":"IfStatement","src":"5921:203:6","trueBody":{"id":613,"nodeType":"Block","src":"5946:55:6","statements":[{"expression":{"arguments":[{"id":608,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"5973:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":609,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"5980:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"5984:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":607,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5960:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"ExpressionStatement","src":"5960:30:6"}]}}]},"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"5470:333:6","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":632,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:6","nodeType":"FunctionDefinition","parameters":{"id":600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"token","nameLocation":"5849:5:6","nodeType":"VariableDeclaration","scope":632,"src":"5840:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":592,"nodeType":"UserDefinedTypeName","pathNode":{"id":591,"name":"IERC1363","nameLocations":["5840:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5840:8:6"},"referencedDeclaration":229,"src":"5840:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"to","nameLocation":"5864:2:6","nodeType":"VariableDeclaration","scope":632,"src":"5856:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"value","nameLocation":"5876:5:6","nodeType":"VariableDeclaration","scope":632,"src":"5868:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"data","nameLocation":"5896:4:6","nodeType":"VariableDeclaration","scope":632,"src":"5883:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":598,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:6"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[],"src":"5911:0:6"},"scope":805,"src":"5808:322:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":678,"nodeType":"Block","src":"6649:239:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":647,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"6663:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:6","memberName":"code","nodeType":"MemberAccess","src":"6663:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:6","memberName":"length","nodeType":"MemberAccess","src":"6663:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:6","subExpression":{"arguments":[{"id":662,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"6786:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":663,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"6792:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6796:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":665,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"6803:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":660,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"6760:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:6","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6760:25:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":676,"nodeType":"IfStatement","src":"6755:127:6","trueBody":{"id":675,"nodeType":"Block","src":"6810:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":671,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"6864:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:6","typeDescriptions":{}}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":668,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"6831:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":674,"nodeType":"RevertStatement","src":"6824:47:6"}]}},"id":677,"nodeType":"IfStatement","src":"6659:223:6","trueBody":{"id":659,"nodeType":"Block","src":"6684:65:6","statements":[{"expression":{"arguments":[{"id":653,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"6715:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":654,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"6722:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"6728:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6732:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":652,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6698:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"ExpressionStatement","src":"6698:40:6"}]}}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"6136:341:6","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":679,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:6","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"token","nameLocation":"6536:5:6","nodeType":"VariableDeclaration","scope":679,"src":"6527:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":635,"nodeType":"UserDefinedTypeName","pathNode":{"id":634,"name":"IERC1363","nameLocations":["6527:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6527:8:6"},"referencedDeclaration":229,"src":"6527:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"from","nameLocation":"6559:4:6","nodeType":"VariableDeclaration","scope":679,"src":"6551:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"to","nameLocation":"6581:2:6","nodeType":"VariableDeclaration","scope":679,"src":"6573:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"value","nameLocation":"6601:5:6","nodeType":"VariableDeclaration","scope":679,"src":"6593:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"data","nameLocation":"6629:4:6","nodeType":"VariableDeclaration","scope":679,"src":"6616:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":643,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:6"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"6649:0:6"},"scope":805,"src":"6482:406:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":721,"nodeType":"Block","src":"7655:218:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":692,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"7669:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:6","memberName":"code","nodeType":"MemberAccess","src":"7669:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:6","memberName":"length","nodeType":"MemberAccess","src":"7669:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:6","subExpression":{"arguments":[{"id":706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"7777:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7781:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":708,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"7788:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":704,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"7756:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:6","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7756:20:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":719,"nodeType":"IfStatement","src":"7751:116:6","trueBody":{"id":718,"nodeType":"Block","src":"7795:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":714,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"7849:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:6","typeDescriptions":{}}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":711,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"7816:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"RevertStatement","src":"7809:47:6"}]}},"id":720,"nodeType":"IfStatement","src":"7665:202:6","trueBody":{"id":703,"nodeType":"Block","src":"7690:55:6","statements":[{"expression":{"arguments":[{"id":698,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"7717:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":699,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"7724:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7728:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":697,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7704:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"ExpressionStatement","src":"7704:30:6"}]}}]},"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"6894:654:6","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":722,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:6","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"token","nameLocation":"7593:5:6","nodeType":"VariableDeclaration","scope":722,"src":"7584:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":682,"nodeType":"UserDefinedTypeName","pathNode":{"id":681,"name":"IERC1363","nameLocations":["7584:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"7584:8:6"},"referencedDeclaration":229,"src":"7584:8:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"to","nameLocation":"7608:2:6","nodeType":"VariableDeclaration","scope":722,"src":"7600:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"value","nameLocation":"7620:5:6","nodeType":"VariableDeclaration","scope":722,"src":"7612:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"data","nameLocation":"7640:4:6","nodeType":"VariableDeclaration","scope":722,"src":"7627:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":688,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:6"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"7655:0:6"},"scope":805,"src":"7553:320:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":762,"nodeType":"Block","src":"8440:650:6","statements":[{"assignments":[732],"declarations":[{"constant":false,"id":732,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:6","nodeType":"VariableDeclaration","scope":762,"src":"8450:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":733,"nodeType":"VariableDeclarationStatement","src":"8450:18:6"},{"assignments":[735],"declarations":[{"constant":false,"id":735,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:6","nodeType":"VariableDeclaration","scope":762,"src":"8478:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":736,"nodeType":"VariableDeclarationStatement","src":"8478:19:6"},{"AST":{"nodeType":"YulBlock","src":"8532:396:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8546:75:6","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"8566:3:6"},"nodeType":"YulFunctionCall","src":"8566:5:6"},{"name":"token","nodeType":"YulIdentifier","src":"8573:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"8580:1:6","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8587:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"8593:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8583:3:6"},"nodeType":"YulFunctionCall","src":"8583:15:6"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8606:4:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8600:5:6"},"nodeType":"YulFunctionCall","src":"8600:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"8613:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8616:4:6","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"8561:4:6"},"nodeType":"YulFunctionCall","src":"8561:60:6"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"8550:7:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"8682:157:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8700:22:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8717:4:6","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8711:5:6"},"nodeType":"YulFunctionCall","src":"8711:11:6"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8704:3:6","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8754:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8759:1:6","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8762:14:6"},"nodeType":"YulFunctionCall","src":"8762:16:6"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8739:14:6"},"nodeType":"YulFunctionCall","src":"8739:40:6"},"nodeType":"YulExpressionStatement","src":"8739:40:6"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8803:3:6"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8808:14:6"},"nodeType":"YulFunctionCall","src":"8808:16:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8796:6:6"},"nodeType":"YulFunctionCall","src":"8796:29:6"},"nodeType":"YulExpressionStatement","src":"8796:29:6"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"8673:7:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8666:6:6"},"nodeType":"YulFunctionCall","src":"8666:15:6"},"nodeType":"YulIf","src":"8663:176:6"},{"nodeType":"YulAssignment","src":"8852:30:6","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8866:14:6"},"nodeType":"YulFunctionCall","src":"8866:16:6"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8852:10:6"}]},{"nodeType":"YulAssignment","src":"8895:23:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8916:1:6","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8910:5:6"},"nodeType":"YulFunctionCall","src":"8910:8:6"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8895:11:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":728,"isOffset":false,"isSlot":false,"src":"8587:4:6","valueSize":1},{"declaration":728,"isOffset":false,"isSlot":false,"src":"8606:4:6","valueSize":1},{"declaration":732,"isOffset":false,"isSlot":false,"src":"8852:10:6","valueSize":1},{"declaration":735,"isOffset":false,"isSlot":false,"src":"8895:11:6","valueSize":1},{"declaration":726,"isOffset":false,"isSlot":false,"src":"8573:5:6","valueSize":1}],"flags":["memory-safe"],"id":737,"nodeType":"InlineAssembly","src":"8507:421:6"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":738,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"8942:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"8994:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:6","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":743,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"8968:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:6","typeDescriptions":{}}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:6","memberName":"code","nodeType":"MemberAccess","src":"8960:19:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:6","memberName":"length","nodeType":"MemberAccess","src":"8960:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":761,"nodeType":"IfStatement","src":"8938:146:6","trueBody":{"id":760,"nodeType":"Block","src":"9012:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":756,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"9066:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:6","typeDescriptions":{}}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":753,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"9033:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"RevertStatement","src":"9026:47:6"}]}}]},"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"7879:486:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":763,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:6","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"token","nameLocation":"8406:5:6","nodeType":"VariableDeclaration","scope":763,"src":"8399:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":725,"nodeType":"UserDefinedTypeName","pathNode":{"id":724,"name":"IERC20","nameLocations":["8399:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"8399:6:6"},"referencedDeclaration":315,"src":"8399:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"data","nameLocation":"8426:4:6","nodeType":"VariableDeclaration","scope":763,"src":"8413:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":727,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:6"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"8440:0:6"},"scope":805,"src":"8370:720:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":803,"nodeType":"Block","src":"9681:391:6","statements":[{"assignments":[775],"declarations":[{"constant":false,"id":775,"mutability":"mutable","name":"success","nameLocation":"9696:7:6","nodeType":"VariableDeclaration","scope":803,"src":"9691:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":774,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":776,"nodeType":"VariableDeclarationStatement","src":"9691:12:6"},{"assignments":[778],"declarations":[{"constant":false,"id":778,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:6","nodeType":"VariableDeclaration","scope":803,"src":"9713:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":779,"nodeType":"VariableDeclarationStatement","src":"9713:18:6"},{"assignments":[781],"declarations":[{"constant":false,"id":781,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:6","nodeType":"VariableDeclaration","scope":803,"src":"9741:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":782,"nodeType":"VariableDeclarationStatement","src":"9741:19:6"},{"AST":{"nodeType":"YulBlock","src":"9795:174:6","statements":[{"nodeType":"YulAssignment","src":"9809:71:6","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9825:3:6"},"nodeType":"YulFunctionCall","src":"9825:5:6"},{"name":"token","nodeType":"YulIdentifier","src":"9832:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"9839:1:6","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9846:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"9852:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9842:3:6"},"nodeType":"YulFunctionCall","src":"9842:15:6"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9865:4:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9859:5:6"},"nodeType":"YulFunctionCall","src":"9859:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"9872:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9875:4:6","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9820:4:6"},"nodeType":"YulFunctionCall","src":"9820:60:6"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9809:7:6"}]},{"nodeType":"YulAssignment","src":"9893:30:6","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9907:14:6"},"nodeType":"YulFunctionCall","src":"9907:16:6"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9893:10:6"}]},{"nodeType":"YulAssignment","src":"9936:23:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9957:1:6","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9951:5:6"},"nodeType":"YulFunctionCall","src":"9951:8:6"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9936:11:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":769,"isOffset":false,"isSlot":false,"src":"9846:4:6","valueSize":1},{"declaration":769,"isOffset":false,"isSlot":false,"src":"9865:4:6","valueSize":1},{"declaration":778,"isOffset":false,"isSlot":false,"src":"9893:10:6","valueSize":1},{"declaration":781,"isOffset":false,"isSlot":false,"src":"9936:11:6","valueSize":1},{"declaration":775,"isOffset":false,"isSlot":false,"src":"9809:7:6","valueSize":1},{"declaration":767,"isOffset":false,"isSlot":false,"src":"9832:5:6","valueSize":1}],"flags":["memory-safe"],"id":783,"nodeType":"InlineAssembly","src":"9770:199:6"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"9985:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":785,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"9997:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"10048:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:6","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":790,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"10023:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:6","typeDescriptions":{}}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:6","memberName":"code","nodeType":"MemberAccess","src":"10015:19:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:6","memberName":"length","nodeType":"MemberAccess","src":"10015:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":773,"id":802,"nodeType":"Return","src":"9978:87:6"}]},"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"9096:491:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":804,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:6","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"token","nameLocation":"9632:5:6","nodeType":"VariableDeclaration","scope":804,"src":"9625:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":766,"nodeType":"UserDefinedTypeName","pathNode":{"id":765,"name":"IERC20","nameLocations":["9625:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"9625:6:6"},"referencedDeclaration":315,"src":"9625:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"data","nameLocation":"9652:4:6","nodeType":"VariableDeclaration","scope":804,"src":"9639:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":768,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:6"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":804,"src":"9675:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":771,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:6"},"scope":805,"src":"9592:480:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":806,"src":"698:9376:6","usedErrors":[353,362],"usedEvents":[]}],"src":"115:9960:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1103],"IERC721":[922]},"id":923,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":807,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":809,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":923,"sourceUnit":1104,"src":"134:62:7","symbolAliases":[{"foreign":{"id":808,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"142:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":811,"name":"IERC165","nameLocations":["288:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1103,"src":"288:7:7"},"id":812,"nodeType":"InheritanceSpecifier","src":"288:7:7"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"198:68:7","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":922,"linearizedBaseContracts":[922,1103],"name":"IERC721","nameLocation":"277:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"302:88:7","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":821,"name":"Transfer","nameLocation":"401:8:7","nodeType":"EventDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:7","nodeType":"VariableDeclaration","scope":821,"src":"410:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":817,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:7","nodeType":"VariableDeclaration","scope":821,"src":"432:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":819,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:7","nodeType":"VariableDeclaration","scope":821,"src":"452:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:7"},"src":"395:82:7"},{"anonymous":false,"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"483:94:7","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":830,"name":"Approval","nameLocation":"588:8:7","nodeType":"EventDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:7","nodeType":"VariableDeclaration","scope":830,"src":"597:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:7","nodeType":"VariableDeclaration","scope":830,"src":"620:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:7","nodeType":"VariableDeclaration","scope":830,"src":"646:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:7"},"src":"582:89:7"},{"anonymous":false,"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"677:117:7","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":839,"name":"ApprovalForAll","nameLocation":"805:14:7","nodeType":"EventDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:7","nodeType":"VariableDeclaration","scope":839,"src":"820:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:7","nodeType":"VariableDeclaration","scope":839,"src":"843:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:7","nodeType":"VariableDeclaration","scope":839,"src":"869:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":836,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:7"},"src":"799:85:7"},{"documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"890:76:7","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":847,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:7","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"owner","nameLocation":"998:5:7","nodeType":"VariableDeclaration","scope":847,"src":"990:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:7"},"returnParameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"balance","nameLocation":"1036:7:7","nodeType":"VariableDeclaration","scope":847,"src":"1028:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:7"},"scope":922,"src":"971:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"1051:131:7","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":855,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:7","nodeType":"FunctionDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:7","nodeType":"VariableDeclaration","scope":855,"src":"1204:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:7"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"owner","nameLocation":"1252:5:7","nodeType":"VariableDeclaration","scope":855,"src":"1244:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:7"},"scope":922,"src":"1187:72:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"1265:565:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":867,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:7","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"from","nameLocation":"1869:4:7","nodeType":"VariableDeclaration","scope":867,"src":"1861:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"to","nameLocation":"1883:2:7","nodeType":"VariableDeclaration","scope":867,"src":"1875:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:7","nodeType":"VariableDeclaration","scope":867,"src":"1887:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"data","nameLocation":"1919:4:7","nodeType":"VariableDeclaration","scope":867,"src":"1904:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":863,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:7"},"returnParameters":{"id":866,"nodeType":"ParameterList","parameters":[],"src":"1933:0:7"},"scope":922,"src":"1835:99:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"1940:706:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":877,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:7","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"from","nameLocation":"2685:4:7","nodeType":"VariableDeclaration","scope":877,"src":"2677:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"to","nameLocation":"2699:2:7","nodeType":"VariableDeclaration","scope":877,"src":"2691:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:7","nodeType":"VariableDeclaration","scope":877,"src":"2703:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:7"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"2728:0:7"},"scope":922,"src":"2651:78:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"2735:733:7","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":887,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:7","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"from","nameLocation":"3503:4:7","nodeType":"VariableDeclaration","scope":887,"src":"3495:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"to","nameLocation":"3517:2:7","nodeType":"VariableDeclaration","scope":887,"src":"3509:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:7","nodeType":"VariableDeclaration","scope":887,"src":"3521:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:7"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"3546:0:7"},"scope":922,"src":"3473:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"3553:452:7","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":895,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:7","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"to","nameLocation":"4035:2:7","nodeType":"VariableDeclaration","scope":895,"src":"4027:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:7","nodeType":"VariableDeclaration","scope":895,"src":"4039:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:7"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"4064:0:7"},"scope":922,"src":"4010:55:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"4071:315:7","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":903,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:7","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"operator","nameLocation":"4426:8:7","nodeType":"VariableDeclaration","scope":903,"src":"4418:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"approved","nameLocation":"4441:8:7","nodeType":"VariableDeclaration","scope":903,"src":"4436:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":899,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:7"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[],"src":"4459:0:7"},"scope":922,"src":"4391:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"4466:139:7","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":911,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:7","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:7","nodeType":"VariableDeclaration","scope":911,"src":"4631:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:7"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"operator","nameLocation":"4679:8:7","nodeType":"VariableDeclaration","scope":911,"src":"4671:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:7"},"scope":922,"src":"4610:79:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"4695:138:7","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":921,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:7","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"owner","nameLocation":"4872:5:7","nodeType":"VariableDeclaration","scope":921,"src":"4864:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"operator","nameLocation":"4887:8:7","nodeType":"VariableDeclaration","scope":921,"src":"4879:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:7"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":921,"src":"4920:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":918,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:7"},"scope":922,"src":"4838:88:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":923,"src":"267:4661:7","usedErrors":[],"usedEvents":[821,830,839]}],"src":"108:4821:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[940]},"id":941,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":924,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"142:154:8","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":940,"linearizedBaseContracts":[940],"name":"IERC721Receiver","nameLocation":"307:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"329:500:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":939,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:8","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"operator","nameLocation":"877:8:8","nodeType":"VariableDeclaration","scope":939,"src":"869:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"from","nameLocation":"903:4:8","nodeType":"VariableDeclaration","scope":939,"src":"895:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:8","nodeType":"VariableDeclaration","scope":939,"src":"917:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"data","nameLocation":"957:4:8","nodeType":"VariableDeclaration","scope":939,"src":"942:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:8"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":939,"src":"986:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":936,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:8"},"scope":940,"src":"834:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":941,"src":"297:699:8","usedErrors":[],"usedEvents":[]}],"src":"116:881:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[970]},"id":971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":942,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":970,"linearizedBaseContracts":[970],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":951,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":948,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":947,"id":950,"nodeType":"Return","src":"728:17:9"}]},"id":952,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":952,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":970,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":960,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":957,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":956,"id":959,"nodeType":"Return","src":"835:15:9"}]},"id":961,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":961,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":954,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":970,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":968,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":965,"id":967,"nodeType":"Return","src":"945:8:9"}]},"id":969,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":969,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":970,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":971,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1022]},"id":1023,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":972,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"125:489:10","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1022,"linearizedBaseContracts":[1022],"name":"Panic","nameLocation":"665:5:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"677:36:10","text":"@dev generic / unspecified error"},"id":977,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:10","nodeType":"VariableDeclaration","scope":1022,"src":"718:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"764:37:10","text":"@dev used by the assert() builtin"},"id":981,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:10","nodeType":"VariableDeclaration","scope":1022,"src":"806:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"851:41:10","text":"@dev arithmetic underflow or overflow"},"id":985,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:10","nodeType":"VariableDeclaration","scope":1022,"src":"897:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:10","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"950:35:10","text":"@dev division or modulo by zero"},"id":989,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:10","nodeType":"VariableDeclaration","scope":1022,"src":"990:49:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"1045:30:10","text":"@dev enum conversion error"},"id":993,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:10","nodeType":"VariableDeclaration","scope":1022,"src":"1080:54:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:10","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"1140:36:10","text":"@dev invalid encoding in storage"},"id":997,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:10","nodeType":"VariableDeclaration","scope":1022,"src":"1181:55:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"1242:24:10","text":"@dev empty array pop"},"id":1001,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:10","nodeType":"VariableDeclaration","scope":1022,"src":"1271:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"1325:35:10","text":"@dev array out of bounds access"},"id":1005,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:10","nodeType":"VariableDeclaration","scope":1022,"src":"1365:52:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"1423:65:10","text":"@dev resource error (too large allocation or too large array)"},"id":1009,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:10","nodeType":"VariableDeclaration","scope":1022,"src":"1493:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"1546:42:10","text":"@dev calling invalid internal function"},"id":1013,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:10","nodeType":"VariableDeclaration","scope":1022,"src":"1593:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:10","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1020,"nodeType":"Block","src":"1819:151:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:10","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:10"},"nodeType":"YulFunctionCall","src":"1868:24:10"},"nodeType":"YulExpressionStatement","src":"1868:24:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:10","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:10"},"nodeType":"YulFunctionCall","src":"1905:18:10"},"nodeType":"YulExpressionStatement","src":"1905:18:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:10","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:10"},"nodeType":"YulFunctionCall","src":"1936:18:10"},"nodeType":"YulExpressionStatement","src":"1936:18:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1016,"isOffset":false,"isSlot":false,"src":"1918:4:10","valueSize":1}],"flags":["memory-safe"],"id":1019,"nodeType":"InlineAssembly","src":"1829:135:10"}]},"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"1658:113:10","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1021,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:10","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"code","nameLocation":"1799:4:10","nodeType":"VariableDeclaration","scope":1021,"src":"1791:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:10"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"1819:0:10"},"scope":1022,"src":"1776:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1023,"src":"657:1315:10","usedErrors":[],"usedEvents":[]}],"src":"99:1874:10"},"id":10},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1091]},"id":1092,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1024,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"135:894:11","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1091,"linearizedBaseContracts":[1091],"name":"ReentrancyGuard","nameLocation":"1048:15:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1028,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:11","nodeType":"VariableDeclaration","scope":1091,"src":"1818:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1031,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:11","nodeType":"VariableDeclaration","scope":1091,"src":"1864:36:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1033,"mutability":"mutable","name":"_status","nameLocation":"1923:7:11","nodeType":"VariableDeclaration","scope":1091,"src":"1907:23:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"1937:52:11","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1036,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:11","nodeType":"ErrorDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[],"src":"2028:2:11"},"src":"1994:37:11"},{"body":{"id":1043,"nodeType":"Block","src":"2051:38:11","statements":[{"expression":{"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1039,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2061:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1040,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"2071:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1042,"nodeType":"ExpressionStatement","src":"2061:21:11"}]},"id":1044,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[],"src":"2048:2:11"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"2051:0:11"},"scope":1091,"src":"2037:52:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"2490:79:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1047,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"2500:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1049,"nodeType":"ExpressionStatement","src":"2500:21:11"},{"id":1050,"nodeType":"PlaceholderStatement","src":"2531:1:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1051,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2542:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"2542:20:11"}]},"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"2095:366:11","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1055,"name":"nonReentrant","nameLocation":"2475:12:11","nodeType":"ModifierDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"2487:2:11"},"src":"2466:103:11","virtual":false,"visibility":"internal"},{"body":{"id":1070,"nodeType":"Block","src":"2614:268:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1058,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2702:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1059,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2713:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1065,"nodeType":"IfStatement","src":"2698:86:11","trueBody":{"id":1064,"nodeType":"Block","src":"2722:62:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1061,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2743:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1063,"nodeType":"RevertStatement","src":"2736:37:11"}]}},{"expression":{"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1066,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2858:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1067,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2868:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1069,"nodeType":"ExpressionStatement","src":"2858:17:11"}]},"id":1071,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:11","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[],"src":"2603:2:11"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[],"src":"2614:0:11"},"scope":1091,"src":"2575:307:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1078,"nodeType":"Block","src":"2926:170:11","statements":[{"expression":{"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1074,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"3068:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1075,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"3078:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1077,"nodeType":"ExpressionStatement","src":"3068:21:11"}]},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:11","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[],"src":"2915:2:11"},"returnParameters":{"id":1073,"nodeType":"ParameterList","parameters":[],"src":"2926:0:11"},"scope":1091,"src":"2888:208:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1089,"nodeType":"Block","src":"3339:42:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1085,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"3356:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1086,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3367:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1084,"id":1088,"nodeType":"Return","src":"3349:25:11"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"3102:168:11","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:11","nodeType":"FunctionDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"3307:2:11"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"3333:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1082,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:11"},"scope":1091,"src":"3275:106:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1092,"src":"1030:2353:11","usedErrors":[1036],"usedEvents":[]}],"src":"109:3275:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1103]},"id":1104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1093,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"142:280:12","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1103,"linearizedBaseContracts":[1103],"name":"IERC165","nameLocation":"433:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"447:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1102,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:12","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:12","nodeType":"VariableDeclaration","scope":1102,"src":"819:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1096,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:12"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1102,"src":"862:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1099,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:12"},"scope":1103,"src":"792:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1104,"src":"423:447:12","usedErrors":[],"usedEvents":[]}],"src":"115:756:12"},"id":12},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2724],"Panic":[1022],"SafeCast":[4489]},"id":2725,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1105,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":1107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2725,"sourceUnit":1023,"src":"129:35:13","symbolAliases":[{"foreign":{"id":1106,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"137:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":1109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2725,"sourceUnit":4490,"src":"165:40:13","symbolAliases":[{"foreign":{"id":1108,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"173:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"207:73:13","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2724,"linearizedBaseContracts":[2724],"name":"Math","nameLocation":"289:4:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1115,"members":[{"id":1111,"name":"Floor","nameLocation":"324:5:13","nodeType":"EnumValue","src":"324:5:13"},{"id":1112,"name":"Ceil","nameLocation":"367:4:13","nodeType":"EnumValue","src":"367:4:13"},{"id":1113,"name":"Trunc","nameLocation":"409:5:13","nodeType":"EnumValue","src":"409:5:13"},{"id":1114,"name":"Expand","nameLocation":"439:6:13","nodeType":"EnumValue","src":"439:6:13"}],"name":"Rounding","nameLocation":"305:8:13","nodeType":"EnumDefinition","src":"300:169:13"},{"body":{"id":1128,"nodeType":"Block","src":"731:112:13","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:13","statements":[{"nodeType":"YulAssignment","src":"780:16:13","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:13"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:13"},"nodeType":"YulFunctionCall","src":"787:9:13"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:13"}]},{"nodeType":"YulAssignment","src":"809:18:13","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:13"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:13"},"nodeType":"YulFunctionCall","src":"817:10:13"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1118,"isOffset":false,"isSlot":false,"src":"791:1:13","valueSize":1},{"declaration":1118,"isOffset":false,"isSlot":false,"src":"825:1:13","valueSize":1},{"declaration":1120,"isOffset":false,"isSlot":false,"src":"794:1:13","valueSize":1},{"declaration":1123,"isOffset":false,"isSlot":false,"src":"809:4:13","valueSize":1},{"declaration":1125,"isOffset":false,"isSlot":false,"src":"780:3:13","valueSize":1},{"declaration":1125,"isOffset":false,"isSlot":false,"src":"820:3:13","valueSize":1}],"flags":["memory-safe"],"id":1127,"nodeType":"InlineAssembly","src":"741:96:13"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"475:163:13","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":1129,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:13","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"a","nameLocation":"667:1:13","nodeType":"VariableDeclaration","scope":1129,"src":"659:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"b","nameLocation":"678:1:13","nodeType":"VariableDeclaration","scope":1129,"src":"670:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:13"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"high","nameLocation":"712:4:13","nodeType":"VariableDeclaration","scope":1129,"src":"704:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"low","nameLocation":"726:3:13","nodeType":"VariableDeclaration","scope":1129,"src":"718:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:13"},"scope":2724,"src":"643:200:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1142,"nodeType":"Block","src":"1115:462:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:13","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:13"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:13"},"nodeType":"YulFunctionCall","src":"1474:6:13"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:13"},"nodeType":"YulFunctionCall","src":"1461:20:13"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:13","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:13","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:13"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:13"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:13"},"nodeType":"YulFunctionCall","src":"1501:9:13"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:13"}]},{"nodeType":"YulAssignment","src":"1523:38:13","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:13"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:13"},"nodeType":"YulFunctionCall","src":"1535:12:13"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:13"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:13"},"nodeType":"YulFunctionCall","src":"1549:11:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:13"},"nodeType":"YulFunctionCall","src":"1531:30:13"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1132,"isOffset":false,"isSlot":false,"src":"1468:1:13","valueSize":1},{"declaration":1132,"isOffset":false,"isSlot":false,"src":"1505:1:13","valueSize":1},{"declaration":1134,"isOffset":false,"isSlot":false,"src":"1471:1:13","valueSize":1},{"declaration":1134,"isOffset":false,"isSlot":false,"src":"1508:1:13","valueSize":1},{"declaration":1137,"isOffset":false,"isSlot":false,"src":"1523:4:13","valueSize":1},{"declaration":1139,"isOffset":false,"isSlot":false,"src":"1494:3:13","valueSize":1},{"declaration":1139,"isOffset":false,"isSlot":false,"src":"1543:3:13","valueSize":1},{"declaration":1139,"isOffset":false,"isSlot":false,"src":"1556:3:13","valueSize":1}],"flags":["memory-safe"],"id":1141,"nodeType":"InlineAssembly","src":"1412:159:13"}]},"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"849:173:13","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:13","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"a","nameLocation":"1051:1:13","nodeType":"VariableDeclaration","scope":1143,"src":"1043:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"b","nameLocation":"1062:1:13","nodeType":"VariableDeclaration","scope":1143,"src":"1054:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:13"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"high","nameLocation":"1096:4:13","nodeType":"VariableDeclaration","scope":1143,"src":"1088:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"low","nameLocation":"1110:3:13","nodeType":"VariableDeclaration","scope":1143,"src":"1102:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:13"},"scope":2724,"src":"1027:550:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1177,"nodeType":"Block","src":"1784:149:13","statements":[{"id":1176,"nodeType":"UncheckedBlock","src":"1794:133:13","statements":[{"assignments":[1156],"declarations":[{"constant":false,"id":1156,"mutability":"mutable","name":"c","nameLocation":"1826:1:13","nodeType":"VariableDeclaration","scope":1176,"src":"1818:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1160,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1157,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"1830:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1158,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"1834:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:13"},{"expression":{"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1161,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"1849:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1162,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"1859:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1163,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"1864:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1166,"nodeType":"ExpressionStatement","src":"1849:16:13"},{"expression":{"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1879:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1168,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"1888:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1171,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"1908:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1169,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"1892:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"1892:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1175,"nodeType":"ExpressionStatement","src":"1879:37:13"}]}]},"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"1583:105:13","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:13","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"a","nameLocation":"1717:1:13","nodeType":"VariableDeclaration","scope":1178,"src":"1709:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"b","nameLocation":"1728:1:13","nodeType":"VariableDeclaration","scope":1178,"src":"1720:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:13"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"success","nameLocation":"1759:7:13","nodeType":"VariableDeclaration","scope":1178,"src":"1754:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"result","nameLocation":"1776:6:13","nodeType":"VariableDeclaration","scope":1178,"src":"1768:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:13"},"scope":2724,"src":"1693:240:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1212,"nodeType":"Block","src":"2143:149:13","statements":[{"id":1211,"nodeType":"UncheckedBlock","src":"2153:133:13","statements":[{"assignments":[1191],"declarations":[{"constant":false,"id":1191,"mutability":"mutable","name":"c","nameLocation":"2185:1:13","nodeType":"VariableDeclaration","scope":1211,"src":"2177:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1195,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"2189:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1193,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"2193:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:13"},{"expression":{"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1196,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"2208:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"2218:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"2223:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1201,"nodeType":"ExpressionStatement","src":"2208:16:13"},{"expression":{"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"2238:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1203,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"2247:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1206,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"2267:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1204,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"2251:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"2251:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1210,"nodeType":"ExpressionStatement","src":"2238:37:13"}]}]},"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"1939:108:13","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:13","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"a","nameLocation":"2076:1:13","nodeType":"VariableDeclaration","scope":1213,"src":"2068:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"b","nameLocation":"2087:1:13","nodeType":"VariableDeclaration","scope":1213,"src":"2079:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:13"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"success","nameLocation":"2118:7:13","nodeType":"VariableDeclaration","scope":1213,"src":"2113:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1185,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"result","nameLocation":"2135:6:13","nodeType":"VariableDeclaration","scope":1213,"src":"2127:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:13"},"scope":2724,"src":"2052:240:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1242,"nodeType":"Block","src":"2505:391:13","statements":[{"id":1241,"nodeType":"UncheckedBlock","src":"2515:375:13","statements":[{"assignments":[1226],"declarations":[{"constant":false,"id":1226,"mutability":"mutable","name":"c","nameLocation":"2547:1:13","nodeType":"VariableDeclaration","scope":1241,"src":"2539:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1230,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"2551:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1228,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"2555:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:13"},{"AST":{"nodeType":"YulBlock","src":"2595:188:13","statements":[{"nodeType":"YulAssignment","src":"2727:42:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:13"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:13"},"nodeType":"YulFunctionCall","src":"2744:9:13"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:13"},"nodeType":"YulFunctionCall","src":"2741:16:13"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:13"},"nodeType":"YulFunctionCall","src":"2759:9:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:13"},"nodeType":"YulFunctionCall","src":"2738:31:13"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1216,"isOffset":false,"isSlot":false,"src":"2751:1:13","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"2766:1:13","valueSize":1},{"declaration":1218,"isOffset":false,"isSlot":false,"src":"2755:1:13","valueSize":1},{"declaration":1226,"isOffset":false,"isSlot":false,"src":"2748:1:13","valueSize":1},{"declaration":1221,"isOffset":false,"isSlot":false,"src":"2727:7:13","valueSize":1}],"flags":["memory-safe"],"id":1231,"nodeType":"InlineAssembly","src":"2570:213:13"},{"expression":{"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"2842:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"2851:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1236,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"2871:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1234,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"2855:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"2855:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1240,"nodeType":"ExpressionStatement","src":"2842:37:13"}]}]},"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"2298:111:13","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":1243,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:13","nodeType":"FunctionDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"a","nameLocation":"2438:1:13","nodeType":"VariableDeclaration","scope":1243,"src":"2430:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"b","nameLocation":"2449:1:13","nodeType":"VariableDeclaration","scope":1243,"src":"2441:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:13"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"success","nameLocation":"2480:7:13","nodeType":"VariableDeclaration","scope":1243,"src":"2475:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1220,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"result","nameLocation":"2497:6:13","nodeType":"VariableDeclaration","scope":1243,"src":"2489:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:13"},"scope":2724,"src":"2414:482:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1263,"nodeType":"Block","src":"3111:231:13","statements":[{"id":1262,"nodeType":"UncheckedBlock","src":"3121:215:13","statements":[{"expression":{"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1255,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"3145:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3155:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1260,"nodeType":"ExpressionStatement","src":"3145:15:13"},{"AST":{"nodeType":"YulBlock","src":"3199:127:13","statements":[{"nodeType":"YulAssignment","src":"3293:19:13","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:13"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:13"},"nodeType":"YulFunctionCall","src":"3303:9:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1246,"isOffset":false,"isSlot":false,"src":"3307:1:13","valueSize":1},{"declaration":1248,"isOffset":false,"isSlot":false,"src":"3310:1:13","valueSize":1},{"declaration":1253,"isOffset":false,"isSlot":false,"src":"3293:6:13","valueSize":1}],"flags":["memory-safe"],"id":1261,"nodeType":"InlineAssembly","src":"3174:152:13"}]}]},"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"2902:113:13","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1264,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:13","nodeType":"FunctionDefinition","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"a","nameLocation":"3044:1:13","nodeType":"VariableDeclaration","scope":1264,"src":"3036:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"b","nameLocation":"3055:1:13","nodeType":"VariableDeclaration","scope":1264,"src":"3047:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:13"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"success","nameLocation":"3086:7:13","nodeType":"VariableDeclaration","scope":1264,"src":"3081:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1250,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"result","nameLocation":"3103:6:13","nodeType":"VariableDeclaration","scope":1264,"src":"3095:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:13"},"scope":2724,"src":"3020:322:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1284,"nodeType":"Block","src":"3567:231:13","statements":[{"id":1283,"nodeType":"UncheckedBlock","src":"3577:215:13","statements":[{"expression":{"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1276,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"3601:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"3611:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1281,"nodeType":"ExpressionStatement","src":"3601:15:13"},{"AST":{"nodeType":"YulBlock","src":"3655:127:13","statements":[{"nodeType":"YulAssignment","src":"3749:19:13","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:13"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:13"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:13"},"nodeType":"YulFunctionCall","src":"3759:9:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1267,"isOffset":false,"isSlot":false,"src":"3763:1:13","valueSize":1},{"declaration":1269,"isOffset":false,"isSlot":false,"src":"3766:1:13","valueSize":1},{"declaration":1274,"isOffset":false,"isSlot":false,"src":"3749:6:13","valueSize":1}],"flags":["memory-safe"],"id":1282,"nodeType":"InlineAssembly","src":"3630:152:13"}]}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"3348:123:13","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1285,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:13","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"a","nameLocation":"3500:1:13","nodeType":"VariableDeclaration","scope":1285,"src":"3492:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"b","nameLocation":"3511:1:13","nodeType":"VariableDeclaration","scope":1285,"src":"3503:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:13"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"success","nameLocation":"3542:7:13","nodeType":"VariableDeclaration","scope":1285,"src":"3537:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1271,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"result","nameLocation":"3559:6:13","nodeType":"VariableDeclaration","scope":1285,"src":"3551:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:13"},"scope":2724,"src":"3476:322:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"3989:122:13","statements":[{"assignments":[1296,1298],"declarations":[{"constant":false,"id":1296,"mutability":"mutable","name":"success","nameLocation":"4005:7:13","nodeType":"VariableDeclaration","scope":1314,"src":"4000:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1295,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"result","nameLocation":"4022:6:13","nodeType":"VariableDeclaration","scope":1314,"src":"4014:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1303,"initialValue":{"arguments":[{"id":1300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"4039:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"4042:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1299,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"4032:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:13"},{"expression":{"arguments":[{"id":1305,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"4069:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"4078:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1307,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:13","memberName":"max","nodeType":"MemberAccess","src":"4086:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1304,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"4061:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1294,"id":1313,"nodeType":"Return","src":"4054:50:13"}]},"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"3804:103:13","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:13","nodeType":"FunctionDefinition","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"a","nameLocation":"3943:1:13","nodeType":"VariableDeclaration","scope":1315,"src":"3935:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"b","nameLocation":"3954:1:13","nodeType":"VariableDeclaration","scope":1315,"src":"3946:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:13"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1315,"src":"3980:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:13"},"scope":2724,"src":"3912:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1334,"nodeType":"Block","src":"4294:73:13","statements":[{"assignments":[null,1326],"declarations":[null,{"constant":false,"id":1326,"mutability":"mutable","name":"result","nameLocation":"4315:6:13","nodeType":"VariableDeclaration","scope":1334,"src":"4307:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1331,"initialValue":{"arguments":[{"id":1328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"4332:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1329,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"4335:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1327,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"4325:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:13"},{"expression":{"id":1332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"4354:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1324,"id":1333,"nodeType":"Return","src":"4347:13:13"}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"4117:95:13","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":1335,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:13","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"a","nameLocation":"4248:1:13","nodeType":"VariableDeclaration","scope":1335,"src":"4240:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"b","nameLocation":"4259:1:13","nodeType":"VariableDeclaration","scope":1335,"src":"4251:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:13"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1335,"src":"4285:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:13"},"scope":2724,"src":"4217:150:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1364,"nodeType":"Block","src":"4564:122:13","statements":[{"assignments":[1346,1348],"declarations":[{"constant":false,"id":1346,"mutability":"mutable","name":"success","nameLocation":"4580:7:13","nodeType":"VariableDeclaration","scope":1364,"src":"4575:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1345,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"result","nameLocation":"4597:6:13","nodeType":"VariableDeclaration","scope":1364,"src":"4589:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1353,"initialValue":{"arguments":[{"id":1350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"4614:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1351,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"4617:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1349,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"4607:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:13"},{"expression":{"arguments":[{"id":1355,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"4644:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1356,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"4653:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:13","memberName":"max","nodeType":"MemberAccess","src":"4661:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1354,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"4636:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1344,"id":1363,"nodeType":"Return","src":"4629:50:13"}]},"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"4373:109:13","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1365,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:13","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"a","nameLocation":"4518:1:13","nodeType":"VariableDeclaration","scope":1365,"src":"4510:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"b","nameLocation":"4529:1:13","nodeType":"VariableDeclaration","scope":1365,"src":"4521:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:13"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"4555:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:13"},"scope":2724,"src":"4487:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1391,"nodeType":"Block","src":"5158:207:13","statements":[{"id":1390,"nodeType":"UncheckedBlock","src":"5168:191:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1377,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"5306:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"5312:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1379,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"5316:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1384,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"5337:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1382,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"5321:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"5321:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1376,"id":1389,"nodeType":"Return","src":"5299:49:13"}]}]},"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"4692:374:13","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1392,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:13","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"condition","nameLocation":"5093:9:13","nodeType":"VariableDeclaration","scope":1392,"src":"5088:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1367,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"a","nameLocation":"5112:1:13","nodeType":"VariableDeclaration","scope":1392,"src":"5104:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"b","nameLocation":"5123:1:13","nodeType":"VariableDeclaration","scope":1392,"src":"5115:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:13"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1392,"src":"5149:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:13"},"scope":2724,"src":"5071:294:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1410,"nodeType":"Block","src":"5502:44:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"5527:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1404,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"5531:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"5534:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"5537:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1402,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"5519:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1401,"id":1409,"nodeType":"Return","src":"5512:27:13"}]},"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"5371:59:13","text":" @dev Returns the largest of two numbers."},"id":1411,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:13","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"a","nameLocation":"5456:1:13","nodeType":"VariableDeclaration","scope":1411,"src":"5448:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"b","nameLocation":"5467:1:13","nodeType":"VariableDeclaration","scope":1411,"src":"5459:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:13"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1411,"src":"5493:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:13"},"scope":2724,"src":"5435:111:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1429,"nodeType":"Block","src":"5684:44:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"5709:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"5713:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"5716:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1426,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"5719:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1421,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"5701:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1420,"id":1428,"nodeType":"Return","src":"5694:27:13"}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"5552:60:13","text":" @dev Returns the smallest of two numbers."},"id":1430,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:13","nodeType":"FunctionDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"a","nameLocation":"5638:1:13","nodeType":"VariableDeclaration","scope":1430,"src":"5630:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"b","nameLocation":"5649:1:13","nodeType":"VariableDeclaration","scope":1430,"src":"5641:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:13"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1430,"src":"5675:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:13"},"scope":2724,"src":"5617:111:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1452,"nodeType":"Block","src":"5912:82:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"5967:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1441,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"5971:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1443,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"5977:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1445,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"5981:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1447,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1439,"id":1451,"nodeType":"Return","src":"5959:28:13"}]},"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"5734:102:13","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:13","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"a","nameLocation":"5866:1:13","nodeType":"VariableDeclaration","scope":1453,"src":"5858:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"b","nameLocation":"5877:1:13","nodeType":"VariableDeclaration","scope":1453,"src":"5869:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:13"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"5903:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:13"},"scope":2724,"src":"5841:153:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1493,"nodeType":"Block","src":"6286:633:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"6300:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1474,"nodeType":"IfStatement","src":"6296:150:13","trueBody":{"id":1473,"nodeType":"Block","src":"6308:138:13","statements":[{"expression":{"arguments":[{"expression":{"id":1469,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6412:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1022_$","typeString":"type(library Panic)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":989,"src":"6412:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1466,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6400:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1022_$","typeString":"type(library Panic)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1021,"src":"6400:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1472,"nodeType":"ExpressionStatement","src":"6400:35:13"}]}},{"id":1492,"nodeType":"UncheckedBlock","src":"6829:84:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6876:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1475,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"6860:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"6860:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"6887:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1485,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"6896:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1489,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1462,"id":1491,"nodeType":"Return","src":"6853:49:13"}]}]},"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"6000:210:13","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:13","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"a","nameLocation":"6240:1:13","nodeType":"VariableDeclaration","scope":1494,"src":"6232:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"b","nameLocation":"6251:1:13","nodeType":"VariableDeclaration","scope":1494,"src":"6243:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:13"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1494,"src":"6277:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:13"},"scope":2724,"src":"6215:704:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1629,"nodeType":"Block","src":"7340:3585:13","statements":[{"id":1628,"nodeType":"UncheckedBlock","src":"7350:3569:13","statements":[{"assignments":[1507,1509],"declarations":[{"constant":false,"id":1507,"mutability":"mutable","name":"high","nameLocation":"7383:4:13","nodeType":"VariableDeclaration","scope":1628,"src":"7375:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"low","nameLocation":"7397:3:13","nodeType":"VariableDeclaration","scope":1628,"src":"7389:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1514,"initialValue":{"arguments":[{"id":1511,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"7411:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1512,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"7414:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1510,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"7404:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1515,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"7498:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1523,"nodeType":"IfStatement","src":"7494:365:13","trueBody":{"id":1522,"nodeType":"Block","src":"7509:350:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1518,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"7827:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1519,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"7833:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1505,"id":1521,"nodeType":"Return","src":"7820:24:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1524,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"7969:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1525,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"7984:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1542,"nodeType":"IfStatement","src":"7965:142:13","trueBody":{"id":1541,"nodeType":"Block","src":"7990:117:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1531,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"8028:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1534,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8046:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1022_$","typeString":"type(library Panic)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":989,"src":"8046:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1536,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8070:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1022_$","typeString":"type(library Panic)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:13","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":985,"src":"8070:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1530,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"8020:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1527,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8008:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1022_$","typeString":"type(library Panic)"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1021,"src":"8008:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"8008:84:13"}]}},{"assignments":[1544],"declarations":[{"constant":false,"id":1544,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:13","nodeType":"VariableDeclaration","scope":1628,"src":"8359:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1545,"nodeType":"VariableDeclarationStatement","src":"8359:17:13"},{"AST":{"nodeType":"YulBlock","src":"8415:283:13","statements":[{"nodeType":"YulAssignment","src":"8484:38:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:13"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:13"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:13"},"nodeType":"YulFunctionCall","src":"8497:25:13"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:13"}]},{"nodeType":"YulAssignment","src":"8604:37:13","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:13"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:13"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:13"},"nodeType":"YulFunctionCall","src":"8622:18:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:13"},"nodeType":"YulFunctionCall","src":"8612:29:13"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:13"}]},{"nodeType":"YulAssignment","src":"8658:26:13","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:13"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:13"},"nodeType":"YulFunctionCall","src":"8665:19:13"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1501,"isOffset":false,"isSlot":false,"src":"8510:11:13","valueSize":1},{"declaration":1507,"isOffset":false,"isSlot":false,"src":"8604:4:13","valueSize":1},{"declaration":1507,"isOffset":false,"isSlot":false,"src":"8616:4:13","valueSize":1},{"declaration":1509,"isOffset":false,"isSlot":false,"src":"8636:3:13","valueSize":1},{"declaration":1509,"isOffset":false,"isSlot":false,"src":"8658:3:13","valueSize":1},{"declaration":1509,"isOffset":false,"isSlot":false,"src":"8669:3:13","valueSize":1},{"declaration":1544,"isOffset":false,"isSlot":false,"src":"8484:9:13","valueSize":1},{"declaration":1544,"isOffset":false,"isSlot":false,"src":"8625:9:13","valueSize":1},{"declaration":1544,"isOffset":false,"isSlot":false,"src":"8674:9:13","valueSize":1},{"declaration":1497,"isOffset":false,"isSlot":false,"src":"8504:1:13","valueSize":1},{"declaration":1499,"isOffset":false,"isSlot":false,"src":"8507:1:13","valueSize":1}],"flags":["memory-safe"],"id":1546,"nodeType":"InlineAssembly","src":"8390:308:13"},{"assignments":[1548],"declarations":[{"constant":false,"id":1548,"mutability":"mutable","name":"twos","nameLocation":"8910:4:13","nodeType":"VariableDeclaration","scope":1628,"src":"8902:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1555,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"8917:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1551,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"8936:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:13"},{"AST":{"nodeType":"YulBlock","src":"8987:359:13","statements":[{"nodeType":"YulAssignment","src":"9052:37:13","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:13"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:13"},"nodeType":"YulFunctionCall","src":"9067:22:13"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:13"}]},{"nodeType":"YulAssignment","src":"9153:21:13","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:13"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:13"},"nodeType":"YulFunctionCall","src":"9160:14:13"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:13"}]},{"nodeType":"YulAssignment","src":"9293:39:13","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:13","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:13"},"nodeType":"YulFunctionCall","src":"9309:12:13"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:13"},"nodeType":"YulFunctionCall","src":"9305:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:13"},"nodeType":"YulFunctionCall","src":"9301:31:13"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1501,"isOffset":false,"isSlot":false,"src":"9052:11:13","valueSize":1},{"declaration":1501,"isOffset":false,"isSlot":false,"src":"9071:11:13","valueSize":1},{"declaration":1509,"isOffset":false,"isSlot":false,"src":"9153:3:13","valueSize":1},{"declaration":1509,"isOffset":false,"isSlot":false,"src":"9164:3:13","valueSize":1},{"declaration":1548,"isOffset":false,"isSlot":false,"src":"9084:4:13","valueSize":1},{"declaration":1548,"isOffset":false,"isSlot":false,"src":"9169:4:13","valueSize":1},{"declaration":1548,"isOffset":false,"isSlot":false,"src":"9293:4:13","valueSize":1},{"declaration":1548,"isOffset":false,"isSlot":false,"src":"9316:4:13","valueSize":1},{"declaration":1548,"isOffset":false,"isSlot":false,"src":"9323:4:13","valueSize":1}],"flags":["memory-safe"],"id":1556,"nodeType":"InlineAssembly","src":"8962:384:13"},{"expression":{"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1557,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"9409:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1558,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"9416:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1559,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"9423:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1562,"nodeType":"ExpressionStatement","src":"9409:18:13"},{"assignments":[1564],"declarations":[{"constant":false,"id":1564,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:13","nodeType":"VariableDeclaration","scope":1628,"src":"9762:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1571,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1566,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"9785:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:13"},{"expression":{"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1572,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10018:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10033:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1575,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10047:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1579,"nodeType":"ExpressionStatement","src":"10018:36:13"},{"expression":{"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1580,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10088:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1582,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10103:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1583,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10117:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1587,"nodeType":"ExpressionStatement","src":"10088:36:13"},{"expression":{"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1588,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10160:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1590,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10175:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1591,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10189:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1595,"nodeType":"ExpressionStatement","src":"10160:36:13"},{"expression":{"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1596,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10231:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1598,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10246:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1599,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10260:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1603,"nodeType":"ExpressionStatement","src":"10231:36:13"},{"expression":{"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1604,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10304:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1606,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10319:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1607,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10333:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1611,"nodeType":"ExpressionStatement","src":"10304:36:13"},{"expression":{"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1612,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"10393:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1615,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10407:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1619,"nodeType":"ExpressionStatement","src":"10378:36:13"},{"expression":{"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"10859:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1621,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"10868:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1622,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10874:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1625,"nodeType":"ExpressionStatement","src":"10859:22:13"},{"expression":{"id":1626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"10902:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1505,"id":1627,"nodeType":"Return","src":"10895:13:13"}]}]},"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"6925:312:13","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:13","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"x","nameLocation":"7266:1:13","nodeType":"VariableDeclaration","scope":1630,"src":"7258:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"y","nameLocation":"7277:1:13","nodeType":"VariableDeclaration","scope":1630,"src":"7269:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:13","nodeType":"VariableDeclaration","scope":1630,"src":"7280:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:13"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"result","nameLocation":"7332:6:13","nodeType":"VariableDeclaration","scope":1630,"src":"7324:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:13"},"scope":2724,"src":"7242:3683:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1666,"nodeType":"Block","src":"11164:128:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1646,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"11188:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1647,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"11191:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1648,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"11194:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1645,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1630,1667],"referencedDeclaration":1630,"src":"11181:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1653,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"11242:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}],"id":1652,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"11225:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1115_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1656,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"11262:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1657,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"11265:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1658,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"11268:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1655,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:13","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1650,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11209:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"11209:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1644,"id":1665,"nodeType":"Return","src":"11174:111:13"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"10931:118:13","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:13","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"x","nameLocation":"11078:1:13","nodeType":"VariableDeclaration","scope":1667,"src":"11070:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"y","nameLocation":"11089:1:13","nodeType":"VariableDeclaration","scope":1667,"src":"11081:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:13","nodeType":"VariableDeclaration","scope":1667,"src":"11092:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:13","nodeType":"VariableDeclaration","scope":1667,"src":"11113:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"},"typeName":{"id":1639,"nodeType":"UserDefinedTypeName","pathNode":{"id":1638,"name":"Rounding","nameLocations":["11113:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"11113:8:13"},"referencedDeclaration":1115,"src":"11113:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:13"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1667,"src":"11155:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:13"},"scope":2724,"src":"11054:238:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1716,"nodeType":"Block","src":"11500:245:13","statements":[{"id":1715,"nodeType":"UncheckedBlock","src":"11510:229:13","statements":[{"assignments":[1680,1682],"declarations":[{"constant":false,"id":1680,"mutability":"mutable","name":"high","nameLocation":"11543:4:13","nodeType":"VariableDeclaration","scope":1715,"src":"11535:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1682,"mutability":"mutable","name":"low","nameLocation":"11557:3:13","nodeType":"VariableDeclaration","scope":1715,"src":"11549:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1687,"initialValue":{"arguments":[{"id":1684,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"11571:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1685,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"11574:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1683,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"11564:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"11594:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1690,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"11607:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1701,"nodeType":"IfStatement","src":"11590:86:13","trueBody":{"id":1700,"nodeType":"Block","src":"11610:66:13","statements":[{"expression":{"arguments":[{"expression":{"id":1696,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"11640:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1022_$","typeString":"type(library Panic)"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:13","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":985,"src":"11640:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1693,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"11628:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1022_$","typeString":"type(library Panic)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1021,"src":"11628:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1699,"nodeType":"ExpressionStatement","src":"11628:33:13"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"11697:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1704,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"11712:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":1706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1709,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"11719:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":1710,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"11726:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1678,"id":1714,"nodeType":"Return","src":"11689:39:13"}]}]},"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"11298:111:13","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":1717,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:13","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"x","nameLocation":"11438:1:13","nodeType":"VariableDeclaration","scope":1717,"src":"11430:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"y","nameLocation":"11449:1:13","nodeType":"VariableDeclaration","scope":1717,"src":"11441:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"n","nameLocation":"11458:1:13","nodeType":"VariableDeclaration","scope":1717,"src":"11452:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1673,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:13"},"returnParameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"result","nameLocation":"11492:6:13","nodeType":"VariableDeclaration","scope":1717,"src":"11484:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:13"},"scope":2724,"src":"11414:331:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1755,"nodeType":"Block","src":"11963:113:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1733,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"11987:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1734,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"11990:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1735,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"11993:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1732,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[1717,1756],"referencedDeclaration":1717,"src":"11980:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1740,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"12031:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}],"id":1739,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"12014:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1115_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1743,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"12051:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1744,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"12054:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1746,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"12062:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1742,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:13","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1737,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"11998:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"11998:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1731,"id":1754,"nodeType":"Return","src":"11973:96:13"}]},"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"11751:109:13","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:13","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"x","nameLocation":"11889:1:13","nodeType":"VariableDeclaration","scope":1756,"src":"11881:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"y","nameLocation":"11900:1:13","nodeType":"VariableDeclaration","scope":1756,"src":"11892:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"n","nameLocation":"11909:1:13","nodeType":"VariableDeclaration","scope":1756,"src":"11903:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1723,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1727,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:13","nodeType":"VariableDeclaration","scope":1756,"src":"11912:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"},"typeName":{"id":1726,"nodeType":"UserDefinedTypeName","pathNode":{"id":1725,"name":"Rounding","nameLocations":["11912:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"11912:8:13"},"referencedDeclaration":1115,"src":"11912:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:13"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1756,"src":"11954:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:13"},"scope":2724,"src":"11865:211:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1852,"nodeType":"Block","src":"12710:1849:13","statements":[{"id":1851,"nodeType":"UncheckedBlock","src":"12720:1833:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1766,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"12748:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1771,"nodeType":"IfStatement","src":"12744:20:13","trueBody":{"expression":{"hexValue":"30","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1765,"id":1770,"nodeType":"Return","src":"12756:8:13"}},{"assignments":[1773],"declarations":[{"constant":false,"id":1773,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:13","nodeType":"VariableDeclaration","scope":1851,"src":"13235:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1777,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"13255:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1775,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"13259:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:13"},{"assignments":[1779],"declarations":[{"constant":false,"id":1779,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:13","nodeType":"VariableDeclaration","scope":1851,"src":"13274:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1781,"initialValue":{"id":1780,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"13288:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:13"},{"assignments":[1783],"declarations":[{"constant":false,"id":1783,"mutability":"mutable","name":"x","nameLocation":"13432:1:13","nodeType":"VariableDeclaration","scope":1851,"src":"13425:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1782,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1785,"initialValue":{"hexValue":"30","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:13"},{"assignments":[1787],"declarations":[{"constant":false,"id":1787,"mutability":"mutable","name":"y","nameLocation":"13458:1:13","nodeType":"VariableDeclaration","scope":1851,"src":"13451:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1786,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1789,"initialValue":{"hexValue":"31","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:13"},{"body":{"id":1826,"nodeType":"Block","src":"13501:882:13","statements":[{"assignments":[1794],"declarations":[{"constant":false,"id":1794,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:13","nodeType":"VariableDeclaration","scope":1826,"src":"13519:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1798,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1795,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"13538:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1796,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"13544:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:13"},{"expression":{"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1799,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"13573:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1800,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"13578:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1801,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1802,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"13678:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"13923:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1804,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"13929:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1805,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"13941:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1810,"nodeType":"ExpressionStatement","src":"13572:395:13"},{"expression":{"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1811,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"13987:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1812,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"13990:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1813,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1814,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"14072:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1815,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"14326:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1816,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"14330:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1819,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"14341:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1817,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:13","typeDescriptions":{}}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1825,"nodeType":"ExpressionStatement","src":"13986:382:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1790,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"13485:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1827,"nodeType":"WhileStatement","src":"13478:905:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1828,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"14401:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1833,"nodeType":"IfStatement","src":"14397:22:13","trueBody":{"expression":{"hexValue":"30","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1765,"id":1832,"nodeType":"Return","src":"14411:8:13"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1835,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"14470:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1838,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"14477:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:13","subExpression":{"id":1841,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"14490:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:13","typeDescriptions":{}}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1847,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"14502:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:13","typeDescriptions":{}}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1834,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"14462:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1765,"id":1850,"nodeType":"Return","src":"14455:50:13"}]}]},"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"12082:553:13","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:13","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"a","nameLocation":"12664:1:13","nodeType":"VariableDeclaration","scope":1853,"src":"12656:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"n","nameLocation":"12675:1:13","nodeType":"VariableDeclaration","scope":1853,"src":"12667:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:13"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1853,"src":"12701:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:13"},"scope":2724,"src":"12640:1919:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1873,"nodeType":"Block","src":"15159:82:13","statements":[{"id":1872,"nodeType":"UncheckedBlock","src":"15169:66:13","statements":[{"expression":{"arguments":[{"id":1865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"15212:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"15215:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1869,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"15222:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1863,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"15200:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2724_$","typeString":"type(library Math)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:13","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":1910,"src":"15200:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1862,"id":1871,"nodeType":"Return","src":"15193:31:13"}]}]},"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"14565:514:13","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":1874,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:13","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"a","nameLocation":"15113:1:13","nodeType":"VariableDeclaration","scope":1874,"src":"15105:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"p","nameLocation":"15124:1:13","nodeType":"VariableDeclaration","scope":1874,"src":"15116:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:13"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1874,"src":"15150:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:13"},"scope":2724,"src":"15084:157:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1909,"nodeType":"Block","src":"16011:174:13","statements":[{"assignments":[1887,1889],"declarations":[{"constant":false,"id":1887,"mutability":"mutable","name":"success","nameLocation":"16027:7:13","nodeType":"VariableDeclaration","scope":1909,"src":"16022:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1886,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"result","nameLocation":"16044:6:13","nodeType":"VariableDeclaration","scope":1909,"src":"16036:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1895,"initialValue":{"arguments":[{"id":1891,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"16064:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1892,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"16067:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1893,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"16070:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1890,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1934,2016],"referencedDeclaration":1934,"src":"16054:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:13"},{"condition":{"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:13","subExpression":{"id":1896,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"16087:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"IfStatement","src":"16082:74:13","trueBody":{"id":1905,"nodeType":"Block","src":"16096:60:13","statements":[{"expression":{"arguments":[{"expression":{"id":1901,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"16122:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1022_$","typeString":"type(library Panic)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":989,"src":"16122:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1898,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"16110:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1022_$","typeString":"type(library Panic)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1021,"src":"16110:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1904,"nodeType":"ExpressionStatement","src":"16110:35:13"}]}},{"expression":{"id":1907,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"16172:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1885,"id":1908,"nodeType":"Return","src":"16165:13:13"}]},"documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"15247:678:13","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:13","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"b","nameLocation":"15954:1:13","nodeType":"VariableDeclaration","scope":1910,"src":"15946:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"e","nameLocation":"15965:1:13","nodeType":"VariableDeclaration","scope":1910,"src":"15957:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"m","nameLocation":"15976:1:13","nodeType":"VariableDeclaration","scope":1910,"src":"15968:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:13"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"16002:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:13"},"scope":2724,"src":"15930:255:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1933,"nodeType":"Block","src":"17039:1493:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1924,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"17053:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1931,"nodeType":"IfStatement","src":"17049:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1923,"id":1930,"nodeType":"Return","src":"17061:17:13"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:13","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:13"},"nodeType":"YulFunctionCall","src":"17138:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:13"},"nodeType":"YulFunctionCall","src":"18050:17:13"},"nodeType":"YulExpressionStatement","src":"18050:17:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:13"},"nodeType":"YulFunctionCall","src":"18087:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:13"},"nodeType":"YulFunctionCall","src":"18080:28:13"},"nodeType":"YulExpressionStatement","src":"18080:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:13"},"nodeType":"YulFunctionCall","src":"18128:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:13"},"nodeType":"YulFunctionCall","src":"18121:28:13"},"nodeType":"YulExpressionStatement","src":"18121:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:13"},"nodeType":"YulFunctionCall","src":"18169:14:13"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:13"},"nodeType":"YulFunctionCall","src":"18162:25:13"},"nodeType":"YulExpressionStatement","src":"18162:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:13","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:13"},"nodeType":"YulFunctionCall","src":"18207:14:13"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:13"},"nodeType":"YulFunctionCall","src":"18200:25:13"},"nodeType":"YulExpressionStatement","src":"18200:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:13","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:13"},"nodeType":"YulFunctionCall","src":"18245:14:13"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:13"},"nodeType":"YulFunctionCall","src":"18238:25:13"},"nodeType":"YulExpressionStatement","src":"18238:25:13"},{"nodeType":"YulAssignment","src":"18425:57:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:13"},"nodeType":"YulFunctionCall","src":"18447:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:13","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:13","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:13","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:13"},"nodeType":"YulFunctionCall","src":"18436:46:13"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:13"}]},{"nodeType":"YulAssignment","src":"18495:21:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:13","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:13"},"nodeType":"YulFunctionCall","src":"18505:11:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1913,"isOffset":false,"isSlot":false,"src":"18185:1:13","valueSize":1},{"declaration":1915,"isOffset":false,"isSlot":false,"src":"18223:1:13","valueSize":1},{"declaration":1917,"isOffset":false,"isSlot":false,"src":"18261:1:13","valueSize":1},{"declaration":1922,"isOffset":false,"isSlot":false,"src":"18495:6:13","valueSize":1},{"declaration":1920,"isOffset":false,"isSlot":false,"src":"18425:7:13","valueSize":1}],"flags":["memory-safe"],"id":1932,"nodeType":"InlineAssembly","src":"17088:1438:13"}]},"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"16191:738:13","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":1934,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:13","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"b","nameLocation":"16961:1:13","nodeType":"VariableDeclaration","scope":1934,"src":"16953:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"e","nameLocation":"16972:1:13","nodeType":"VariableDeclaration","scope":1934,"src":"16964:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"m","nameLocation":"16983:1:13","nodeType":"VariableDeclaration","scope":1934,"src":"16975:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:13"},"returnParameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"success","nameLocation":"17014:7:13","nodeType":"VariableDeclaration","scope":1934,"src":"17009:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1919,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"result","nameLocation":"17031:6:13","nodeType":"VariableDeclaration","scope":1934,"src":"17023:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1921,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:13"},"scope":2724,"src":"16934:1598:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1969,"nodeType":"Block","src":"18729:179:13","statements":[{"assignments":[1947,1949],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"success","nameLocation":"18745:7:13","nodeType":"VariableDeclaration","scope":1969,"src":"18740:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1946,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"result","nameLocation":"18767:6:13","nodeType":"VariableDeclaration","scope":1969,"src":"18754:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1948,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1955,"initialValue":{"arguments":[{"id":1951,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"18787:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1952,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"18790:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1953,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"18793:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1950,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1934,2016],"referencedDeclaration":2016,"src":"18777:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:13"},{"condition":{"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:13","subExpression":{"id":1956,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"18810:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1966,"nodeType":"IfStatement","src":"18805:74:13","trueBody":{"id":1965,"nodeType":"Block","src":"18819:60:13","statements":[{"expression":{"arguments":[{"expression":{"id":1961,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"18845:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1022_$","typeString":"type(library Panic)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":989,"src":"18845:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1958,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"18833:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1022_$","typeString":"type(library Panic)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1021,"src":"18833:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1964,"nodeType":"ExpressionStatement","src":"18833:35:13"}]}},{"expression":{"id":1967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"18895:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1945,"id":1968,"nodeType":"Return","src":"18888:13:13"}]},"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"18538:85:13","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":1970,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:13","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"b","nameLocation":"18657:1:13","nodeType":"VariableDeclaration","scope":1970,"src":"18644:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"e","nameLocation":"18673:1:13","nodeType":"VariableDeclaration","scope":1970,"src":"18660:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1938,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"m","nameLocation":"18689:1:13","nodeType":"VariableDeclaration","scope":1970,"src":"18676:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1940,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:13"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1970,"src":"18715:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1943,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:13"},"scope":2724,"src":"18628:280:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2015,"nodeType":"Block","src":"19162:771:13","statements":[{"condition":{"arguments":[{"id":1985,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"19187:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1984,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"19176:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1994,"nodeType":"IfStatement","src":"19172:47:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1988,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1983,"id":1993,"nodeType":"Return","src":"19191:28:13"}},{"assignments":[1996],"declarations":[{"constant":false,"id":1996,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:13","nodeType":"VariableDeclaration","scope":2015,"src":"19230:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1999,"initialValue":{"expression":{"id":1997,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"19245:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:13","memberName":"length","nodeType":"MemberAccess","src":"19245:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:13"},{"expression":{"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2000,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"19335:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2003,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"19361:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:13","memberName":"length","nodeType":"MemberAccess","src":"19361:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2005,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"19371:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:13","memberName":"length","nodeType":"MemberAccess","src":"19371:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2007,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"19381:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2008,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"19387:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2009,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"19390:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2010,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"19393:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2001,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2013,"nodeType":"ExpressionStatement","src":"19335:60:13"},{"AST":{"nodeType":"YulBlock","src":"19431:496:13","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:13","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:13"},"nodeType":"YulFunctionCall","src":"19460:17:13"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:13","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:13"},"nodeType":"YulFunctionCall","src":"19589:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:13","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:13"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:13"},"nodeType":"YulFunctionCall","src":"19611:13:13"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:13"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:13"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:13"},"nodeType":"YulFunctionCall","src":"19578:62:13"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:13"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:13"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:13"},"nodeType":"YulFunctionCall","src":"19789:20:13"},"nodeType":"YulExpressionStatement","src":"19789:20:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:13","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:13"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:13"},"nodeType":"YulFunctionCall","src":"19898:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:13"},"nodeType":"YulFunctionCall","src":"19885:32:13"},"nodeType":"YulExpressionStatement","src":"19885:32:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1996,"isOffset":false,"isSlot":false,"src":"19635:4:13","valueSize":1},{"declaration":1996,"isOffset":false,"isSlot":false,"src":"19804:4:13","valueSize":1},{"declaration":1996,"isOffset":false,"isSlot":false,"src":"19911:4:13","valueSize":1},{"declaration":1982,"isOffset":false,"isSlot":false,"src":"19464:6:13","valueSize":1},{"declaration":1982,"isOffset":false,"isSlot":false,"src":"19617:6:13","valueSize":1},{"declaration":1982,"isOffset":false,"isSlot":false,"src":"19796:6:13","valueSize":1},{"declaration":1980,"isOffset":false,"isSlot":false,"src":"19567:7:13","valueSize":1}],"flags":["memory-safe"],"id":2014,"nodeType":"InlineAssembly","src":"19406:521:13"}]},"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"18914:88:13","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":2016,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:13","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"b","nameLocation":"19048:1:13","nodeType":"VariableDeclaration","scope":2016,"src":"19035:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1972,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"e","nameLocation":"19072:1:13","nodeType":"VariableDeclaration","scope":2016,"src":"19059:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"m","nameLocation":"19096:1:13","nodeType":"VariableDeclaration","scope":2016,"src":"19083:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1976,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:13"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"success","nameLocation":"19132:7:13","nodeType":"VariableDeclaration","scope":2016,"src":"19127:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1979,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"result","nameLocation":"19154:6:13","nodeType":"VariableDeclaration","scope":2016,"src":"19141:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1981,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:13"},"scope":2724,"src":"19007:926:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2048,"nodeType":"Block","src":"20088:176:13","statements":[{"body":{"id":2044,"nodeType":"Block","src":"20145:92:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2035,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"20163:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2037,"indexExpression":{"id":2036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"20173:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2043,"nodeType":"IfStatement","src":"20159:68:13","trueBody":{"id":2042,"nodeType":"Block","src":"20182:45:13","statements":[{"expression":{"hexValue":"66616c7365","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2023,"id":2041,"nodeType":"Return","src":"20200:12:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2028,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"20118:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2029,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"20122:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:13","memberName":"length","nodeType":"MemberAccess","src":"20122:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2045,"initializationExpression":{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"i","nameLocation":"20111:1:13","nodeType":"VariableDeclaration","scope":2045,"src":"20103:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2027,"initialValue":{"hexValue":"30","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:13"},"loopExpression":{"expression":{"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:13","subExpression":{"id":2032,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"20142:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2034,"nodeType":"ExpressionStatement","src":"20140:3:13"},"nodeType":"ForStatement","src":"20098:139:13"},{"expression":{"hexValue":"74727565","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2023,"id":2047,"nodeType":"Return","src":"20246:11:13"}]},"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"19939:72:13","text":" @dev Returns whether the provided byte array is zero."},"id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:13","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:13","nodeType":"VariableDeclaration","scope":2049,"src":"20036:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2018,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:13"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2049,"src":"20082:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2021,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:13"},"scope":2724,"src":"20016:248:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2267,"nodeType":"Block","src":"20624:5124:13","statements":[{"id":2266,"nodeType":"UncheckedBlock","src":"20634:5108:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2057,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"20728:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2063,"nodeType":"IfStatement","src":"20724:53:13","trueBody":{"id":2062,"nodeType":"Block","src":"20736:41:13","statements":[{"expression":{"id":2060,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"20761:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2056,"id":2061,"nodeType":"Return","src":"20754:8:13"}]}},{"assignments":[2065],"declarations":[{"constant":false,"id":2065,"mutability":"mutable","name":"aa","nameLocation":"21712:2:13","nodeType":"VariableDeclaration","scope":2266,"src":"21704:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2067,"initialValue":{"id":2066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"21717:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:13"},{"assignments":[2069],"declarations":[{"constant":false,"id":2069,"mutability":"mutable","name":"xn","nameLocation":"21740:2:13","nodeType":"VariableDeclaration","scope":2266,"src":"21732:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2071,"initialValue":{"hexValue":"31","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"21765:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2087,"nodeType":"IfStatement","src":"21761:92:13","trueBody":{"id":2086,"nodeType":"Block","src":"21783:70:13","statements":[{"expression":{"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2078,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"21801:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2081,"nodeType":"ExpressionStatement","src":"21801:10:13"},{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2082,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"21829:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2085,"nodeType":"ExpressionStatement","src":"21829:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2088,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"21870:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2092,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2103,"nodeType":"IfStatement","src":"21866:90:13","trueBody":{"id":2102,"nodeType":"Block","src":"21887:69:13","statements":[{"expression":{"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2094,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"21905:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2097,"nodeType":"ExpressionStatement","src":"21905:9:13"},{"expression":{"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2098,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"21932:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2101,"nodeType":"ExpressionStatement","src":"21932:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2104,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"21973:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2119,"nodeType":"IfStatement","src":"21969:90:13","trueBody":{"id":2118,"nodeType":"Block","src":"21990:69:13","statements":[{"expression":{"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2110,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"22008:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2113,"nodeType":"ExpressionStatement","src":"22008:9:13"},{"expression":{"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2114,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"22035:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2117,"nodeType":"ExpressionStatement","src":"22035:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2120,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"22076:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2135,"nodeType":"IfStatement","src":"22072:89:13","trueBody":{"id":2134,"nodeType":"Block","src":"22093:68:13","statements":[{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2126,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"22111:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2129,"nodeType":"ExpressionStatement","src":"22111:9:13"},{"expression":{"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2130,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"22138:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2133,"nodeType":"ExpressionStatement","src":"22138:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"22178:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2151,"nodeType":"IfStatement","src":"22174:87:13","trueBody":{"id":2150,"nodeType":"Block","src":"22194:67:13","statements":[{"expression":{"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2142,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"22212:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2145,"nodeType":"ExpressionStatement","src":"22212:8:13"},{"expression":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2146,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"22238:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2149,"nodeType":"ExpressionStatement","src":"22238:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2152,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"22278:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2167,"nodeType":"IfStatement","src":"22274:87:13","trueBody":{"id":2166,"nodeType":"Block","src":"22294:67:13","statements":[{"expression":{"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2158,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"22312:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2161,"nodeType":"ExpressionStatement","src":"22312:8:13"},{"expression":{"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2162,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"22338:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2165,"nodeType":"ExpressionStatement","src":"22338:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2168,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"22378:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2179,"nodeType":"IfStatement","src":"22374:61:13","trueBody":{"id":2178,"nodeType":"Block","src":"22394:41:13","statements":[{"expression":{"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2174,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"22412:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2177,"nodeType":"ExpressionStatement","src":"22412:8:13"}]}},{"expression":{"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2180,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"22855:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2182,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"22865:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2188,"nodeType":"ExpressionStatement","src":"22855:18:13"},{"expression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2189,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"24760:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2190,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"24766:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"24771:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2192,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"24775:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2199,"nodeType":"ExpressionStatement","src":"24760:23:13"},{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2200,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"24869:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"24875:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2202,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"24880:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2203,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"24884:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2210,"nodeType":"ExpressionStatement","src":"24869:23:13"},{"expression":{"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2211,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"24980:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"24986:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2213,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"24991:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2214,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"24995:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2221,"nodeType":"ExpressionStatement","src":"24980:23:13"},{"expression":{"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2222,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25089:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2223,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25095:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2224,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"25100:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2225,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25104:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2232,"nodeType":"ExpressionStatement","src":"25089:23:13"},{"expression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2233,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25199:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2234,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25205:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"25210:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2236,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25214:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2243,"nodeType":"ExpressionStatement","src":"25199:23:13"},{"expression":{"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2244,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25309:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25315:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"25320:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2247,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25324:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2254,"nodeType":"ExpressionStatement","src":"25309:23:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2255,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25698:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2258,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25719:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"25724:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2260,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"25728:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2256,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"25703:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"25703:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2056,"id":2265,"nodeType":"Return","src":"25691:40:13"}]}]},"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"20270:292:13","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:13","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"a","nameLocation":"20589:1:13","nodeType":"VariableDeclaration","scope":2268,"src":"20581:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:13"},"returnParameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2268,"src":"20615:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:13"},"scope":2724,"src":"20567:5181:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2301,"nodeType":"Block","src":"25921:171:13","statements":[{"id":2300,"nodeType":"UncheckedBlock","src":"25931:155:13","statements":[{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"result","nameLocation":"25963:6:13","nodeType":"VariableDeclaration","scope":2300,"src":"25955:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2284,"initialValue":{"arguments":[{"id":2282,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"25977:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2281,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2268,2302],"referencedDeclaration":2268,"src":"25972:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"26000:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2289,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"26042:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}],"id":2288,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"26025:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1115_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2291,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"26055:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"26064:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"26073:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2286,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"26009:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"26009:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2278,"id":2299,"nodeType":"Return","src":"25993:82:13"}]}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"25754:86:13","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2302,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:13","nodeType":"FunctionDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"a","nameLocation":"25867:1:13","nodeType":"VariableDeclaration","scope":2302,"src":"25859:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2274,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:13","nodeType":"VariableDeclaration","scope":2302,"src":"25870:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"},"typeName":{"id":2273,"nodeType":"UserDefinedTypeName","pathNode":{"id":2272,"name":"Rounding","nameLocations":["25870:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"25870:8:13"},"referencedDeclaration":1115,"src":"25870:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:13"},"returnParameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2302,"src":"25912:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:13"},"scope":2724,"src":"25845:247:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2392,"nodeType":"Block","src":"26281:2334:13","statements":[{"expression":{"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2310,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"26363:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2313,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"26383:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2311,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"26367:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"26367:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:13","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2320,"nodeType":"ExpressionStatement","src":"26363:64:13"},{"expression":{"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2321,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"26503:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"26525:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2325,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"26530:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2327,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2322,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"26508:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"26508:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:13","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2334,"nodeType":"ExpressionStatement","src":"26503:56:13"},{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2335,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"26634:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2338,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"26656:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2339,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"26661:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2336,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"26639:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"26639:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2348,"nodeType":"ExpressionStatement","src":"26634:48:13"},{"expression":{"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"26757:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2352,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"26779:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2353,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"26784:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:13","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2350,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"26762:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"26762:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2362,"nodeType":"ExpressionStatement","src":"26757:44:13"},{"expression":{"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2363,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"26874:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2366,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"26896:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2367,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"26901:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2364,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"26879:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"26879:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2376,"nodeType":"ExpressionStatement","src":"26874:42:13"},{"expression":{"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2377,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"26988:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2380,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"27010:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2381,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"27015:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2378,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"26993:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"26993:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2390,"nodeType":"ExpressionStatement","src":"26988:41:13"},{"AST":{"nodeType":"YulBlock","src":"28490:119:13","statements":[{"nodeType":"YulAssignment","src":"28504:95:13","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:13"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:13"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:13"},"nodeType":"YulFunctionCall","src":"28520:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:13","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:13"},"nodeType":"YulFunctionCall","src":"28515:83:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:13"},"nodeType":"YulFunctionCall","src":"28509:90:13"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2308,"isOffset":false,"isSlot":false,"src":"28504:1:13","valueSize":1},{"declaration":2308,"isOffset":false,"isSlot":false,"src":"28512:1:13","valueSize":1},{"declaration":2308,"isOffset":false,"isSlot":false,"src":"28524:1:13","valueSize":1},{"declaration":2305,"isOffset":false,"isSlot":false,"src":"28527:1:13","valueSize":1}],"flags":["memory-safe"],"id":2391,"nodeType":"InlineAssembly","src":"28465:144:13"}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"26098:119:13","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2393,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:13","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"x","nameLocation":"26244:1:13","nodeType":"VariableDeclaration","scope":2393,"src":"26236:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:13"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"r","nameLocation":"26278:1:13","nodeType":"VariableDeclaration","scope":2393,"src":"26270:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:13"},"scope":2724,"src":"26222:2393:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2426,"nodeType":"Block","src":"28848:175:13","statements":[{"id":2425,"nodeType":"UncheckedBlock","src":"28858:159:13","statements":[{"assignments":[2405],"declarations":[{"constant":false,"id":2405,"mutability":"mutable","name":"result","nameLocation":"28890:6:13","nodeType":"VariableDeclaration","scope":2425,"src":"28882:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2409,"initialValue":{"arguments":[{"id":2407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"28904:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2406,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2393,2427],"referencedDeclaration":2393,"src":"28899:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"28931:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2414,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"28973:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}],"id":2413,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"28956:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1115_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2417,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"28991:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"29000:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2411,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"28940:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"28940:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2403,"id":2424,"nodeType":"Return","src":"28924:82:13"}]}]},"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"28621:142:13","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2427,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:13","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"value","nameLocation":"28790:5:13","nodeType":"VariableDeclaration","scope":2427,"src":"28782:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:13","nodeType":"VariableDeclaration","scope":2427,"src":"28797:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"},"typeName":{"id":2398,"nodeType":"UserDefinedTypeName","pathNode":{"id":2397,"name":"Rounding","nameLocations":["28797:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"28797:8:13"},"referencedDeclaration":1115,"src":"28797:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:13"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2427,"src":"28839:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:13"},"scope":2724,"src":"28768:255:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2555,"nodeType":"Block","src":"29216:854:13","statements":[{"assignments":[2436],"declarations":[{"constant":false,"id":2436,"mutability":"mutable","name":"result","nameLocation":"29234:6:13","nodeType":"VariableDeclaration","scope":2555,"src":"29226:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2438,"initialValue":{"hexValue":"30","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:13"},{"id":2552,"nodeType":"UncheckedBlock","src":"29254:787:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29282:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2455,"nodeType":"IfStatement","src":"29278:103:13","trueBody":{"id":2454,"nodeType":"Block","src":"29301:80:13","statements":[{"expression":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29319:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2449,"nodeType":"ExpressionStatement","src":"29319:17:13"},{"expression":{"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"29354:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2453,"nodeType":"ExpressionStatement","src":"29354:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29398:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2472,"nodeType":"IfStatement","src":"29394:103:13","trueBody":{"id":2471,"nodeType":"Block","src":"29417:80:13","statements":[{"expression":{"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29435:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2466,"nodeType":"ExpressionStatement","src":"29435:17:13"},{"expression":{"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"29470:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2470,"nodeType":"ExpressionStatement","src":"29470:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29514:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2489,"nodeType":"IfStatement","src":"29510:103:13","trueBody":{"id":2488,"nodeType":"Block","src":"29533:80:13","statements":[{"expression":{"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29551:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2483,"nodeType":"ExpressionStatement","src":"29551:17:13"},{"expression":{"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2484,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"29586:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2487,"nodeType":"ExpressionStatement","src":"29586:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29630:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2506,"nodeType":"IfStatement","src":"29626:100:13","trueBody":{"id":2505,"nodeType":"Block","src":"29648:78:13","statements":[{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29666:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2500,"nodeType":"ExpressionStatement","src":"29666:16:13"},{"expression":{"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"29700:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2504,"nodeType":"ExpressionStatement","src":"29700:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29743:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2523,"nodeType":"IfStatement","src":"29739:100:13","trueBody":{"id":2522,"nodeType":"Block","src":"29761:78:13","statements":[{"expression":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29779:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2517,"nodeType":"ExpressionStatement","src":"29779:16:13"},{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"29813:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2521,"nodeType":"ExpressionStatement","src":"29813:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29856:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2540,"nodeType":"IfStatement","src":"29852:100:13","trueBody":{"id":2539,"nodeType":"Block","src":"29874:78:13","statements":[{"expression":{"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29892:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2534,"nodeType":"ExpressionStatement","src":"29892:16:13"},{"expression":{"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"29926:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2538,"nodeType":"ExpressionStatement","src":"29926:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"29969:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2551,"nodeType":"IfStatement","src":"29965:66:13","trueBody":{"id":2550,"nodeType":"Block","src":"29987:44:13","statements":[{"expression":{"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"30005:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2549,"nodeType":"ExpressionStatement","src":"30005:11:13"}]}}]},{"expression":{"id":2553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"30057:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2434,"id":2554,"nodeType":"Return","src":"30050:13:13"}]},"documentation":{"id":2428,"nodeType":"StructuredDocumentation","src":"29029:120:13","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2556,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:13","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"value","nameLocation":"29177:5:13","nodeType":"VariableDeclaration","scope":2556,"src":"29169:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2429,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:13"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2556,"src":"29207:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:13"},"scope":2724,"src":"29154:916:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2589,"nodeType":"Block","src":"30305:177:13","statements":[{"id":2588,"nodeType":"UncheckedBlock","src":"30315:161:13","statements":[{"assignments":[2568],"declarations":[{"constant":false,"id":2568,"mutability":"mutable","name":"result","nameLocation":"30347:6:13","nodeType":"VariableDeclaration","scope":2588,"src":"30339:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2572,"initialValue":{"arguments":[{"id":2570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"30362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2569,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2556,2590],"referencedDeclaration":2556,"src":"30356:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"30389:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2577,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"30431:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}],"id":2576,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"30414:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1115_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"30450:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"30459:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2574,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"30398:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"30398:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2566,"id":2587,"nodeType":"Return","src":"30382:83:13"}]}]},"documentation":{"id":2557,"nodeType":"StructuredDocumentation","src":"30076:143:13","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2590,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:13","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"value","nameLocation":"30247:5:13","nodeType":"VariableDeclaration","scope":2590,"src":"30239:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:13","nodeType":"VariableDeclaration","scope":2590,"src":"30254:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"},"typeName":{"id":2561,"nodeType":"UserDefinedTypeName","pathNode":{"id":2560,"name":"Rounding","nameLocations":["30254:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"30254:8:13"},"referencedDeclaration":1115,"src":"30254:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:13"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2590,"src":"30296:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:13"},"scope":2724,"src":"30224:258:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2666,"nodeType":"Block","src":"30800:675:13","statements":[{"expression":{"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2598,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"30882:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"30902:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2599,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"30886:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"30886:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:13","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2608,"nodeType":"ExpressionStatement","src":"30882:64:13"},{"expression":{"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2609,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"31022:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2612,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"31044:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2613,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"31049:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2610,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"31027:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"31027:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:13","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2622,"nodeType":"ExpressionStatement","src":"31022:56:13"},{"expression":{"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2623,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"31153:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"31175:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2627,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"31180:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2624,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"31158:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"31158:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2636,"nodeType":"ExpressionStatement","src":"31153:48:13"},{"expression":{"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2637,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"31276:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"31298:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2641,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"31303:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:13","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2638,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"31281:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"31281:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2650,"nodeType":"ExpressionStatement","src":"31276:44:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"31426:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"31453:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2658,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"31458:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2655,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"31436:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"31436:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2597,"id":2665,"nodeType":"Return","src":"31418:50:13"}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"30488:246:13","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:13","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"x","nameLocation":"30763:1:13","nodeType":"VariableDeclaration","scope":2667,"src":"30755:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:13"},"returnParameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"r","nameLocation":"30797:1:13","nodeType":"VariableDeclaration","scope":2667,"src":"30789:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:13"},"scope":2724,"src":"30739:736:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2703,"nodeType":"Block","src":"31712:184:13","statements":[{"id":2702,"nodeType":"UncheckedBlock","src":"31722:168:13","statements":[{"assignments":[2679],"declarations":[{"constant":false,"id":2679,"mutability":"mutable","name":"result","nameLocation":"31754:6:13","nodeType":"VariableDeclaration","scope":2702,"src":"31746:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2683,"initialValue":{"arguments":[{"id":2681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"31770:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2680,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2667,2704],"referencedDeclaration":2667,"src":"31763:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"31797:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2688,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"31839:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}],"id":2687,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"31822:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1115_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"31858:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"31873:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2685,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"31806:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4489_$","typeString":"type(library SafeCast)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4488,"src":"31806:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2677,"id":2701,"nodeType":"Return","src":"31790:89:13"}]}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"31481:144:13","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:13","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"value","nameLocation":"31654:5:13","nodeType":"VariableDeclaration","scope":2704,"src":"31646:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:13","nodeType":"VariableDeclaration","scope":2704,"src":"31661:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"},"typeName":{"id":2672,"nodeType":"UserDefinedTypeName","pathNode":{"id":2671,"name":"Rounding","nameLocations":["31661:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"31661:8:13"},"referencedDeclaration":1115,"src":"31661:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:13"},"returnParameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2704,"src":"31703:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:13"},"scope":2724,"src":"31630:266:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2722,"nodeType":"Block","src":"32094:48:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2715,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"32117:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}],"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2713,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:13","typeDescriptions":{}}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2712,"id":2721,"nodeType":"Return","src":"32104:31:13"}]},"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"31902:113:13","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2723,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:13","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:13","nodeType":"VariableDeclaration","scope":2723,"src":"32046:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"},"typeName":{"id":2707,"nodeType":"UserDefinedTypeName","pathNode":{"id":2706,"name":"Rounding","nameLocations":["32046:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1115,"src":"32046:8:13"},"referencedDeclaration":1115,"src":"32046:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1115","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:13"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2723,"src":"32088:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2710,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:13"},"scope":2724,"src":"32020:122:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2725,"src":"281:31863:13","usedErrors":[],"usedEvents":[]}],"src":"103:32042:13"},"id":13},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4489]},"id":4490,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2726,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"218:550:14","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4489,"linearizedBaseContracts":[4489],"name":"SafeCast","nameLocation":"777:8:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"792:68:14","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":2734,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:14","nodeType":"ErrorDefinition","parameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"bits","nameLocation":"908:4:14","nodeType":"VariableDeclaration","scope":2734,"src":"902:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2729,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"value","nameLocation":"922:5:14","nodeType":"VariableDeclaration","scope":2734,"src":"914:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:14"},"src":"865:64:14"},{"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"935:75:14","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":2739,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:14","nodeType":"ErrorDefinition","parameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"value","nameLocation":"1056:5:14","nodeType":"VariableDeclaration","scope":2739,"src":"1049:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2736,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:14"},"src":"1015:48:14"},{"documentation":{"id":2740,"nodeType":"StructuredDocumentation","src":"1069:67:14","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":2746,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:14","nodeType":"ErrorDefinition","parameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"bits","nameLocation":"1183:4:14","nodeType":"VariableDeclaration","scope":2746,"src":"1177:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2741,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"value","nameLocation":"1196:5:14","nodeType":"VariableDeclaration","scope":2746,"src":"1189:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2743,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:14"},"src":"1141:62:14"},{"documentation":{"id":2747,"nodeType":"StructuredDocumentation","src":"1209:75:14","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":2751,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:14","nodeType":"ErrorDefinition","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"value","nameLocation":"1331:5:14","nodeType":"VariableDeclaration","scope":2751,"src":"1323:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:14"},"src":"1289:49:14"},{"body":{"id":2778,"nodeType":"Block","src":"1695:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"1709:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2761,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":2760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:14","memberName":"max","nodeType":"MemberAccess","src":"1717:17:14","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2772,"nodeType":"IfStatement","src":"1705:105:14","trueBody":{"id":2771,"nodeType":"Block","src":"1736:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:14","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"1793:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2766,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"1757:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2770,"nodeType":"RevertStatement","src":"1750:49:14"}]}},{"expression":{"arguments":[{"id":2775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"1834:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2773,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:14","typeDescriptions":{}}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":2758,"id":2777,"nodeType":"Return","src":"1819:21:14"}]},"documentation":{"id":2752,"nodeType":"StructuredDocumentation","src":"1344:280:14","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2779,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:14","nodeType":"FunctionDefinition","parameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"value","nameLocation":"1656:5:14","nodeType":"VariableDeclaration","scope":2779,"src":"1648:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:14"},"returnParameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2779,"src":"1686:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":2756,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:14","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:14"},"scope":4489,"src":"1629:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2806,"nodeType":"Block","src":"2204:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"2218:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2789,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":2788,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:14","memberName":"max","nodeType":"MemberAccess","src":"2226:17:14","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2800,"nodeType":"IfStatement","src":"2214:105:14","trueBody":{"id":2799,"nodeType":"Block","src":"2245:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:14","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"2302:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2794,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"2266:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2798,"nodeType":"RevertStatement","src":"2259:49:14"}]}},{"expression":{"arguments":[{"id":2803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"2343:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2801,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:14","typeDescriptions":{}}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":2786,"id":2805,"nodeType":"Return","src":"2328:21:14"}]},"documentation":{"id":2780,"nodeType":"StructuredDocumentation","src":"1853:280:14","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2807,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:14","nodeType":"FunctionDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"value","nameLocation":"2165:5:14","nodeType":"VariableDeclaration","scope":2807,"src":"2157:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:14"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2807,"src":"2195:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":2784,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:14","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:14"},"scope":4489,"src":"2138:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2834,"nodeType":"Block","src":"2713:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"2727:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2817,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":2816,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:14","memberName":"max","nodeType":"MemberAccess","src":"2735:17:14","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2828,"nodeType":"IfStatement","src":"2723:105:14","trueBody":{"id":2827,"nodeType":"Block","src":"2754:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:14","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"2811:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2822,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"2775:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2826,"nodeType":"RevertStatement","src":"2768:49:14"}]}},{"expression":{"arguments":[{"id":2831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"2852:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2829,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:14","typeDescriptions":{}}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":2814,"id":2833,"nodeType":"Return","src":"2837:21:14"}]},"documentation":{"id":2808,"nodeType":"StructuredDocumentation","src":"2362:280:14","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2835,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:14","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"value","nameLocation":"2674:5:14","nodeType":"VariableDeclaration","scope":2835,"src":"2666:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:14"},"returnParameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2835,"src":"2704:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":2812,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:14","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:14"},"scope":4489,"src":"2647:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2862,"nodeType":"Block","src":"3222:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"3236:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2845,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2844,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:14","memberName":"max","nodeType":"MemberAccess","src":"3244:17:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2856,"nodeType":"IfStatement","src":"3232:105:14","trueBody":{"id":2855,"nodeType":"Block","src":"3263:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:14","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"3320:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2850,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"3284:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2854,"nodeType":"RevertStatement","src":"3277:49:14"}]}},{"expression":{"arguments":[{"id":2859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"3361:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2857,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:14","typeDescriptions":{}}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2842,"id":2861,"nodeType":"Return","src":"3346:21:14"}]},"documentation":{"id":2836,"nodeType":"StructuredDocumentation","src":"2871:280:14","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2863,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:14","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"value","nameLocation":"3183:5:14","nodeType":"VariableDeclaration","scope":2863,"src":"3175:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:14"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2863,"src":"3213:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2840,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:14"},"scope":4489,"src":"3156:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2890,"nodeType":"Block","src":"3731:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"3745:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2873,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":2872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:14","memberName":"max","nodeType":"MemberAccess","src":"3753:17:14","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2884,"nodeType":"IfStatement","src":"3741:105:14","trueBody":{"id":2883,"nodeType":"Block","src":"3772:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:14","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"3829:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2878,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"3793:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2882,"nodeType":"RevertStatement","src":"3786:49:14"}]}},{"expression":{"arguments":[{"id":2887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"3870:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2885,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:14","typeDescriptions":{}}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":2870,"id":2889,"nodeType":"Return","src":"3855:21:14"}]},"documentation":{"id":2864,"nodeType":"StructuredDocumentation","src":"3380:280:14","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2891,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:14","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"value","nameLocation":"3692:5:14","nodeType":"VariableDeclaration","scope":2891,"src":"3684:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2865,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:14"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2891,"src":"3722:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":2868,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:14","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:14"},"scope":4489,"src":"3665:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2918,"nodeType":"Block","src":"4240:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4254:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2901,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2900,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:14","memberName":"max","nodeType":"MemberAccess","src":"4262:17:14","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2912,"nodeType":"IfStatement","src":"4250:105:14","trueBody":{"id":2911,"nodeType":"Block","src":"4281:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:14","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4338:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2906,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"4302:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2910,"nodeType":"RevertStatement","src":"4295:49:14"}]}},{"expression":{"arguments":[{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4379:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2913,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:14","typeDescriptions":{}}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2898,"id":2917,"nodeType":"Return","src":"4364:21:14"}]},"documentation":{"id":2892,"nodeType":"StructuredDocumentation","src":"3889:280:14","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2919,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:14","nodeType":"FunctionDefinition","parameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"value","nameLocation":"4201:5:14","nodeType":"VariableDeclaration","scope":2919,"src":"4193:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:14"},"returnParameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2919,"src":"4231:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":2896,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:14","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:14"},"scope":4489,"src":"4174:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2946,"nodeType":"Block","src":"4749:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"4763:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2929,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":2928,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:14","memberName":"max","nodeType":"MemberAccess","src":"4771:17:14","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2940,"nodeType":"IfStatement","src":"4759:105:14","trueBody":{"id":2939,"nodeType":"Block","src":"4790:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:14","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"4847:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2934,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"4811:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2938,"nodeType":"RevertStatement","src":"4804:49:14"}]}},{"expression":{"arguments":[{"id":2943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"4888:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2941,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:14","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":2926,"id":2945,"nodeType":"Return","src":"4873:21:14"}]},"documentation":{"id":2920,"nodeType":"StructuredDocumentation","src":"4398:280:14","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2947,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:14","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2922,"mutability":"mutable","name":"value","nameLocation":"4710:5:14","nodeType":"VariableDeclaration","scope":2947,"src":"4702:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:14"},"returnParameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2947,"src":"4740:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":2924,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:14","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:14"},"scope":4489,"src":"4683:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2974,"nodeType":"Block","src":"5258:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"5272:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2957,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:14","memberName":"max","nodeType":"MemberAccess","src":"5280:17:14","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2968,"nodeType":"IfStatement","src":"5268:105:14","trueBody":{"id":2967,"nodeType":"Block","src":"5299:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:14","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":2964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"5356:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2962,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"5320:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2966,"nodeType":"RevertStatement","src":"5313:49:14"}]}},{"expression":{"arguments":[{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"5397:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2969,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:14","typeDescriptions":{}}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2954,"id":2973,"nodeType":"Return","src":"5382:21:14"}]},"documentation":{"id":2948,"nodeType":"StructuredDocumentation","src":"4907:280:14","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":2975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:14","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"value","nameLocation":"5219:5:14","nodeType":"VariableDeclaration","scope":2975,"src":"5211:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:14"},"returnParameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2975,"src":"5249:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2952,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:14","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:14"},"scope":4489,"src":"5192:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3002,"nodeType":"Block","src":"5767:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"5781:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2985,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":2984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:14","memberName":"max","nodeType":"MemberAccess","src":"5789:17:14","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2996,"nodeType":"IfStatement","src":"5777:105:14","trueBody":{"id":2995,"nodeType":"Block","src":"5808:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:14","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":2992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"5865:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2990,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"5829:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2994,"nodeType":"RevertStatement","src":"5822:49:14"}]}},{"expression":{"arguments":[{"id":2999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"5906:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2997,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:14","typeDescriptions":{}}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":2982,"id":3001,"nodeType":"Return","src":"5891:21:14"}]},"documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"5416:280:14","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3003,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:14","nodeType":"FunctionDefinition","parameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"value","nameLocation":"5728:5:14","nodeType":"VariableDeclaration","scope":3003,"src":"5720:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:14"},"returnParameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3003,"src":"5758:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":2980,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:14","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:14"},"scope":4489,"src":"5701:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3030,"nodeType":"Block","src":"6276:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"6290:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3013,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:14","memberName":"max","nodeType":"MemberAccess","src":"6298:17:14","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3024,"nodeType":"IfStatement","src":"6286:105:14","trueBody":{"id":3023,"nodeType":"Block","src":"6317:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:14","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"6374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3018,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"6338:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3022,"nodeType":"RevertStatement","src":"6331:49:14"}]}},{"expression":{"arguments":[{"id":3027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"6415:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3025,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:14","typeDescriptions":{}}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3010,"id":3029,"nodeType":"Return","src":"6400:21:14"}]},"documentation":{"id":3004,"nodeType":"StructuredDocumentation","src":"5925:280:14","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:14","nodeType":"FunctionDefinition","parameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"value","nameLocation":"6237:5:14","nodeType":"VariableDeclaration","scope":3031,"src":"6229:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:14"},"returnParameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3031,"src":"6267:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3008,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:14","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:14"},"scope":4489,"src":"6210:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3058,"nodeType":"Block","src":"6785:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"6799:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3041,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":3040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:14","memberName":"max","nodeType":"MemberAccess","src":"6807:17:14","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3052,"nodeType":"IfStatement","src":"6795:105:14","trueBody":{"id":3051,"nodeType":"Block","src":"6826:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:14","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"6883:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3046,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"6847:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3050,"nodeType":"RevertStatement","src":"6840:49:14"}]}},{"expression":{"arguments":[{"id":3055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"6924:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3053,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:14","typeDescriptions":{}}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":3038,"id":3057,"nodeType":"Return","src":"6909:21:14"}]},"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"6434:280:14","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3059,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:14","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"value","nameLocation":"6746:5:14","nodeType":"VariableDeclaration","scope":3059,"src":"6738:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:14"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3059,"src":"6776:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3036,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:14","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:14"},"scope":4489,"src":"6719:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3086,"nodeType":"Block","src":"7294:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"7308:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3069,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:14","memberName":"max","nodeType":"MemberAccess","src":"7316:17:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3080,"nodeType":"IfStatement","src":"7304:105:14","trueBody":{"id":3079,"nodeType":"Block","src":"7335:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:14","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"7392:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3074,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"7356:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3078,"nodeType":"RevertStatement","src":"7349:49:14"}]}},{"expression":{"arguments":[{"id":3083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"7433:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3081,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:14","typeDescriptions":{}}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3066,"id":3085,"nodeType":"Return","src":"7418:21:14"}]},"documentation":{"id":3060,"nodeType":"StructuredDocumentation","src":"6943:280:14","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3087,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:14","nodeType":"FunctionDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3062,"mutability":"mutable","name":"value","nameLocation":"7255:5:14","nodeType":"VariableDeclaration","scope":3087,"src":"7247:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:14"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"7285:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3064,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:14"},"scope":4489,"src":"7228:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3114,"nodeType":"Block","src":"7803:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"7817:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3097,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:14","memberName":"max","nodeType":"MemberAccess","src":"7825:17:14","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3108,"nodeType":"IfStatement","src":"7813:105:14","trueBody":{"id":3107,"nodeType":"Block","src":"7844:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:14","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"7901:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3102,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"7865:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3106,"nodeType":"RevertStatement","src":"7858:49:14"}]}},{"expression":{"arguments":[{"id":3111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"7942:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3109,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:14","typeDescriptions":{}}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3094,"id":3113,"nodeType":"Return","src":"7927:21:14"}]},"documentation":{"id":3088,"nodeType":"StructuredDocumentation","src":"7452:280:14","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:14","nodeType":"FunctionDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"value","nameLocation":"7764:5:14","nodeType":"VariableDeclaration","scope":3115,"src":"7756:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:14"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3115,"src":"7794:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3092,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:14","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:14"},"scope":4489,"src":"7737:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3142,"nodeType":"Block","src":"8312:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"8326:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3125,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:14","memberName":"max","nodeType":"MemberAccess","src":"8334:17:14","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3136,"nodeType":"IfStatement","src":"8322:105:14","trueBody":{"id":3135,"nodeType":"Block","src":"8353:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:14","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"8410:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3130,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"8374:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3134,"nodeType":"RevertStatement","src":"8367:49:14"}]}},{"expression":{"arguments":[{"id":3139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"8451:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3137,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:14","typeDescriptions":{}}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3122,"id":3141,"nodeType":"Return","src":"8436:21:14"}]},"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"7961:280:14","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3143,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:14","nodeType":"FunctionDefinition","parameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"value","nameLocation":"8273:5:14","nodeType":"VariableDeclaration","scope":3143,"src":"8265:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:14"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3143,"src":"8303:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3120,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:14","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:14"},"scope":4489,"src":"8246:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3170,"nodeType":"Block","src":"8821:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"8835:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3153,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:14","memberName":"max","nodeType":"MemberAccess","src":"8843:17:14","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3164,"nodeType":"IfStatement","src":"8831:105:14","trueBody":{"id":3163,"nodeType":"Block","src":"8862:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:14","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"8919:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3158,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"8883:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3162,"nodeType":"RevertStatement","src":"8876:49:14"}]}},{"expression":{"arguments":[{"id":3167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"8960:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3165,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:14","typeDescriptions":{}}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3150,"id":3169,"nodeType":"Return","src":"8945:21:14"}]},"documentation":{"id":3144,"nodeType":"StructuredDocumentation","src":"8470:280:14","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:14","nodeType":"FunctionDefinition","parameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"value","nameLocation":"8782:5:14","nodeType":"VariableDeclaration","scope":3171,"src":"8774:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:14"},"returnParameters":{"id":3150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3171,"src":"8812:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3148,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:14","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:14"},"scope":4489,"src":"8755:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3198,"nodeType":"Block","src":"9330:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"9344:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3181,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:14","memberName":"max","nodeType":"MemberAccess","src":"9352:17:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3192,"nodeType":"IfStatement","src":"9340:105:14","trueBody":{"id":3191,"nodeType":"Block","src":"9371:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"9428:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3186,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"9392:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3190,"nodeType":"RevertStatement","src":"9385:49:14"}]}},{"expression":{"arguments":[{"id":3195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"9469:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3193,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:14","typeDescriptions":{}}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3178,"id":3197,"nodeType":"Return","src":"9454:21:14"}]},"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"8979:280:14","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3199,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:14","nodeType":"FunctionDefinition","parameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"value","nameLocation":"9291:5:14","nodeType":"VariableDeclaration","scope":3199,"src":"9283:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:14"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3199,"src":"9321:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3176,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:14"},"scope":4489,"src":"9264:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3226,"nodeType":"Block","src":"9839:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"9853:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3209,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:14","memberName":"max","nodeType":"MemberAccess","src":"9861:17:14","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3220,"nodeType":"IfStatement","src":"9849:105:14","trueBody":{"id":3219,"nodeType":"Block","src":"9880:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:14","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"9937:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"9901:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3218,"nodeType":"RevertStatement","src":"9894:49:14"}]}},{"expression":{"arguments":[{"id":3223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"9978:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3221,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:14","typeDescriptions":{}}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3206,"id":3225,"nodeType":"Return","src":"9963:21:14"}]},"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"9488:280:14","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:14","nodeType":"FunctionDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"value","nameLocation":"9800:5:14","nodeType":"VariableDeclaration","scope":3227,"src":"9792:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:14"},"returnParameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3227,"src":"9830:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3204,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:14","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:14"},"scope":4489,"src":"9773:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3254,"nodeType":"Block","src":"10348:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"10362:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3237,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:14","memberName":"max","nodeType":"MemberAccess","src":"10370:17:14","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3248,"nodeType":"IfStatement","src":"10358:105:14","trueBody":{"id":3247,"nodeType":"Block","src":"10389:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:14","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"10446:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"10410:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3246,"nodeType":"RevertStatement","src":"10403:49:14"}]}},{"expression":{"arguments":[{"id":3251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"10487:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3249,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:14","typeDescriptions":{}}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3234,"id":3253,"nodeType":"Return","src":"10472:21:14"}]},"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"9997:280:14","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:14","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"value","nameLocation":"10309:5:14","nodeType":"VariableDeclaration","scope":3255,"src":"10301:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:14"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3255,"src":"10339:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3232,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:14","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:14"},"scope":4489,"src":"10282:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3282,"nodeType":"Block","src":"10857:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"10871:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3265,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:14","memberName":"max","nodeType":"MemberAccess","src":"10879:17:14","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3276,"nodeType":"IfStatement","src":"10867:105:14","trueBody":{"id":3275,"nodeType":"Block","src":"10898:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:14","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"10955:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"10919:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3274,"nodeType":"RevertStatement","src":"10912:49:14"}]}},{"expression":{"arguments":[{"id":3279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"10996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3277,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:14","typeDescriptions":{}}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3262,"id":3281,"nodeType":"Return","src":"10981:21:14"}]},"documentation":{"id":3256,"nodeType":"StructuredDocumentation","src":"10506:280:14","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:14","nodeType":"FunctionDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"value","nameLocation":"10818:5:14","nodeType":"VariableDeclaration","scope":3283,"src":"10810:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3257,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:14"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3283,"src":"10848:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3260,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:14","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:14"},"scope":4489,"src":"10791:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3310,"nodeType":"Block","src":"11360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"11374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3293,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:14","memberName":"max","nodeType":"MemberAccess","src":"11382:16:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3304,"nodeType":"IfStatement","src":"11370:103:14","trueBody":{"id":3303,"nodeType":"Block","src":"11400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"11456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"11421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3302,"nodeType":"RevertStatement","src":"11414:48:14"}]}},{"expression":{"arguments":[{"id":3307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"11496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3305,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:14","typeDescriptions":{}}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3290,"id":3309,"nodeType":"Return","src":"11482:20:14"}]},"documentation":{"id":3284,"nodeType":"StructuredDocumentation","src":"11015:276:14","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:14","nodeType":"FunctionDefinition","parameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"value","nameLocation":"11322:5:14","nodeType":"VariableDeclaration","scope":3311,"src":"11314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:14"},"returnParameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3311,"src":"11352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3288,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:14"},"scope":4489,"src":"11296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3338,"nodeType":"Block","src":"11860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"11874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3321,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:14","memberName":"max","nodeType":"MemberAccess","src":"11882:16:14","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3332,"nodeType":"IfStatement","src":"11870:103:14","trueBody":{"id":3331,"nodeType":"Block","src":"11900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"11956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"11921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3330,"nodeType":"RevertStatement","src":"11914:48:14"}]}},{"expression":{"arguments":[{"id":3335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"11996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3333,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:14","typeDescriptions":{}}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3318,"id":3337,"nodeType":"Return","src":"11982:20:14"}]},"documentation":{"id":3312,"nodeType":"StructuredDocumentation","src":"11515:276:14","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:14","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"value","nameLocation":"11822:5:14","nodeType":"VariableDeclaration","scope":3339,"src":"11814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:14"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"11852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3316,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:14","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:14"},"scope":4489,"src":"11796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3366,"nodeType":"Block","src":"12360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"12374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3349,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:14","memberName":"max","nodeType":"MemberAccess","src":"12382:16:14","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3360,"nodeType":"IfStatement","src":"12370:103:14","trueBody":{"id":3359,"nodeType":"Block","src":"12400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"12456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"12421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3358,"nodeType":"RevertStatement","src":"12414:48:14"}]}},{"expression":{"arguments":[{"id":3363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"12496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3361,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:14","typeDescriptions":{}}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3346,"id":3365,"nodeType":"Return","src":"12482:20:14"}]},"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"12015:276:14","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:14","nodeType":"FunctionDefinition","parameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"value","nameLocation":"12322:5:14","nodeType":"VariableDeclaration","scope":3367,"src":"12314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3341,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:14"},"returnParameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3367,"src":"12352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3344,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:14","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:14"},"scope":4489,"src":"12296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3394,"nodeType":"Block","src":"12860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"12874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3377,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:14","memberName":"max","nodeType":"MemberAccess","src":"12882:16:14","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3388,"nodeType":"IfStatement","src":"12870:103:14","trueBody":{"id":3387,"nodeType":"Block","src":"12900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"12956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"12921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3386,"nodeType":"RevertStatement","src":"12914:48:14"}]}},{"expression":{"arguments":[{"id":3391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"12996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3389,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:14","typeDescriptions":{}}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3374,"id":3393,"nodeType":"Return","src":"12982:20:14"}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"12515:276:14","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:14","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"value","nameLocation":"12822:5:14","nodeType":"VariableDeclaration","scope":3395,"src":"12814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:14"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3395,"src":"12852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3372,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:14","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:14"},"scope":4489,"src":"12796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3422,"nodeType":"Block","src":"13360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"13374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3405,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:14","memberName":"max","nodeType":"MemberAccess","src":"13382:16:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3416,"nodeType":"IfStatement","src":"13370:103:14","trueBody":{"id":3415,"nodeType":"Block","src":"13400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"13456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"13421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3414,"nodeType":"RevertStatement","src":"13414:48:14"}]}},{"expression":{"arguments":[{"id":3419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"13496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3417,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:14","typeDescriptions":{}}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3402,"id":3421,"nodeType":"Return","src":"13482:20:14"}]},"documentation":{"id":3396,"nodeType":"StructuredDocumentation","src":"13015:276:14","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:14","nodeType":"FunctionDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"value","nameLocation":"13322:5:14","nodeType":"VariableDeclaration","scope":3423,"src":"13314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:14"},"returnParameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3423,"src":"13352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3400,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:14"},"scope":4489,"src":"13296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3450,"nodeType":"Block","src":"13860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"13874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3433,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:14","memberName":"max","nodeType":"MemberAccess","src":"13882:16:14","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3444,"nodeType":"IfStatement","src":"13870:103:14","trueBody":{"id":3443,"nodeType":"Block","src":"13900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"13956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"13921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3442,"nodeType":"RevertStatement","src":"13914:48:14"}]}},{"expression":{"arguments":[{"id":3447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"13996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3445,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:14","typeDescriptions":{}}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3430,"id":3449,"nodeType":"Return","src":"13982:20:14"}]},"documentation":{"id":3424,"nodeType":"StructuredDocumentation","src":"13515:276:14","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:14","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"value","nameLocation":"13822:5:14","nodeType":"VariableDeclaration","scope":3451,"src":"13814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:14"},"returnParameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3451,"src":"13852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3428,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:14","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:14"},"scope":4489,"src":"13796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3478,"nodeType":"Block","src":"14360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"14374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3461,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:14","memberName":"max","nodeType":"MemberAccess","src":"14382:16:14","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3472,"nodeType":"IfStatement","src":"14370:103:14","trueBody":{"id":3471,"nodeType":"Block","src":"14400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"14456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3466,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"14421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3470,"nodeType":"RevertStatement","src":"14414:48:14"}]}},{"expression":{"arguments":[{"id":3475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"14496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3473,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:14","typeDescriptions":{}}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3458,"id":3477,"nodeType":"Return","src":"14482:20:14"}]},"documentation":{"id":3452,"nodeType":"StructuredDocumentation","src":"14015:276:14","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3479,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:14","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"value","nameLocation":"14322:5:14","nodeType":"VariableDeclaration","scope":3479,"src":"14314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:14"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3479,"src":"14352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3456,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:14","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:14"},"scope":4489,"src":"14296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3506,"nodeType":"Block","src":"14860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"14874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3489,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":3488,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:14","memberName":"max","nodeType":"MemberAccess","src":"14882:16:14","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3500,"nodeType":"IfStatement","src":"14870:103:14","trueBody":{"id":3499,"nodeType":"Block","src":"14900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"14956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3494,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"14921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3498,"nodeType":"RevertStatement","src":"14914:48:14"}]}},{"expression":{"arguments":[{"id":3503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"14996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3501,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:14","typeDescriptions":{}}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":3486,"id":3505,"nodeType":"Return","src":"14982:20:14"}]},"documentation":{"id":3480,"nodeType":"StructuredDocumentation","src":"14515:276:14","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:14","nodeType":"FunctionDefinition","parameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"value","nameLocation":"14822:5:14","nodeType":"VariableDeclaration","scope":3507,"src":"14814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3481,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:14"},"returnParameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3507,"src":"14852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3484,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:14","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:14"},"scope":4489,"src":"14796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3534,"nodeType":"Block","src":"15360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"15374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3517,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:14","memberName":"max","nodeType":"MemberAccess","src":"15382:16:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3528,"nodeType":"IfStatement","src":"15370:103:14","trueBody":{"id":3527,"nodeType":"Block","src":"15400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"15456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3522,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"15421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3526,"nodeType":"RevertStatement","src":"15414:48:14"}]}},{"expression":{"arguments":[{"id":3531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"15496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3529,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:14","typeDescriptions":{}}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3514,"id":3533,"nodeType":"Return","src":"15482:20:14"}]},"documentation":{"id":3508,"nodeType":"StructuredDocumentation","src":"15015:276:14","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3535,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:14","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"value","nameLocation":"15322:5:14","nodeType":"VariableDeclaration","scope":3535,"src":"15314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:14"},"returnParameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3535,"src":"15352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3512,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:14"},"scope":4489,"src":"15296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3562,"nodeType":"Block","src":"15860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"15874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3545,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":3544,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:14","memberName":"max","nodeType":"MemberAccess","src":"15882:16:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3556,"nodeType":"IfStatement","src":"15870:103:14","trueBody":{"id":3555,"nodeType":"Block","src":"15900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"15956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3550,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"15921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3554,"nodeType":"RevertStatement","src":"15914:48:14"}]}},{"expression":{"arguments":[{"id":3559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"15996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3557,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:14","typeDescriptions":{}}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":3542,"id":3561,"nodeType":"Return","src":"15982:20:14"}]},"documentation":{"id":3536,"nodeType":"StructuredDocumentation","src":"15515:276:14","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:14","nodeType":"FunctionDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"value","nameLocation":"15822:5:14","nodeType":"VariableDeclaration","scope":3563,"src":"15814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:14"},"returnParameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3563,"src":"15852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3540,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:14"},"scope":4489,"src":"15796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3590,"nodeType":"Block","src":"16360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"16374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3573,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":3572,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:14","memberName":"max","nodeType":"MemberAccess","src":"16382:16:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3584,"nodeType":"IfStatement","src":"16370:103:14","trueBody":{"id":3583,"nodeType":"Block","src":"16400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"16456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3578,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3582,"nodeType":"RevertStatement","src":"16414:48:14"}]}},{"expression":{"arguments":[{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"16496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3585,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:14","typeDescriptions":{}}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3570,"id":3589,"nodeType":"Return","src":"16482:20:14"}]},"documentation":{"id":3564,"nodeType":"StructuredDocumentation","src":"16015:276:14","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:14","nodeType":"FunctionDefinition","parameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"value","nameLocation":"16322:5:14","nodeType":"VariableDeclaration","scope":3591,"src":"16314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:14"},"returnParameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3591,"src":"16352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3568,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:14"},"scope":4489,"src":"16296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3618,"nodeType":"Block","src":"16854:146:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"16868:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3601,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3600,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:14","memberName":"max","nodeType":"MemberAccess","src":"16876:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3612,"nodeType":"IfStatement","src":"16864:101:14","trueBody":{"id":3611,"nodeType":"Block","src":"16893:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"16948:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3606,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16914:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3610,"nodeType":"RevertStatement","src":"16907:47:14"}]}},{"expression":{"arguments":[{"id":3615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"16987:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3613,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:14","typeDescriptions":{}}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3598,"id":3617,"nodeType":"Return","src":"16974:19:14"}]},"documentation":{"id":3592,"nodeType":"StructuredDocumentation","src":"16515:272:14","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3619,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:14","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"value","nameLocation":"16817:5:14","nodeType":"VariableDeclaration","scope":3619,"src":"16809:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:14"},"returnParameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3619,"src":"16847:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3596,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:14"},"scope":4489,"src":"16792:208:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3641,"nodeType":"Block","src":"17236:128:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"17250:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3635,"nodeType":"IfStatement","src":"17246:81:14","trueBody":{"id":3634,"nodeType":"Block","src":"17261:66:14","statements":[{"errorCall":{"arguments":[{"id":3631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"17310:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3630,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"17282:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3633,"nodeType":"RevertStatement","src":"17275:41:14"}]}},{"expression":{"arguments":[{"id":3638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"17351:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:14","typeDescriptions":{}}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3626,"id":3640,"nodeType":"Return","src":"17336:21:14"}]},"documentation":{"id":3620,"nodeType":"StructuredDocumentation","src":"17006:160:14","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":3642,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:14","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"value","nameLocation":"17197:5:14","nodeType":"VariableDeclaration","scope":3642,"src":"17190:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3621,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:14"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3642,"src":"17227:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:14"},"scope":4489,"src":"17171:193:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3667,"nodeType":"Block","src":"17761:150:14","statements":[{"expression":{"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3650,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"17771:10:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"17791:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":3651,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:14","typeDescriptions":{}}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":3656,"nodeType":"ExpressionStatement","src":"17771:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3657,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"17811:10:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"17825:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3666,"nodeType":"IfStatement","src":"17807:98:14","trueBody":{"id":3665,"nodeType":"Block","src":"17832:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:14","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"17888:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3660,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"17853:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3664,"nodeType":"RevertStatement","src":"17846:48:14"}]}}]},"documentation":{"id":3643,"nodeType":"StructuredDocumentation","src":"17370:312:14","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3668,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:14","nodeType":"FunctionDefinition","parameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"value","nameLocation":"17712:5:14","nodeType":"VariableDeclaration","scope":3668,"src":"17705:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3644,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:14"},"returnParameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:14","nodeType":"VariableDeclaration","scope":3668,"src":"17742:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":3647,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:14"},"scope":4489,"src":"17687:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3693,"nodeType":"Block","src":"18308:150:14","statements":[{"expression":{"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3676,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"18318:10:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"18338:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":3677,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:14","typeDescriptions":{}}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":3682,"nodeType":"ExpressionStatement","src":"18318:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"18358:10:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"18372:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3692,"nodeType":"IfStatement","src":"18354:98:14","trueBody":{"id":3691,"nodeType":"Block","src":"18379:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:14","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"18435:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3686,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"18400:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3690,"nodeType":"RevertStatement","src":"18393:48:14"}]}}]},"documentation":{"id":3669,"nodeType":"StructuredDocumentation","src":"17917:312:14","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3694,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:14","nodeType":"FunctionDefinition","parameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"value","nameLocation":"18259:5:14","nodeType":"VariableDeclaration","scope":3694,"src":"18252:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3670,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:14"},"returnParameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:14","nodeType":"VariableDeclaration","scope":3694,"src":"18289:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":3673,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:14"},"scope":4489,"src":"18234:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3719,"nodeType":"Block","src":"18855:150:14","statements":[{"expression":{"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"18865:10:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"18885:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":3703,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:14","typeDescriptions":{}}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":3708,"nodeType":"ExpressionStatement","src":"18865:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"18905:10:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"18919:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3718,"nodeType":"IfStatement","src":"18901:98:14","trueBody":{"id":3717,"nodeType":"Block","src":"18926:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:14","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"18982:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3712,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"18947:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3716,"nodeType":"RevertStatement","src":"18940:48:14"}]}}]},"documentation":{"id":3695,"nodeType":"StructuredDocumentation","src":"18464:312:14","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3720,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:14","nodeType":"FunctionDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"value","nameLocation":"18806:5:14","nodeType":"VariableDeclaration","scope":3720,"src":"18799:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3696,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:14"},"returnParameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:14","nodeType":"VariableDeclaration","scope":3720,"src":"18836:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":3699,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:14"},"scope":4489,"src":"18781:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"19402:150:14","statements":[{"expression":{"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"19412:10:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"19432:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":3729,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:14","typeDescriptions":{}}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":3734,"nodeType":"ExpressionStatement","src":"19412:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"19452:10:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"19466:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3744,"nodeType":"IfStatement","src":"19448:98:14","trueBody":{"id":3743,"nodeType":"Block","src":"19473:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:14","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"19529:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3738,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"19494:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3742,"nodeType":"RevertStatement","src":"19487:48:14"}]}}]},"documentation":{"id":3721,"nodeType":"StructuredDocumentation","src":"19011:312:14","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:14","nodeType":"FunctionDefinition","parameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"value","nameLocation":"19353:5:14","nodeType":"VariableDeclaration","scope":3746,"src":"19346:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3722,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:14"},"returnParameters":{"id":3727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:14","nodeType":"VariableDeclaration","scope":3746,"src":"19383:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":3725,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:14"},"scope":4489,"src":"19328:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3771,"nodeType":"Block","src":"19949:150:14","statements":[{"expression":{"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"19959:10:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"19979:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":3755,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:14","typeDescriptions":{}}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":3760,"nodeType":"ExpressionStatement","src":"19959:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"19999:10:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"20013:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3770,"nodeType":"IfStatement","src":"19995:98:14","trueBody":{"id":3769,"nodeType":"Block","src":"20020:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:14","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"20076:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3764,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"20041:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3768,"nodeType":"RevertStatement","src":"20034:48:14"}]}}]},"documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"19558:312:14","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3772,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:14","nodeType":"FunctionDefinition","parameters":{"id":3750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"value","nameLocation":"19900:5:14","nodeType":"VariableDeclaration","scope":3772,"src":"19893:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3748,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:14"},"returnParameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:14","nodeType":"VariableDeclaration","scope":3772,"src":"19930:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":3751,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:14"},"scope":4489,"src":"19875:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3797,"nodeType":"Block","src":"20496:150:14","statements":[{"expression":{"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"20506:10:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"20526:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":3781,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:14","typeDescriptions":{}}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":3786,"nodeType":"ExpressionStatement","src":"20506:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"20546:10:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"20560:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3796,"nodeType":"IfStatement","src":"20542:98:14","trueBody":{"id":3795,"nodeType":"Block","src":"20567:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:14","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"20623:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3790,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"20588:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3794,"nodeType":"RevertStatement","src":"20581:48:14"}]}}]},"documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"20105:312:14","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3798,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:14","nodeType":"FunctionDefinition","parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"value","nameLocation":"20447:5:14","nodeType":"VariableDeclaration","scope":3798,"src":"20440:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3774,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:14"},"returnParameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:14","nodeType":"VariableDeclaration","scope":3798,"src":"20477:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":3777,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:14"},"scope":4489,"src":"20422:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3823,"nodeType":"Block","src":"21043:150:14","statements":[{"expression":{"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"21053:10:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"21073:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":3807,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:14","typeDescriptions":{}}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":3812,"nodeType":"ExpressionStatement","src":"21053:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"21093:10:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"21107:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3822,"nodeType":"IfStatement","src":"21089:98:14","trueBody":{"id":3821,"nodeType":"Block","src":"21114:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:14","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"21170:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3816,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"21135:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3820,"nodeType":"RevertStatement","src":"21128:48:14"}]}}]},"documentation":{"id":3799,"nodeType":"StructuredDocumentation","src":"20652:312:14","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3824,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:14","nodeType":"FunctionDefinition","parameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"value","nameLocation":"20994:5:14","nodeType":"VariableDeclaration","scope":3824,"src":"20987:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3800,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:14"},"returnParameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:14","nodeType":"VariableDeclaration","scope":3824,"src":"21024:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":3803,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:14"},"scope":4489,"src":"20969:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3849,"nodeType":"Block","src":"21590:150:14","statements":[{"expression":{"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"21600:10:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"21620:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":3833,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:14","typeDescriptions":{}}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":3838,"nodeType":"ExpressionStatement","src":"21600:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3839,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"21640:10:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"21654:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3848,"nodeType":"IfStatement","src":"21636:98:14","trueBody":{"id":3847,"nodeType":"Block","src":"21661:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:14","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"21717:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3842,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"21682:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3846,"nodeType":"RevertStatement","src":"21675:48:14"}]}}]},"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"21199:312:14","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3850,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:14","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"value","nameLocation":"21541:5:14","nodeType":"VariableDeclaration","scope":3850,"src":"21534:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3826,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:14"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:14","nodeType":"VariableDeclaration","scope":3850,"src":"21571:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":3829,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:14"},"scope":4489,"src":"21516:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3875,"nodeType":"Block","src":"22137:150:14","statements":[{"expression":{"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"22147:10:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"22167:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":3859,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:14","typeDescriptions":{}}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":3864,"nodeType":"ExpressionStatement","src":"22147:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"22187:10:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"22201:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3874,"nodeType":"IfStatement","src":"22183:98:14","trueBody":{"id":3873,"nodeType":"Block","src":"22208:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:14","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"22264:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3868,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"22229:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3872,"nodeType":"RevertStatement","src":"22222:48:14"}]}}]},"documentation":{"id":3851,"nodeType":"StructuredDocumentation","src":"21746:312:14","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3876,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:14","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"value","nameLocation":"22088:5:14","nodeType":"VariableDeclaration","scope":3876,"src":"22081:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3852,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:14"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:14","nodeType":"VariableDeclaration","scope":3876,"src":"22118:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":3855,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:14"},"scope":4489,"src":"22063:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3901,"nodeType":"Block","src":"22684:150:14","statements":[{"expression":{"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"22694:10:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"22714:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":3885,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:14","typeDescriptions":{}}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":3890,"nodeType":"ExpressionStatement","src":"22694:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"22734:10:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"22748:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3900,"nodeType":"IfStatement","src":"22730:98:14","trueBody":{"id":3899,"nodeType":"Block","src":"22755:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:14","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"22811:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3894,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"22776:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3898,"nodeType":"RevertStatement","src":"22769:48:14"}]}}]},"documentation":{"id":3877,"nodeType":"StructuredDocumentation","src":"22293:312:14","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3902,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:14","nodeType":"FunctionDefinition","parameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"value","nameLocation":"22635:5:14","nodeType":"VariableDeclaration","scope":3902,"src":"22628:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3878,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:14"},"returnParameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:14","nodeType":"VariableDeclaration","scope":3902,"src":"22665:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":3881,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:14"},"scope":4489,"src":"22610:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3927,"nodeType":"Block","src":"23231:150:14","statements":[{"expression":{"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"23241:10:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"23261:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":3911,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:14","typeDescriptions":{}}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":3916,"nodeType":"ExpressionStatement","src":"23241:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"23281:10:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"23295:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3926,"nodeType":"IfStatement","src":"23277:98:14","trueBody":{"id":3925,"nodeType":"Block","src":"23302:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:14","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"23358:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3920,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"23323:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3924,"nodeType":"RevertStatement","src":"23316:48:14"}]}}]},"documentation":{"id":3903,"nodeType":"StructuredDocumentation","src":"22840:312:14","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3928,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:14","nodeType":"FunctionDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"value","nameLocation":"23182:5:14","nodeType":"VariableDeclaration","scope":3928,"src":"23175:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3904,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:14"},"returnParameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:14","nodeType":"VariableDeclaration","scope":3928,"src":"23212:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":3907,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:14"},"scope":4489,"src":"23157:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3953,"nodeType":"Block","src":"23778:150:14","statements":[{"expression":{"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"23788:10:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"23808:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":3937,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:14","typeDescriptions":{}}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":3942,"nodeType":"ExpressionStatement","src":"23788:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3943,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"23828:10:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"23842:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3952,"nodeType":"IfStatement","src":"23824:98:14","trueBody":{"id":3951,"nodeType":"Block","src":"23849:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:14","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"23905:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3946,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"23870:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3950,"nodeType":"RevertStatement","src":"23863:48:14"}]}}]},"documentation":{"id":3929,"nodeType":"StructuredDocumentation","src":"23387:312:14","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3954,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:14","nodeType":"FunctionDefinition","parameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"value","nameLocation":"23729:5:14","nodeType":"VariableDeclaration","scope":3954,"src":"23722:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3930,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:14"},"returnParameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:14","nodeType":"VariableDeclaration","scope":3954,"src":"23759:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":3933,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:14"},"scope":4489,"src":"23704:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3979,"nodeType":"Block","src":"24325:150:14","statements":[{"expression":{"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"24335:10:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"24355:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":3963,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:14","typeDescriptions":{}}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":3968,"nodeType":"ExpressionStatement","src":"24335:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"24375:10:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"24389:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3978,"nodeType":"IfStatement","src":"24371:98:14","trueBody":{"id":3977,"nodeType":"Block","src":"24396:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:14","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"24452:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3972,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"24417:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3976,"nodeType":"RevertStatement","src":"24410:48:14"}]}}]},"documentation":{"id":3955,"nodeType":"StructuredDocumentation","src":"23934:312:14","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3980,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:14","nodeType":"FunctionDefinition","parameters":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3957,"mutability":"mutable","name":"value","nameLocation":"24276:5:14","nodeType":"VariableDeclaration","scope":3980,"src":"24269:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3956,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:14"},"returnParameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:14","nodeType":"VariableDeclaration","scope":3980,"src":"24306:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":3959,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:14"},"scope":4489,"src":"24251:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4005,"nodeType":"Block","src":"24872:150:14","statements":[{"expression":{"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"24882:10:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"24902:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":3989,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:14","typeDescriptions":{}}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":3994,"nodeType":"ExpressionStatement","src":"24882:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"24922:10:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"24936:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4004,"nodeType":"IfStatement","src":"24918:98:14","trueBody":{"id":4003,"nodeType":"Block","src":"24943:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:14","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"24999:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3998,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"24964:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4002,"nodeType":"RevertStatement","src":"24957:48:14"}]}}]},"documentation":{"id":3981,"nodeType":"StructuredDocumentation","src":"24481:312:14","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4006,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:14","nodeType":"FunctionDefinition","parameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"value","nameLocation":"24823:5:14","nodeType":"VariableDeclaration","scope":4006,"src":"24816:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3982,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:14"},"returnParameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:14","nodeType":"VariableDeclaration","scope":4006,"src":"24853:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":3985,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:14"},"scope":4489,"src":"24798:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4031,"nodeType":"Block","src":"25419:150:14","statements":[{"expression":{"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"25429:10:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"25449:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4015,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:14","typeDescriptions":{}}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4020,"nodeType":"ExpressionStatement","src":"25429:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"25469:10:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"25483:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4030,"nodeType":"IfStatement","src":"25465:98:14","trueBody":{"id":4029,"nodeType":"Block","src":"25490:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:14","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"25546:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4024,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"25511:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4028,"nodeType":"RevertStatement","src":"25504:48:14"}]}}]},"documentation":{"id":4007,"nodeType":"StructuredDocumentation","src":"25028:312:14","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4032,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:14","nodeType":"FunctionDefinition","parameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"value","nameLocation":"25370:5:14","nodeType":"VariableDeclaration","scope":4032,"src":"25363:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4008,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:14"},"returnParameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:14","nodeType":"VariableDeclaration","scope":4032,"src":"25400:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4011,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:14"},"scope":4489,"src":"25345:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4057,"nodeType":"Block","src":"25966:150:14","statements":[{"expression":{"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"25976:10:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"25996:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4041,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:14","typeDescriptions":{}}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":4046,"nodeType":"ExpressionStatement","src":"25976:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"26016:10:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"26030:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4056,"nodeType":"IfStatement","src":"26012:98:14","trueBody":{"id":4055,"nodeType":"Block","src":"26037:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"26093:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4050,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"26058:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4054,"nodeType":"RevertStatement","src":"26051:48:14"}]}}]},"documentation":{"id":4033,"nodeType":"StructuredDocumentation","src":"25575:312:14","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:14","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"value","nameLocation":"25917:5:14","nodeType":"VariableDeclaration","scope":4058,"src":"25910:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4034,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:14"},"returnParameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:14","nodeType":"VariableDeclaration","scope":4058,"src":"25947:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4037,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:14"},"scope":4489,"src":"25892:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4083,"nodeType":"Block","src":"26513:150:14","statements":[{"expression":{"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"26523:10:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"26543:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4067,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:14","typeDescriptions":{}}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4072,"nodeType":"ExpressionStatement","src":"26523:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"26563:10:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"26577:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4082,"nodeType":"IfStatement","src":"26559:98:14","trueBody":{"id":4081,"nodeType":"Block","src":"26584:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:14","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"26640:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4076,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"26605:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4080,"nodeType":"RevertStatement","src":"26598:48:14"}]}}]},"documentation":{"id":4059,"nodeType":"StructuredDocumentation","src":"26122:312:14","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4084,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:14","nodeType":"FunctionDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4061,"mutability":"mutable","name":"value","nameLocation":"26464:5:14","nodeType":"VariableDeclaration","scope":4084,"src":"26457:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4060,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:14"},"returnParameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:14","nodeType":"VariableDeclaration","scope":4084,"src":"26494:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4063,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:14"},"scope":4489,"src":"26439:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4109,"nodeType":"Block","src":"27060:150:14","statements":[{"expression":{"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"27070:10:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"27090:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4093,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:14","typeDescriptions":{}}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4098,"nodeType":"ExpressionStatement","src":"27070:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"27110:10:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"27124:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4108,"nodeType":"IfStatement","src":"27106:98:14","trueBody":{"id":4107,"nodeType":"Block","src":"27131:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:14","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"27187:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4102,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"27152:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4106,"nodeType":"RevertStatement","src":"27145:48:14"}]}}]},"documentation":{"id":4085,"nodeType":"StructuredDocumentation","src":"26669:312:14","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4110,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:14","nodeType":"FunctionDefinition","parameters":{"id":4088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4087,"mutability":"mutable","name":"value","nameLocation":"27011:5:14","nodeType":"VariableDeclaration","scope":4110,"src":"27004:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4086,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:14"},"returnParameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4090,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:14","nodeType":"VariableDeclaration","scope":4110,"src":"27041:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4089,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:14"},"scope":4489,"src":"26986:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4135,"nodeType":"Block","src":"27607:150:14","statements":[{"expression":{"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"27617:10:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"27637:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4119,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:14","typeDescriptions":{}}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4124,"nodeType":"ExpressionStatement","src":"27617:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"27657:10:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"27671:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4134,"nodeType":"IfStatement","src":"27653:98:14","trueBody":{"id":4133,"nodeType":"Block","src":"27678:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:14","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"27734:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4128,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"27699:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4132,"nodeType":"RevertStatement","src":"27692:48:14"}]}}]},"documentation":{"id":4111,"nodeType":"StructuredDocumentation","src":"27216:312:14","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4136,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:14","nodeType":"FunctionDefinition","parameters":{"id":4114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4113,"mutability":"mutable","name":"value","nameLocation":"27558:5:14","nodeType":"VariableDeclaration","scope":4136,"src":"27551:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4112,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:14"},"returnParameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:14","nodeType":"VariableDeclaration","scope":4136,"src":"27588:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4115,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:14"},"scope":4489,"src":"27533:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4161,"nodeType":"Block","src":"28147:148:14","statements":[{"expression":{"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"28157:10:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"28176:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4145,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:14","typeDescriptions":{}}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4150,"nodeType":"ExpressionStatement","src":"28157:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"28196:10:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"28210:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4160,"nodeType":"IfStatement","src":"28192:97:14","trueBody":{"id":4159,"nodeType":"Block","src":"28217:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"28272:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4154,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"28238:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4158,"nodeType":"RevertStatement","src":"28231:47:14"}]}}]},"documentation":{"id":4137,"nodeType":"StructuredDocumentation","src":"27763:307:14","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4162,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:14","nodeType":"FunctionDefinition","parameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"value","nameLocation":"28099:5:14","nodeType":"VariableDeclaration","scope":4162,"src":"28092:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4138,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:14"},"returnParameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:14","nodeType":"VariableDeclaration","scope":4162,"src":"28129:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4141,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:14"},"scope":4489,"src":"28075:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4187,"nodeType":"Block","src":"28685:148:14","statements":[{"expression":{"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"28695:10:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"28714:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4171,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:14","typeDescriptions":{}}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4176,"nodeType":"ExpressionStatement","src":"28695:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"28734:10:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"28748:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4186,"nodeType":"IfStatement","src":"28730:97:14","trueBody":{"id":4185,"nodeType":"Block","src":"28755:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:14","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"28810:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4180,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"28776:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4184,"nodeType":"RevertStatement","src":"28769:47:14"}]}}]},"documentation":{"id":4163,"nodeType":"StructuredDocumentation","src":"28301:307:14","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4188,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:14","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"value","nameLocation":"28637:5:14","nodeType":"VariableDeclaration","scope":4188,"src":"28630:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4164,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:14"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:14","nodeType":"VariableDeclaration","scope":4188,"src":"28667:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4167,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:14"},"scope":4489,"src":"28613:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4213,"nodeType":"Block","src":"29223:148:14","statements":[{"expression":{"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"29233:10:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"29252:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4197,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:14","typeDescriptions":{}}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4202,"nodeType":"ExpressionStatement","src":"29233:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"29272:10:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"29286:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4212,"nodeType":"IfStatement","src":"29268:97:14","trueBody":{"id":4211,"nodeType":"Block","src":"29293:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:14","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"29348:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4206,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"29314:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4210,"nodeType":"RevertStatement","src":"29307:47:14"}]}}]},"documentation":{"id":4189,"nodeType":"StructuredDocumentation","src":"28839:307:14","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4214,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:14","nodeType":"FunctionDefinition","parameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"value","nameLocation":"29175:5:14","nodeType":"VariableDeclaration","scope":4214,"src":"29168:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4190,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:14"},"returnParameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:14","nodeType":"VariableDeclaration","scope":4214,"src":"29205:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4193,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:14"},"scope":4489,"src":"29151:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4239,"nodeType":"Block","src":"29761:148:14","statements":[{"expression":{"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"29771:10:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"29790:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4223,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:14","typeDescriptions":{}}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4228,"nodeType":"ExpressionStatement","src":"29771:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"29810:10:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"29824:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"IfStatement","src":"29806:97:14","trueBody":{"id":4237,"nodeType":"Block","src":"29831:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:14","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"29886:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4232,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"29852:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4236,"nodeType":"RevertStatement","src":"29845:47:14"}]}}]},"documentation":{"id":4215,"nodeType":"StructuredDocumentation","src":"29377:307:14","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4240,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:14","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"value","nameLocation":"29713:5:14","nodeType":"VariableDeclaration","scope":4240,"src":"29706:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4216,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:14"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:14","nodeType":"VariableDeclaration","scope":4240,"src":"29743:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4219,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:14"},"scope":4489,"src":"29689:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4265,"nodeType":"Block","src":"30299:148:14","statements":[{"expression":{"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"30309:10:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"30328:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4249,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:14","typeDescriptions":{}}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4254,"nodeType":"ExpressionStatement","src":"30309:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4255,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"30348:10:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"30362:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4264,"nodeType":"IfStatement","src":"30344:97:14","trueBody":{"id":4263,"nodeType":"Block","src":"30369:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"30424:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4258,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"30390:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4262,"nodeType":"RevertStatement","src":"30383:47:14"}]}}]},"documentation":{"id":4241,"nodeType":"StructuredDocumentation","src":"29915:307:14","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4266,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:14","nodeType":"FunctionDefinition","parameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"value","nameLocation":"30251:5:14","nodeType":"VariableDeclaration","scope":4266,"src":"30244:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4242,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:14"},"returnParameters":{"id":4247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:14","nodeType":"VariableDeclaration","scope":4266,"src":"30281:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4245,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:14"},"scope":4489,"src":"30227:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4291,"nodeType":"Block","src":"30837:148:14","statements":[{"expression":{"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4274,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"30847:10:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"30866:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4275,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:14","typeDescriptions":{}}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4280,"nodeType":"ExpressionStatement","src":"30847:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"30886:10:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"30900:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4290,"nodeType":"IfStatement","src":"30882:97:14","trueBody":{"id":4289,"nodeType":"Block","src":"30907:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:14","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"30962:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4284,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"30928:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4288,"nodeType":"RevertStatement","src":"30921:47:14"}]}}]},"documentation":{"id":4267,"nodeType":"StructuredDocumentation","src":"30453:307:14","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4292,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:14","nodeType":"FunctionDefinition","parameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"value","nameLocation":"30789:5:14","nodeType":"VariableDeclaration","scope":4292,"src":"30782:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4268,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:14"},"returnParameters":{"id":4273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4272,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:14","nodeType":"VariableDeclaration","scope":4292,"src":"30819:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4271,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:14"},"scope":4489,"src":"30765:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4317,"nodeType":"Block","src":"31375:148:14","statements":[{"expression":{"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4300,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"31385:10:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"31404:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4301,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:14","typeDescriptions":{}}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4306,"nodeType":"ExpressionStatement","src":"31385:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"31424:10:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"31438:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4316,"nodeType":"IfStatement","src":"31420:97:14","trueBody":{"id":4315,"nodeType":"Block","src":"31445:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"31500:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4310,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"31466:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4314,"nodeType":"RevertStatement","src":"31459:47:14"}]}}]},"documentation":{"id":4293,"nodeType":"StructuredDocumentation","src":"30991:307:14","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4318,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:14","nodeType":"FunctionDefinition","parameters":{"id":4296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"value","nameLocation":"31327:5:14","nodeType":"VariableDeclaration","scope":4318,"src":"31320:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4294,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:14"},"returnParameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:14","nodeType":"VariableDeclaration","scope":4318,"src":"31357:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4297,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:14"},"scope":4489,"src":"31303:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4343,"nodeType":"Block","src":"31913:148:14","statements":[{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4326,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"31923:10:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"31942:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4327,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:14","typeDescriptions":{}}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4332,"nodeType":"ExpressionStatement","src":"31923:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4333,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"31962:10:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"31976:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4342,"nodeType":"IfStatement","src":"31958:97:14","trueBody":{"id":4341,"nodeType":"Block","src":"31983:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"32038:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4336,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"32004:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4340,"nodeType":"RevertStatement","src":"31997:47:14"}]}}]},"documentation":{"id":4319,"nodeType":"StructuredDocumentation","src":"31529:307:14","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4344,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:14","nodeType":"FunctionDefinition","parameters":{"id":4322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4321,"mutability":"mutable","name":"value","nameLocation":"31865:5:14","nodeType":"VariableDeclaration","scope":4344,"src":"31858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4320,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:14"},"returnParameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:14","nodeType":"VariableDeclaration","scope":4344,"src":"31895:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4323,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:14"},"scope":4489,"src":"31841:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4369,"nodeType":"Block","src":"32451:148:14","statements":[{"expression":{"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"32461:10:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"32480:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4353,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:14","typeDescriptions":{}}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4358,"nodeType":"ExpressionStatement","src":"32461:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4359,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"32500:10:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"32514:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4368,"nodeType":"IfStatement","src":"32496:97:14","trueBody":{"id":4367,"nodeType":"Block","src":"32521:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"32576:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4362,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"32542:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4366,"nodeType":"RevertStatement","src":"32535:47:14"}]}}]},"documentation":{"id":4345,"nodeType":"StructuredDocumentation","src":"32067:307:14","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4370,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:14","nodeType":"FunctionDefinition","parameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4347,"mutability":"mutable","name":"value","nameLocation":"32403:5:14","nodeType":"VariableDeclaration","scope":4370,"src":"32396:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4346,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:14"},"returnParameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:14","nodeType":"VariableDeclaration","scope":4370,"src":"32433:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4349,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:14"},"scope":4489,"src":"32379:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4395,"nodeType":"Block","src":"32989:148:14","statements":[{"expression":{"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4378,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"32999:10:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"33018:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4379,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:14","typeDescriptions":{}}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4384,"nodeType":"ExpressionStatement","src":"32999:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4385,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"33038:10:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"33052:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4394,"nodeType":"IfStatement","src":"33034:97:14","trueBody":{"id":4393,"nodeType":"Block","src":"33059:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:14","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"33114:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4388,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"33080:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4392,"nodeType":"RevertStatement","src":"33073:47:14"}]}}]},"documentation":{"id":4371,"nodeType":"StructuredDocumentation","src":"32605:307:14","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4396,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:14","nodeType":"FunctionDefinition","parameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"value","nameLocation":"32941:5:14","nodeType":"VariableDeclaration","scope":4396,"src":"32934:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4372,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:14"},"returnParameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4376,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:14","nodeType":"VariableDeclaration","scope":4396,"src":"32971:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4375,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:14"},"scope":4489,"src":"32917:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4421,"nodeType":"Block","src":"33527:148:14","statements":[{"expression":{"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4404,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"33537:10:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"33556:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4405,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:14","typeDescriptions":{}}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4410,"nodeType":"ExpressionStatement","src":"33537:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4411,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"33576:10:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"33590:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4420,"nodeType":"IfStatement","src":"33572:97:14","trueBody":{"id":4419,"nodeType":"Block","src":"33597:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"33652:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4414,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"33618:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4418,"nodeType":"RevertStatement","src":"33611:47:14"}]}}]},"documentation":{"id":4397,"nodeType":"StructuredDocumentation","src":"33143:307:14","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4422,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:14","nodeType":"FunctionDefinition","parameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4399,"mutability":"mutable","name":"value","nameLocation":"33479:5:14","nodeType":"VariableDeclaration","scope":4422,"src":"33472:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4398,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:14"},"returnParameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:14","nodeType":"VariableDeclaration","scope":4422,"src":"33509:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4401,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:14"},"scope":4489,"src":"33455:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4447,"nodeType":"Block","src":"34058:146:14","statements":[{"expression":{"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4430,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"34068:10:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"34086:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4431,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:14","typeDescriptions":{}}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4436,"nodeType":"ExpressionStatement","src":"34068:24:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4437,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"34106:10:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"34120:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4446,"nodeType":"IfStatement","src":"34102:96:14","trueBody":{"id":4445,"nodeType":"Block","src":"34127:71:14","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"34181:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4440,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"34148:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4444,"nodeType":"RevertStatement","src":"34141:46:14"}]}}]},"documentation":{"id":4423,"nodeType":"StructuredDocumentation","src":"33681:302:14","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4448,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:14","nodeType":"FunctionDefinition","parameters":{"id":4426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4425,"mutability":"mutable","name":"value","nameLocation":"34011:5:14","nodeType":"VariableDeclaration","scope":4448,"src":"34004:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4424,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:14"},"returnParameters":{"id":4429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:14","nodeType":"VariableDeclaration","scope":4448,"src":"34041:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4427,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:14"},"scope":4489,"src":"33988:216:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4477,"nodeType":"Block","src":"34444:250:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"34557:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4460,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4459,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:14","memberName":"max","nodeType":"MemberAccess","src":"34573:16:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:14","typeDescriptions":{}}},"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4471,"nodeType":"IfStatement","src":"34553:105:14","trueBody":{"id":4470,"nodeType":"Block","src":"34592:66:14","statements":[{"errorCall":{"arguments":[{"id":4467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"34641:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4466,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"34613:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4469,"nodeType":"RevertStatement","src":"34606:41:14"}]}},{"expression":{"arguments":[{"id":4474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"34681:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4472,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:14","typeDescriptions":{}}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4455,"id":4476,"nodeType":"Return","src":"34667:20:14"}]},"documentation":{"id":4449,"nodeType":"StructuredDocumentation","src":"34210:165:14","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":4478,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:14","nodeType":"FunctionDefinition","parameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4451,"mutability":"mutable","name":"value","nameLocation":"34406:5:14","nodeType":"VariableDeclaration","scope":4478,"src":"34398:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:14"},"returnParameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4478,"src":"34436:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4453,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:14"},"scope":4489,"src":"34380:314:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4487,"nodeType":"Block","src":"34853:87:14","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:14","statements":[{"nodeType":"YulAssignment","src":"34902:22:14","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:14"},"nodeType":"YulFunctionCall","src":"34914:9:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:14"},"nodeType":"YulFunctionCall","src":"34907:17:14"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4481,"isOffset":false,"isSlot":false,"src":"34921:1:14","valueSize":1},{"declaration":4484,"isOffset":false,"isSlot":false,"src":"34902:1:14","valueSize":1}],"flags":["memory-safe"],"id":4486,"nodeType":"InlineAssembly","src":"34863:71:14"}]},"documentation":{"id":4479,"nodeType":"StructuredDocumentation","src":"34700:90:14","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":4488,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:14","nodeType":"FunctionDefinition","parameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"b","nameLocation":"34816:1:14","nodeType":"VariableDeclaration","scope":4488,"src":"34811:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4480,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:14"},"returnParameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"u","nameLocation":"34850:1:14","nodeType":"VariableDeclaration","scope":4488,"src":"34842:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4483,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:14"},"scope":4489,"src":"34795:145:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4490,"src":"769:34173:14","usedErrors":[2734,2739,2746,2751],"usedEvents":[]}],"src":"192:34751:14"},"id":14},"contracts/ERC222Vault.sol":{"ast":{"absolutePath":"contracts/ERC222Vault.sol","exportedSymbols":{"Context":[970],"ERC222Vault":[5511],"IERC1363":[229],"IERC165":[1103],"IERC20":[315],"IERC20Metadata":[341],"IERC222NFT":[4517],"IERC222Token":[4537],"IERC721":[922],"IERC721Receiver":[940],"Math":[2724],"Ownable":[147],"Panic":[1022],"ReentrancyGuard":[1091],"SafeCast":[4489],"SafeERC20":[805]},"id":5512,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4491,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:15"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4492,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5512,"sourceUnit":148,"src":"58:52:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":4493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5512,"sourceUnit":1092,"src":"111:59:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5512,"sourceUnit":316,"src":"171:56:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5512,"sourceUnit":806,"src":"228:65:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":4496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5512,"sourceUnit":342,"src":"294:75:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":4497,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5512,"sourceUnit":923,"src":"370:58:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":4498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5512,"sourceUnit":941,"src":"429:66:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":4499,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5512,"sourceUnit":2725,"src":"496:53:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4500,"name":"IERC721","nameLocations":["575:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":922,"src":"575:7:15"},"id":4501,"nodeType":"InheritanceSpecifier","src":"575:7:15"}],"canonicalName":"IERC222NFT","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4517,"linearizedBaseContracts":[4517,922,1103],"name":"IERC222NFT","nameLocation":"561:10:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"32cb6b0c","id":4506,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_SUPPLY","nameLocation":"598:10:15","nodeType":"FunctionDefinition","parameters":{"id":4502,"nodeType":"ParameterList","parameters":[],"src":"608:2:15"},"returnParameters":{"id":4505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4506,"src":"634:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4503,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:9:15"},"scope":4517,"src":"589:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a2309ff8","id":4511,"implemented":false,"kind":"function","modifiers":[],"name":"totalMinted","nameLocation":"657:11:15","nodeType":"FunctionDefinition","parameters":{"id":4507,"nodeType":"ParameterList","parameters":[],"src":"668:2:15"},"returnParameters":{"id":4510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4511,"src":"694:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4508,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"693:9:15"},"scope":4517,"src":"648:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"96cd06f8","id":4516,"implemented":false,"kind":"function","modifiers":[],"name":"songName","nameLocation":"717:8:15","nodeType":"FunctionDefinition","parameters":{"id":4512,"nodeType":"ParameterList","parameters":[],"src":"725:2:15"},"returnParameters":{"id":4515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4516,"src":"751:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4513,"name":"string","nodeType":"ElementaryTypeName","src":"751:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"750:15:15"},"scope":4517,"src":"708:58:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5512,"src":"551:217:15","usedErrors":[],"usedEvents":[821,830,839]},{"abstract":false,"baseContracts":[{"baseName":{"id":4518,"name":"IERC20","nameLocations":["796:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"796:6:15"},"id":4519,"nodeType":"InheritanceSpecifier","src":"796:6:15"}],"canonicalName":"IERC222Token","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4537,"linearizedBaseContracts":[4537,315],"name":"IERC222Token","nameLocation":"780:12:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"adee8ff2","id":4524,"implemented":false,"kind":"function","modifiers":[],"name":"TOKENS_PER_NFT","nameLocation":"818:14:15","nodeType":"FunctionDefinition","parameters":{"id":4520,"nodeType":"ParameterList","parameters":[],"src":"832:2:15"},"returnParameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4524,"src":"858:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"857:9:15"},"scope":4537,"src":"809:58:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"96cd06f8","id":4529,"implemented":false,"kind":"function","modifiers":[],"name":"songName","nameLocation":"881:8:15","nodeType":"FunctionDefinition","parameters":{"id":4525,"nodeType":"ParameterList","parameters":[],"src":"889:2:15"},"returnParameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4529,"src":"915:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4526,"name":"string","nodeType":"ElementaryTypeName","src":"915:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"914:15:15"},"scope":4537,"src":"872:58:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"40c10f19","id":4536,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"944:4:15","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"to","nameLocation":"957:2:15","nodeType":"VariableDeclaration","scope":4536,"src":"949:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4530,"name":"address","nodeType":"ElementaryTypeName","src":"949:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"amount","nameLocation":"969:6:15","nodeType":"VariableDeclaration","scope":4536,"src":"961:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"948:28:15"},"returnParameters":{"id":4535,"nodeType":"ParameterList","parameters":[],"src":"985:0:15"},"scope":4537,"src":"935:51:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5512,"src":"770:218:15","usedErrors":[],"usedEvents":[249,258]},{"abstract":false,"baseContracts":[{"baseName":{"id":4539,"name":"Ownable","nameLocations":["1505:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1505:7:15"},"id":4540,"nodeType":"InheritanceSpecifier","src":"1505:7:15"},{"baseName":{"id":4541,"name":"ReentrancyGuard","nameLocations":["1514:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":1091,"src":"1514:15:15"},"id":4542,"nodeType":"InheritanceSpecifier","src":"1514:15:15"},{"baseName":{"id":4543,"name":"IERC721Receiver","nameLocations":["1531:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":940,"src":"1531:15:15"},"id":4544,"nodeType":"InheritanceSpecifier","src":"1531:15:15"}],"canonicalName":"ERC222Vault","contractDependencies":[],"contractKind":"contract","documentation":{"id":4538,"nodeType":"StructuredDocumentation","src":"990:490:15","text":" @title ERC222Vault\n @dev Vault contract that enables swapping between NFTs and kTokens\n @dev Tracks floor price and manages paired NFT/kToken storage\n @dev Enters \"open market\" mode after all NFTs are minted\n \n Constructor Parameters:\n - nftContract_ - Address of the paired ERC222NFT contract\n - tokenContract_ - Address of the paired ERC222Token contract\n - songName_ - Name of the song this vault represents\n - admin_ - Admin address for management functions"},"fullyImplemented":true,"id":5511,"linearizedBaseContracts":[5511,940,1091,147,970],"name":"ERC222Vault","nameLocation":"1490:11:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4548,"libraryName":{"id":4545,"name":"SafeERC20","nameLocations":["1559:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":805,"src":"1559:9:15"},"nodeType":"UsingForDirective","src":"1553:27:15","typeName":{"id":4547,"nodeType":"UserDefinedTypeName","pathNode":{"id":4546,"name":"IERC20","nameLocations":["1573:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1573:6:15"},"referencedDeclaration":315,"src":"1573:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"d56d229d","id":4551,"mutability":"immutable","name":"nftContract","nameLocation":"1637:11:15","nodeType":"VariableDeclaration","scope":5511,"src":"1609:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"},"typeName":{"id":4550,"nodeType":"UserDefinedTypeName","pathNode":{"id":4549,"name":"IERC222NFT","nameLocations":["1609:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":4517,"src":"1609:10:15"},"referencedDeclaration":4517,"src":"1609:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"visibility":"public"},{"constant":false,"functionSelector":"55a373d6","id":4554,"mutability":"immutable","name":"tokenContract","nameLocation":"1684:13:15","nodeType":"VariableDeclaration","scope":5511,"src":"1654:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"},"typeName":{"id":4553,"nodeType":"UserDefinedTypeName","pathNode":{"id":4552,"name":"IERC222Token","nameLocations":["1654:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":4537,"src":"1654:12:15"},"referencedDeclaration":4537,"src":"1654:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}},"visibility":"public"},{"constant":false,"functionSelector":"96cd06f8","id":4556,"mutability":"mutable","name":"songName","nameLocation":"1746:8:15","nodeType":"VariableDeclaration","scope":5511,"src":"1732:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4555,"name":"string","nodeType":"ElementaryTypeName","src":"1732:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"adee8ff2","id":4558,"mutability":"immutable","name":"TOKENS_PER_NFT","nameLocation":"1836:14:15","nodeType":"VariableDeclaration","scope":5511,"src":"1811:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1811:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5b7f415c","id":4560,"mutability":"immutable","name":"TOKEN_DECIMALS","nameLocation":"1879:14:15","nodeType":"VariableDeclaration","scope":5511,"src":"1856:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4559,"name":"uint8","nodeType":"ElementaryTypeName","src":"1856:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"a98d4994","id":4562,"mutability":"immutable","name":"TOKENS_PER_NFT_UNITS","nameLocation":"1924:20:15","nodeType":"VariableDeclaration","scope":5511,"src":"1899:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"50586088","id":4566,"mutability":"mutable","name":"nftHeld","nameLocation":"2006:7:15","nodeType":"VariableDeclaration","scope":5511,"src":"1974:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":4565,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1974:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4564,"name":"bool","nodeType":"ElementaryTypeName","src":"1993:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"0af2c6ca","id":4568,"mutability":"mutable","name":"nftCount","nameLocation":"2067:8:15","nodeType":"VariableDeclaration","scope":5511,"src":"2052:23:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2052:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9e1a4d19","id":4570,"mutability":"mutable","name":"tokenBalance","nameLocation":"2133:12:15","nodeType":"VariableDeclaration","scope":5511,"src":"2118:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2118:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"bbffa2d3","id":4572,"mutability":"mutable","name":"totalMarketCap","nameLocation":"2230:14:15","nodeType":"VariableDeclaration","scope":5511,"src":"2215:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"2215:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7304fa20","id":4574,"mutability":"mutable","name":"openMarketMode","nameLocation":"2297:14:15","nodeType":"VariableDeclaration","scope":5511,"src":"2285:26:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4573,"name":"bool","nodeType":"ElementaryTypeName","src":"2285:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":4576,"mutability":"mutable","name":"admin","nameLocation":"2392:5:15","nodeType":"VariableDeclaration","scope":5511,"src":"2377:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4575,"name":"address","nodeType":"ElementaryTypeName","src":"2377:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"6ddd1713","id":4579,"mutability":"mutable","name":"swapEnabled","nameLocation":"2415:11:15","nodeType":"VariableDeclaration","scope":5511,"src":"2403:30:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4577,"name":"bool","nodeType":"ElementaryTypeName","src":"2403:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":4578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2429:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"anonymous":false,"eventSelector":"494c78ec0278e768f6779f083e8c6b4691758074367b4e7c6355aa772ed6d704","id":4587,"name":"NFTDepositedToVault","nameLocation":"2464:19:15","nodeType":"EventDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2500:4:15","nodeType":"VariableDeclaration","scope":4587,"src":"2484:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4580,"name":"address","nodeType":"ElementaryTypeName","src":"2484:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4583,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2522:7:15","nodeType":"VariableDeclaration","scope":4587,"src":"2506:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"2506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4585,"indexed":false,"mutability":"mutable","name":"tokensReceived","nameLocation":"2539:14:15","nodeType":"VariableDeclaration","scope":4587,"src":"2531:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2531:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2483:71:15"},"src":"2458:97:15"},{"anonymous":false,"eventSelector":"0a08eebabec640fe759f6e5d61d6377cfe1f1367ae220b5f81a44a7b74c9be34","id":4595,"name":"TokensDepositedToVault","nameLocation":"2566:22:15","nodeType":"EventDefinition","parameters":{"id":4594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4589,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2605:4:15","nodeType":"VariableDeclaration","scope":4595,"src":"2589:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4588,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4591,"indexed":false,"mutability":"mutable","name":"tokenAmount","nameLocation":"2619:11:15","nodeType":"VariableDeclaration","scope":4595,"src":"2611:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"2611:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4593,"indexed":true,"mutability":"mutable","name":"nftReceived","nameLocation":"2648:11:15","nodeType":"VariableDeclaration","scope":4595,"src":"2632:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"2632:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:72:15"},"src":"2560:101:15"},{"anonymous":false,"eventSelector":"d67db6161cf9cecf19764b254f4d51340d59ccd87c70bd43659840f408b13af2","id":4603,"name":"NFTWithdrawnFromVault","nameLocation":"2672:21:15","nodeType":"EventDefinition","parameters":{"id":4602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4597,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2710:4:15","nodeType":"VariableDeclaration","scope":4603,"src":"2694:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4596,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4599,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2732:7:15","nodeType":"VariableDeclaration","scope":4603,"src":"2716:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"2716:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4601,"indexed":false,"mutability":"mutable","name":"tokensPaid","nameLocation":"2749:10:15","nodeType":"VariableDeclaration","scope":4603,"src":"2741:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4600,"name":"uint256","nodeType":"ElementaryTypeName","src":"2741:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:67:15"},"src":"2666:95:15"},{"anonymous":false,"eventSelector":"0b33e521250163c272e92033acfe6db31731bdf59922725ca3d1333e96846071","id":4611,"name":"TokensWithdrawnFromVault","nameLocation":"2772:24:15","nodeType":"EventDefinition","parameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2813:4:15","nodeType":"VariableDeclaration","scope":4611,"src":"2797:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4604,"name":"address","nodeType":"ElementaryTypeName","src":"2797:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4607,"indexed":false,"mutability":"mutable","name":"tokenAmount","nameLocation":"2827:11:15","nodeType":"VariableDeclaration","scope":4611,"src":"2819:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4609,"indexed":true,"mutability":"mutable","name":"nftDeposited","nameLocation":"2856:12:15","nodeType":"VariableDeclaration","scope":4611,"src":"2840:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"2840:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2796:73:15"},"src":"2766:104:15"},{"anonymous":false,"eventSelector":"101b8081ff3b56bbf45deb824d86a3b0fd38b7e3dd42421105cf8abe9106db0b","id":4617,"name":"AdminUpdated","nameLocation":"2881:12:15","nodeType":"EventDefinition","parameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"indexed":true,"mutability":"mutable","name":"oldAdmin","nameLocation":"2910:8:15","nodeType":"VariableDeclaration","scope":4617,"src":"2894:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4612,"name":"address","nodeType":"ElementaryTypeName","src":"2894:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4615,"indexed":true,"mutability":"mutable","name":"newAdmin","nameLocation":"2936:8:15","nodeType":"VariableDeclaration","scope":4617,"src":"2920:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4614,"name":"address","nodeType":"ElementaryTypeName","src":"2920:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2893:52:15"},"src":"2875:71:15"},{"anonymous":false,"eventSelector":"d101cbf49d2d7d396082a0e64b8dcc4e0b2a280bdccc3855f1d1fe8cf9d0f0e2","id":4621,"name":"SwapStatusUpdated","nameLocation":"2957:17:15","nodeType":"EventDefinition","parameters":{"id":4620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4619,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"2980:7:15","nodeType":"VariableDeclaration","scope":4621,"src":"2975:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4618,"name":"bool","nodeType":"ElementaryTypeName","src":"2975:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2974:14:15"},"src":"2951:38:15"},{"anonymous":false,"eventSelector":"2f32e519b30d0f52c856843502cc5b899f08f78da6adc87ddedb8d70c7365b1f","id":4625,"name":"OpenMarketModeActivated","nameLocation":"3000:23:15","nodeType":"EventDefinition","parameters":{"id":4624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4623,"indexed":false,"mutability":"mutable","name":"totalNFTsMinted","nameLocation":"3032:15:15","nodeType":"VariableDeclaration","scope":4625,"src":"3024:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4622,"name":"uint256","nodeType":"ElementaryTypeName","src":"3024:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3023:25:15"},"src":"2994:55:15"},{"anonymous":false,"eventSelector":"0aaa76c8a42ec2b6c80e857ced5306e0fe0a1e94eb891a653c2aec9bced6bb84","id":4631,"name":"VaultPreloaded","nameLocation":"3060:14:15","nodeType":"EventDefinition","parameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4627,"indexed":false,"mutability":"mutable","name":"nftCount","nameLocation":"3083:8:15","nodeType":"VariableDeclaration","scope":4631,"src":"3075:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4629,"indexed":false,"mutability":"mutable","name":"tokenAmount","nameLocation":"3101:11:15","nodeType":"VariableDeclaration","scope":4631,"src":"3093:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3074:39:15"},"src":"3054:60:15"},{"anonymous":false,"eventSelector":"41c5e8c55061532e874271e77c72be737c2b190be0b0da85c4b6248689eac53a","id":4635,"name":"FloorPriceUpdated","nameLocation":"3125:17:15","nodeType":"EventDefinition","parameters":{"id":4634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4633,"indexed":false,"mutability":"mutable","name":"newFloorPrice","nameLocation":"3151:13:15","nodeType":"VariableDeclaration","scope":4635,"src":"3143:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"3143:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3142:23:15"},"src":"3119:47:15"},{"body":{"id":4652,"nodeType":"Block","src":"3193:105:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4638,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3211:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3215:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3211:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4640,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"3225:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3211:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4642,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3234:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3238:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3234:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4644,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3248:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3248:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3234:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3211:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a65642061646d696e","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3257:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b63528b7ff238c3d3d1fd93178bccfff510ad1c0b4577c21af8789c804e9e371","typeString":"literal_string \"Not authorized admin\""},"value":"Not authorized admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b63528b7ff238c3d3d1fd93178bccfff510ad1c0b4577c21af8789c804e9e371","typeString":"literal_string \"Not authorized admin\""}],"id":4637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3203:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3203:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4650,"nodeType":"ExpressionStatement","src":"3203:77:15"},{"id":4651,"nodeType":"PlaceholderStatement","src":"3290:1:15"}]},"id":4653,"name":"onlyAdmin","nameLocation":"3181:9:15","nodeType":"ModifierDefinition","parameters":{"id":4636,"nodeType":"ParameterList","parameters":[],"src":"3190:2:15"},"src":"3172:126:15","virtual":false,"visibility":"internal"},{"body":{"id":4661,"nodeType":"Block","src":"3329:72:15","statements":[{"expression":{"arguments":[{"id":4656,"name":"swapEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"3347:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5377617070696e672069732064697361626c6564","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3360:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_da2386093b42d90c04b4e0b9bfdcee221d41310af41e9f52a16ad6bdac1a7d6c","typeString":"literal_string \"Swapping is disabled\""},"value":"Swapping is disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da2386093b42d90c04b4e0b9bfdcee221d41310af41e9f52a16ad6bdac1a7d6c","typeString":"literal_string \"Swapping is disabled\""}],"id":4655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3339:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3339:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4659,"nodeType":"ExpressionStatement","src":"3339:44:15"},{"id":4660,"nodeType":"PlaceholderStatement","src":"3393:1:15"}]},"id":4662,"name":"swapIsEnabled","nameLocation":"3313:13:15","nodeType":"ModifierDefinition","parameters":{"id":4654,"nodeType":"ParameterList","parameters":[],"src":"3326:2:15"},"src":"3304:97:15","virtual":false,"visibility":"internal"},{"body":{"id":4761,"nodeType":"Block","src":"3564:703:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4678,"name":"nftContract_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"3582:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3606:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3598:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4679,"name":"address","nodeType":"ElementaryTypeName","src":"3598:7:15","typeDescriptions":{}}},"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3598:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3582:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204e465420636f6e7472616374","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128","typeString":"literal_string \"Invalid NFT contract\""},"value":"Invalid NFT contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128","typeString":"literal_string \"Invalid NFT contract\""}],"id":4677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3574:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3574:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4686,"nodeType":"ExpressionStatement","src":"3574:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"tokenContract_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"3651:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3677:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3669:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4689,"name":"address","nodeType":"ElementaryTypeName","src":"3669:7:15","typeDescriptions":{}}},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3669:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3651:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20636f6e7472616374","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3681:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7da84f3a1c9f163c91d06a811fbdd86f5cfb6057a97fe7a83411f17c926ea263","typeString":"literal_string \"Invalid token contract\""},"value":"Invalid token contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7da84f3a1c9f163c91d06a811fbdd86f5cfb6057a97fe7a83411f17c926ea263","typeString":"literal_string \"Invalid token contract\""}],"id":4687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3643:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3643:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4696,"nodeType":"ExpressionStatement","src":"3643:63:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4700,"name":"songName_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"3730:9:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3724:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4698,"name":"bytes","nodeType":"ElementaryTypeName","src":"3724:5:15","typeDescriptions":{}}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3724:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3741:6:15","memberName":"length","nodeType":"MemberAccess","src":"3724:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3750:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3724:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f6e67206e616d652063616e6e6f7420626520656d707479","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3753:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_67900602c4c4a6a28389c91f7c020f4bdf4429a39649ceb1958d4005df760c74","typeString":"literal_string \"Song name cannot be empty\""},"value":"Song name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67900602c4c4a6a28389c91f7c020f4bdf4429a39649ceb1958d4005df760c74","typeString":"literal_string \"Song name cannot be empty\""}],"id":4697,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3716:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3716:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4707,"nodeType":"ExpressionStatement","src":"3716:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4709,"name":"admin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"3799:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3817:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3809:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4710,"name":"address","nodeType":"ElementaryTypeName","src":"3809:7:15","typeDescriptions":{}}},"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3809:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3799:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646d696e2061646472657373","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3821:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653","typeString":"literal_string \"Invalid admin address\""},"value":"Invalid admin address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653","typeString":"literal_string \"Invalid admin address\""}],"id":4708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3791:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3791:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4717,"nodeType":"ExpressionStatement","src":"3791:54:15"},{"expression":{"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4718,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"3856:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4720,"name":"nftContract_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"3881:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4719,"name":"IERC222NFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"3870:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC222NFT_$4517_$","typeString":"type(contract IERC222NFT)"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3870:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"src":"3856:38:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":4723,"nodeType":"ExpressionStatement","src":"3856:38:15"},{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4724,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"3904:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4726,"name":"tokenContract_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"3933:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4725,"name":"IERC222Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"3920:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC222Token_$4537_$","typeString":"type(contract IERC222Token)"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3920:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}},"src":"3904:44:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}},"id":4729,"nodeType":"ExpressionStatement","src":"3904:44:15"},{"expression":{"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"songName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"3958:8:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4731,"name":"songName_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"3969:9:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3958:20:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4733,"nodeType":"ExpressionStatement","src":"3958:20:15"},{"expression":{"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4734,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"3988:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4735,"name":"admin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"3996:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3988:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4737,"nodeType":"ExpressionStatement","src":"3988:14:15"},{"expression":{"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4738,"name":"TOKENS_PER_NFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"4073:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4739,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"4090:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4104:14:15","memberName":"TOKENS_PER_NFT","nodeType":"MemberAccess","referencedDeclaration":4524,"src":"4090:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4090:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4073:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4743,"nodeType":"ExpressionStatement","src":"4073:47:15"},{"expression":{"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4744,"name":"TOKEN_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"4130:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4746,"name":"tokenContract_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"4162:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4745,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"4147:14:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$341_$","typeString":"type(contract IERC20Metadata)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4147:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$341","typeString":"contract IERC20Metadata"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4178:8:15","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":340,"src":"4147:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4147:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4130:58:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4751,"nodeType":"ExpressionStatement","src":"4130:58:15"},{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4752,"name":"TOKENS_PER_NFT_UNITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"4198:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"TOKENS_PER_NFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"4221:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4239:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4755,"name":"TOKEN_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"4245:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4239:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4238:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4221:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4198:62:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4760,"nodeType":"ExpressionStatement","src":"4198:62:15"}]},"id":4762,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":4673,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3552:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3556:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3552:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4675,"kind":"baseConstructorSpecifier","modifierName":{"id":4672,"name":"Ownable","nameLocations":["3544:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3544:7:15"},"nodeType":"ModifierInvocation","src":"3544:19:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4664,"mutability":"mutable","name":"nftContract_","nameLocation":"3436:12:15","nodeType":"VariableDeclaration","scope":4762,"src":"3428:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4663,"name":"address","nodeType":"ElementaryTypeName","src":"3428:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4666,"mutability":"mutable","name":"tokenContract_","nameLocation":"3466:14:15","nodeType":"VariableDeclaration","scope":4762,"src":"3458:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4665,"name":"address","nodeType":"ElementaryTypeName","src":"3458:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4668,"mutability":"mutable","name":"songName_","nameLocation":"3504:9:15","nodeType":"VariableDeclaration","scope":4762,"src":"3490:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4667,"name":"string","nodeType":"ElementaryTypeName","src":"3490:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4670,"mutability":"mutable","name":"admin_","nameLocation":"3531:6:15","nodeType":"VariableDeclaration","scope":4762,"src":"3523:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4669,"name":"address","nodeType":"ElementaryTypeName","src":"3523:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3418:125:15"},"returnParameters":{"id":4676,"nodeType":"ParameterList","parameters":[],"src":"3564:0:15"},"scope":5511,"src":"3407:860:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4847,"nodeType":"Block","src":"4461:739:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4775,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"4499:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4773,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"4479:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4491:7:15","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":855,"src":"4479:19:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4479:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4777,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4511:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4515:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4511:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4479:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74204e4654206f776e6572","id":4780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4523:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbc2e10076f6921a763c3f489052dd0b77e1bb855bd0a8a6901f7fbc1cc7125e","typeString":"literal_string \"Not NFT owner\""},"value":"Not NFT owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fbc2e10076f6921a763c3f489052dd0b77e1bb855bd0a8a6901f7fbc1cc7125e","typeString":"literal_string \"Not NFT owner\""}],"id":4772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4471:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4471:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4782,"nodeType":"ExpressionStatement","src":"4471:68:15"},{"expression":{"arguments":[{"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4557:17:15","subExpression":{"baseExpression":{"id":4784,"name":"nftHeld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"4558:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4786,"indexExpression":{"id":4785,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"4566:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4558:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e465420616c726561647920696e207661756c74","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4576:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7816a82000dd88ad42d481d0b9d57e317be6b70a8783407a941115869cbb947","typeString":"literal_string \"NFT already in vault\""},"value":"NFT already in vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7816a82000dd88ad42d481d0b9d57e317be6b70a8783407a941115869cbb947","typeString":"literal_string \"NFT already in vault\""}],"id":4783,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4549:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4549:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4790,"nodeType":"ExpressionStatement","src":"4549:50:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4792,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"4617:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4793,"name":"TOKENS_PER_NFT_UNITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"4633:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4617:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420746f6b656e7320696e207661756c74","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4655:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_047408cc66cd4bce0065fb1dea15e09cef2ca92140d126441538d3699cbe478a","typeString":"literal_string \"Insufficient tokens in vault\""},"value":"Insufficient tokens in vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_047408cc66cd4bce0065fb1dea15e09cef2ca92140d126441538d3699cbe478a","typeString":"literal_string \"Insufficient tokens in vault\""}],"id":4791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4609:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4609:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4797,"nodeType":"ExpressionStatement","src":"4609:77:15"},{"expression":{"arguments":[{"expression":{"id":4801,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4759:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4763:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4759:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4805,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4779:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}],"id":4804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4771:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4803,"name":"address","nodeType":"ElementaryTypeName","src":"4771:7:15","typeDescriptions":{}}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4807,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"4786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4798,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"4730:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4742:16:15","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":877,"src":"4730:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4809,"nodeType":"ExpressionStatement","src":"4730:64:15"},{"expression":{"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4810,"name":"nftHeld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"4837:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4812,"indexExpression":{"id":4811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"4845:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4837:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4856:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4837:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4815,"nodeType":"ExpressionStatement","src":"4837:23:15"},{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4870:10:15","subExpression":{"id":4816,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"4870:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4818,"nodeType":"ExpressionStatement","src":"4870:10:15"},{"expression":{"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"4890:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4820,"name":"TOKENS_PER_NFT_UNITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"4906:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4890:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4822,"nodeType":"ExpressionStatement","src":"4890:36:15"},{"expression":{"arguments":[{"expression":{"id":4830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5025:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5029:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5025:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4832,"name":"TOKENS_PER_NFT_UNITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"5037:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":4826,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"4996:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}],"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4988:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4824,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:15","typeDescriptions":{}}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4988:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4823,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4981:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4981:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5012:12:15","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":386,"src":"4981:43:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4981:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4834,"nodeType":"ExpressionStatement","src":"4981:77:15"},{"eventCall":{"arguments":[{"expression":{"id":4836,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5102:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5106:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5102:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4838,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"5114:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4839,"name":"TOKENS_PER_NFT_UNITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"5123:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4835,"name":"NFTDepositedToVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"5082:19:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5082:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4841,"nodeType":"EmitStatement","src":"5077:67:15"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4843,"name":"getFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"5177:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5177:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4842,"name":"FloorPriceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"5159:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5159:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4846,"nodeType":"EmitStatement","src":"5154:39:15"}]},"documentation":{"id":4763,"nodeType":"StructuredDocumentation","src":"4273:110:15","text":" @dev Deposit NFT to vault and receive kTokens\n @param tokenId NFT token ID to deposit"},"functionSelector":"e91a7ca6","id":4848,"implemented":true,"kind":"function","modifiers":[{"id":4768,"kind":"modifierInvocation","modifierName":{"id":4767,"name":"nonReentrant","nameLocations":["4434:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"4434:12:15"},"nodeType":"ModifierInvocation","src":"4434:12:15"},{"id":4770,"kind":"modifierInvocation","modifierName":{"id":4769,"name":"swapIsEnabled","nameLocations":["4447:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":4662,"src":"4447:13:15"},"nodeType":"ModifierInvocation","src":"4447:13:15"}],"name":"depositNFT","nameLocation":"4397:10:15","nodeType":"FunctionDefinition","parameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"tokenId","nameLocation":"4416:7:15","nodeType":"VariableDeclaration","scope":4848,"src":"4408:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"4408:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4407:17:15"},"returnParameters":{"id":4771,"nodeType":"ParameterList","parameters":[],"src":"4461:0:15"},"scope":5511,"src":"4388:812:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4982,"nodeType":"Block","src":"5462:1250:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"5480:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4860,"name":"TOKENS_PER_NFT_UNITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"5495:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5480:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420746f6b656e20616d6f756e74","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5517:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11","typeString":"literal_string \"Insufficient token amount\""},"value":"Insufficient token amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11","typeString":"literal_string \"Insufficient token amount\""}],"id":4858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5472:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4864,"nodeType":"ExpressionStatement","src":"5472:73:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"5563:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4867,"name":"TOKENS_PER_NFT_UNITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"5577:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5563:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5601:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5563:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20616d6f756e74","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5604:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58","typeString":"literal_string \"Invalid token amount\""},"value":"Invalid token amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58","typeString":"literal_string \"Invalid token amount\""}],"id":4865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5555:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5555:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4873,"nodeType":"ExpressionStatement","src":"5555:72:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4875,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"5645:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5656:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5645:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f204e46547320617661696c61626c6520696e207661756c74","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5659:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3fc3731ef9740462983b2951356ca0d33ce8125202f1d23502d5bbbba6300654","typeString":"literal_string \"No NFTs available in vault\""},"value":"No NFTs available in vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3fc3731ef9740462983b2951356ca0d33ce8125202f1d23502d5bbbba6300654","typeString":"literal_string \"No NFTs available in vault\""}],"id":4874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5637:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5637:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4880,"nodeType":"ExpressionStatement","src":"5637:51:15"},{"assignments":[4882],"declarations":[{"constant":false,"id":4882,"mutability":"mutable","name":"nftAmount","nameLocation":"5715:9:15","nodeType":"VariableDeclaration","scope":4982,"src":"5707:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4881,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4886,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4883,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"5727:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4884,"name":"TOKENS_PER_NFT_UNITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"5741:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5727:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:54:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"nftAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"5779:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4889,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"5792:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5779:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f756768204e46547320696e207661756c74","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5802:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_22b4ff83a89f0ed753d7c94d6a561988cc291cdbc12cc5944f7816bd89d4253e","typeString":"literal_string \"Not enough NFTs in vault\""},"value":"Not enough NFTs in vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22b4ff83a89f0ed753d7c94d6a561988cc291cdbc12cc5944f7816bd89d4253e","typeString":"literal_string \"Not enough NFTs in vault\""}],"id":4887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5771:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5771:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4893,"nodeType":"ExpressionStatement","src":"5771:58:15"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4897,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5922:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5926:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5922:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4901,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5942:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}],"id":4900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5934:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4899,"name":"address","nodeType":"ElementaryTypeName","src":"5934:7:15","typeDescriptions":{}}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5934:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4903,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"5949:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4895,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"5895:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":314,"src":"5895:26:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5895:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5963:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":4894,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5887:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5887:100:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4907,"nodeType":"ExpressionStatement","src":"5887:100:15"},{"expression":{"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4908,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"6038:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4909,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4851,"src":"6054:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4911,"nodeType":"ExpressionStatement","src":"6038:27:15"},{"assignments":[4913],"declarations":[{"constant":false,"id":4913,"mutability":"mutable","name":"transferredNFTs","nameLocation":"6125:15:15","nodeType":"VariableDeclaration","scope":4982,"src":"6117:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4912,"name":"uint256","nodeType":"ElementaryTypeName","src":"6117:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4915,"initialValue":{"hexValue":"30","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6143:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6117:27:15"},{"body":{"id":4968,"nodeType":"Block","src":"6241:329:15","statements":[{"condition":{"baseExpression":{"id":4932,"name":"nftHeld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"6259:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4934,"indexExpression":{"id":4933,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"6267:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6259:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4967,"nodeType":"IfStatement","src":"6255:305:15","trueBody":{"id":4966,"nodeType":"Block","src":"6271:289:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":4940,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6326:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}],"id":4939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6318:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4938,"name":"address","nodeType":"ElementaryTypeName","src":"6318:7:15","typeDescriptions":{}}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6318:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4942,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6333:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6337:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6333:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"6345:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4935,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"6289:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6301:16:15","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":877,"src":"6289:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4946,"nodeType":"ExpressionStatement","src":"6289:58:15"},{"expression":{"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4947,"name":"nftHeld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"6365:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4949,"indexExpression":{"id":4948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"6373:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6365:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6378:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6365:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4952,"nodeType":"ExpressionStatement","src":"6365:18:15"},{"expression":{"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"6401:10:15","subExpression":{"id":4953,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"6401:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4955,"nodeType":"ExpressionStatement","src":"6401:10:15"},{"expression":{"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6429:17:15","subExpression":{"id":4956,"name":"transferredNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"6429:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4958,"nodeType":"ExpressionStatement","src":"6429:17:15"},{"eventCall":{"arguments":[{"expression":{"id":4960,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6509:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6513:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6509:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4962,"name":"TOKENS_PER_NFT_UNITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"6521:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"6543:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4959,"name":"TokensDepositedToVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"6486:22:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6486:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4965,"nodeType":"EmitStatement","src":"6481:64:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"6174:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4921,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"6179:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6191:10:15","memberName":"MAX_SUPPLY","nodeType":"MemberAccess","referencedDeclaration":4506,"src":"6179:22:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6179:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6174:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4925,"name":"transferredNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"6207:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4926,"name":"nftAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"6225:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6207:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6174:60:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4969,"initializationExpression":{"assignments":[4917],"declarations":[{"constant":false,"id":4917,"mutability":"mutable","name":"i","nameLocation":"6167:1:15","nodeType":"VariableDeclaration","scope":4969,"src":"6159:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"6159:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4919,"initialValue":{"hexValue":"31","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6171:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"6159:13:15"},"loopExpression":{"expression":{"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6236:3:15","subExpression":{"id":4929,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"6236:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4931,"nodeType":"ExpressionStatement","src":"6236:3:15"},"nodeType":"ForStatement","src":"6154:416:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"transferredNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"6596:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4972,"name":"nftAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"6615:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6596:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4661696c656420746f207472616e7366657220616c6c204e465473","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6626:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8cc72502f0093626f62554052e6b81ff0fd1fac2661b2b0b249acbe883a8bb5","typeString":"literal_string \"Failed to transfer all NFTs\""},"value":"Failed to transfer all NFTs"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b8cc72502f0093626f62554052e6b81ff0fd1fac2661b2b0b249acbe883a8bb5","typeString":"literal_string \"Failed to transfer all NFTs\""}],"id":4970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6588:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6588:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4976,"nodeType":"ExpressionStatement","src":"6588:68:15"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4978,"name":"getFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"6689:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6689:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4977,"name":"FloorPriceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"6671:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6671:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4981,"nodeType":"EmitStatement","src":"6666:39:15"}]},"documentation":{"id":4849,"nodeType":"StructuredDocumentation","src":"5206:171:15","text":" @dev Deposit kTokens to vault and receive NFT (if available)\n @param tokenAmount Amount of kTokens to deposit (must be multiple of TOKENS_PER_NFT)"},"functionSelector":"dd49756e","id":4983,"implemented":true,"kind":"function","modifiers":[{"id":4854,"kind":"modifierInvocation","modifierName":{"id":4853,"name":"nonReentrant","nameLocations":["5435:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"5435:12:15"},"nodeType":"ModifierInvocation","src":"5435:12:15"},{"id":4856,"kind":"modifierInvocation","modifierName":{"id":4855,"name":"swapIsEnabled","nameLocations":["5448:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":4662,"src":"5448:13:15"},"nodeType":"ModifierInvocation","src":"5448:13:15"}],"name":"depositTokens","nameLocation":"5391:13:15","nodeType":"FunctionDefinition","parameters":{"id":4852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4851,"mutability":"mutable","name":"tokenAmount","nameLocation":"5413:11:15","nodeType":"VariableDeclaration","scope":4983,"src":"5405:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4850,"name":"uint256","nodeType":"ElementaryTypeName","src":"5405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5404:21:15"},"returnParameters":{"id":4857,"nodeType":"ParameterList","parameters":[],"src":"5462:0:15"},"scope":5511,"src":"5382:1330:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5076,"nodeType":"Block","src":"6998:733:15","statements":[{"body":{"id":5040,"nodeType":"Block","src":"7076:268:15","statements":[{"assignments":[5006],"declarations":[{"constant":false,"id":5006,"mutability":"mutable","name":"tokenId","nameLocation":"7098:7:15","nodeType":"VariableDeclaration","scope":5040,"src":"7090:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"7090:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5010,"initialValue":{"baseExpression":{"id":5007,"name":"nftIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"7108:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":5009,"indexExpression":{"id":5008,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"7115:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7108:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7090:27:15"},{"expression":{"arguments":[{"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7139:17:15","subExpression":{"baseExpression":{"id":5012,"name":"nftHeld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"7140:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":5014,"indexExpression":{"id":5013,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"7148:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7140:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e465420616c726561647920696e207661756c74","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7158:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7816a82000dd88ad42d481d0b9d57e317be6b70a8783407a941115869cbb947","typeString":"literal_string \"NFT already in vault\""},"value":"NFT already in vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7816a82000dd88ad42d481d0b9d57e317be6b70a8783407a941115869cbb947","typeString":"literal_string \"NFT already in vault\""}],"id":5011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7131:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7131:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5018,"nodeType":"ExpressionStatement","src":"7131:50:15"},{"expression":{"arguments":[{"expression":{"id":5022,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7237:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7241:6:15","memberName":"sender","nodeType":"MemberAccess","src":"7237:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5026,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7257:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}],"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7249:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5024,"name":"address","nodeType":"ElementaryTypeName","src":"7249:7:15","typeDescriptions":{}}},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7249:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5028,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"7264:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5019,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"7208:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7220:16:15","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":877,"src":"7208:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7208:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5030,"nodeType":"ExpressionStatement","src":"7208:64:15"},{"expression":{"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5031,"name":"nftHeld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"7286:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":5033,"indexExpression":{"id":5032,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"7294:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7286:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7305:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7286:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5036,"nodeType":"ExpressionStatement","src":"7286:23:15"},{"expression":{"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7323:10:15","subExpression":{"id":5037,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"7323:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5039,"nodeType":"ExpressionStatement","src":"7323:10:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4998,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"7052:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4999,"name":"nftIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"7056:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7063:6:15","memberName":"length","nodeType":"MemberAccess","src":"7056:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7052:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5041,"initializationExpression":{"assignments":[4995],"declarations":[{"constant":false,"id":4995,"mutability":"mutable","name":"i","nameLocation":"7045:1:15","nodeType":"VariableDeclaration","scope":5041,"src":"7037:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"7037:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4997,"initialValue":{"hexValue":"30","id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7049:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7037:13:15"},"loopExpression":{"expression":{"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7071:3:15","subExpression":{"id":5002,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"7071:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5004,"nodeType":"ExpressionStatement","src":"7071:3:15"},"nodeType":"ForStatement","src":"7032:312:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5042,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"7392:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7406:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7392:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5066,"nodeType":"IfStatement","src":"7388:174:15","trueBody":{"id":5065,"nodeType":"Block","src":"7409:153:15","statements":[{"expression":{"arguments":[{"expression":{"id":5052,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7471:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7475:6:15","memberName":"sender","nodeType":"MemberAccess","src":"7471:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5056,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7491:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}],"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7483:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5054,"name":"address","nodeType":"ElementaryTypeName","src":"7483:7:15","typeDescriptions":{}}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5058,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"7498:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":5048,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"7438:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}],"id":5047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7430:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5046,"name":"address","nodeType":"ElementaryTypeName","src":"7430:7:15","typeDescriptions":{}}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7430:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5045,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"7423:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7423:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7454:16:15","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":413,"src":"7423:47:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7423:87:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5060,"nodeType":"ExpressionStatement","src":"7423:87:15"},{"expression":{"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5061,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"7524:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5062,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"7540:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7524:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5064,"nodeType":"ExpressionStatement","src":"7524:27:15"}]}},{"eventCall":{"arguments":[{"expression":{"id":5068,"name":"nftIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"7600:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7607:6:15","memberName":"length","nodeType":"MemberAccess","src":"7600:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5070,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"7615:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5067,"name":"VaultPreloaded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"7585:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7585:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5072,"nodeType":"EmitStatement","src":"7580:47:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5073,"name":"_checkOpenMarketMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"7702:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7702:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5075,"nodeType":"ExpressionStatement","src":"7702:22:15"}]},"documentation":{"id":4984,"nodeType":"StructuredDocumentation","src":"6718:186:15","text":" @dev Admin function to preload vault with NFTs and tokens\n @param nftIds Array of NFT token IDs to deposit\n @param tokenAmount Amount of kTokens to deposit"},"functionSelector":"029a3c5f","id":5077,"implemented":true,"kind":"function","modifiers":[{"id":4992,"kind":"modifierInvocation","modifierName":{"id":4991,"name":"onlyAdmin","nameLocations":["6988:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":4653,"src":"6988:9:15"},"nodeType":"ModifierInvocation","src":"6988:9:15"}],"name":"preloadVault","nameLocation":"6918:12:15","nodeType":"FunctionDefinition","parameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"nftIds","nameLocation":"6950:6:15","nodeType":"VariableDeclaration","scope":5077,"src":"6931:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"6931:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4986,"nodeType":"ArrayTypeName","src":"6931:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4989,"mutability":"mutable","name":"tokenAmount","nameLocation":"6966:11:15","nodeType":"VariableDeclaration","scope":5077,"src":"6958:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"6958:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6930:48:15"},"returnParameters":{"id":4993,"nodeType":"ParameterList","parameters":[],"src":"6998:0:15"},"scope":5511,"src":"6909:822:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5115,"nodeType":"Block","src":"7919:468:15","statements":[{"assignments":[5084],"declarations":[{"constant":false,"id":5084,"mutability":"mutable","name":"totalNFTs","nameLocation":"7937:9:15","nodeType":"VariableDeclaration","scope":5115,"src":"7929:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"7929:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5088,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5085,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"7949:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7961:11:15","memberName":"totalMinted","nodeType":"MemberAccess","referencedDeclaration":4511,"src":"7949:23:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7949:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7929:45:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5089,"name":"totalNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"7988:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8001:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7988:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5094,"nodeType":"IfStatement","src":"7984:28:15","trueBody":{"expression":{"hexValue":"30","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8011:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5082,"id":5093,"nodeType":"Return","src":"8004:8:15"}},{"condition":{"id":5095,"name":"openMarketMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"8035:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5113,"nodeType":"Block","src":"8262:119:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5109,"name":"totalMarketCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"8344:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5110,"name":"totalNFTs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"8361:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5082,"id":5112,"nodeType":"Return","src":"8337:33:15"}]},"id":5114,"nodeType":"IfStatement","src":"8031:350:15","trueBody":{"id":5108,"nodeType":"Block","src":"8051:205:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5096,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"8155:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8167:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8155:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5101,"nodeType":"IfStatement","src":"8151:27:15","trueBody":{"expression":{"hexValue":"30","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8177:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5082,"id":5100,"nodeType":"Return","src":"8170:8:15"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"8199:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5103,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"8214:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8199:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5105,"name":"TOKENS_PER_NFT_UNITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"8225:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8199:46:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5082,"id":5107,"nodeType":"Return","src":"8192:53:15"}]}}]},"documentation":{"id":5078,"nodeType":"StructuredDocumentation","src":"7737:122:15","text":" @dev Calculate current floor price based on market cap and total NFTs\n @return Floor price in wei"},"functionSelector":"2a33d6b2","id":5116,"implemented":true,"kind":"function","modifiers":[],"name":"getFloorPrice","nameLocation":"7873:13:15","nodeType":"FunctionDefinition","parameters":{"id":5079,"nodeType":"ParameterList","parameters":[],"src":"7886:2:15"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5116,"src":"7910:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5080,"name":"uint256","nodeType":"ElementaryTypeName","src":"7910:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7909:9:15"},"scope":5511,"src":"7864:523:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5145,"nodeType":"Block","src":"8674:216:15","statements":[{"expression":{"components":[{"id":5132,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"8705:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5133,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"8727:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5134,"name":"getFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"8753:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8753:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5136,"name":"openMarketMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"8782:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5137,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"8810:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8822:11:15","memberName":"totalMinted","nodeType":"MemberAccess","referencedDeclaration":4511,"src":"8810:23:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5140,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"8849:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8861:10:15","memberName":"MAX_SUPPLY","nodeType":"MemberAccess","referencedDeclaration":4506,"src":"8849:22:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8849:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8691:192:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,bool,uint256,uint256)"}},"functionReturnParameters":5131,"id":5144,"nodeType":"Return","src":"8684:199:15"}]},"documentation":{"id":5117,"nodeType":"StructuredDocumentation","src":"8393:44:15","text":" @dev Get vault statistics"},"functionSelector":"a59aa5a6","id":5146,"implemented":true,"kind":"function","modifiers":[],"name":"getVaultStats","nameLocation":"8451:13:15","nodeType":"FunctionDefinition","parameters":{"id":5118,"nodeType":"ParameterList","parameters":[],"src":"8464:2:15"},"returnParameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"nftsInVault","nameLocation":"8507:11:15","nodeType":"VariableDeclaration","scope":5146,"src":"8499:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"8499:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5122,"mutability":"mutable","name":"tokensInVault","nameLocation":"8536:13:15","nodeType":"VariableDeclaration","scope":5146,"src":"8528:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5121,"name":"uint256","nodeType":"ElementaryTypeName","src":"8528:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5124,"mutability":"mutable","name":"floorPrice","nameLocation":"8567:10:15","nodeType":"VariableDeclaration","scope":5146,"src":"8559:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5123,"name":"uint256","nodeType":"ElementaryTypeName","src":"8559:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5126,"mutability":"mutable","name":"isOpenMarket","nameLocation":"8592:12:15","nodeType":"VariableDeclaration","scope":5146,"src":"8587:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5125,"name":"bool","nodeType":"ElementaryTypeName","src":"8587:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5128,"mutability":"mutable","name":"totalNFTsMinted","nameLocation":"8622:15:15","nodeType":"VariableDeclaration","scope":5146,"src":"8614:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5127,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5130,"mutability":"mutable","name":"maxNFTSupply","nameLocation":"8655:12:15","nodeType":"VariableDeclaration","scope":5146,"src":"8647:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5129,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8489:184:15"},"scope":5511,"src":"8442:448:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5158,"nodeType":"Block","src":"9120:40:15","statements":[{"expression":{"baseExpression":{"id":5154,"name":"nftHeld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"9137:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":5156,"indexExpression":{"id":5155,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"9145:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9137:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5153,"id":5157,"nodeType":"Return","src":"9130:23:15"}]},"documentation":{"id":5147,"nodeType":"StructuredDocumentation","src":"8896:151:15","text":" @dev Check if a specific NFT is held in the vault\n @param tokenId NFT token ID to check\n @return True if NFT is in vault"},"functionSelector":"035dd06d","id":5159,"implemented":true,"kind":"function","modifiers":[],"name":"isNFTInVault","nameLocation":"9061:12:15","nodeType":"FunctionDefinition","parameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"tokenId","nameLocation":"9082:7:15","nodeType":"VariableDeclaration","scope":5159,"src":"9074:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"9074:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9073:17:15"},"returnParameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5159,"src":"9114:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5151,"name":"bool","nodeType":"ElementaryTypeName","src":"9114:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9113:6:15"},"scope":5511,"src":"9052:108:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5260,"nodeType":"Block","src":"9445:641:15","statements":[{"assignments":[5172],"declarations":[{"constant":false,"id":5172,"mutability":"mutable","name":"result","nameLocation":"9472:6:15","nodeType":"VariableDeclaration","scope":5260,"src":"9455:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5170,"name":"uint256","nodeType":"ElementaryTypeName","src":"9455:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5171,"nodeType":"ArrayTypeName","src":"9455:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5182,"initialValue":{"arguments":[{"arguments":[{"id":5178,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"9504:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5179,"name":"maxResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"9514:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5176,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"9495:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2724_$","typeString":"type(library Math)"}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9500:3:15","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":1430,"src":"9495:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9495:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9481:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5173,"name":"uint256","nodeType":"ElementaryTypeName","src":"9485:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5174,"nodeType":"ArrayTypeName","src":"9485:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9481:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9455:71:15"},{"assignments":[5184],"declarations":[{"constant":false,"id":5184,"mutability":"mutable","name":"found","nameLocation":"9544:5:15","nodeType":"VariableDeclaration","scope":5260,"src":"9536:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5183,"name":"uint256","nodeType":"ElementaryTypeName","src":"9536:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5186,"initialValue":{"hexValue":"30","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9552:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9536:17:15"},{"body":{"id":5217,"nodeType":"Block","src":"9650:115:15","statements":[{"condition":{"baseExpression":{"id":5203,"name":"nftHeld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"9668:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":5205,"indexExpression":{"id":5204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"9676:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9668:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5216,"nodeType":"IfStatement","src":"9664:91:15","trueBody":{"id":5215,"nodeType":"Block","src":"9680:75:15","statements":[{"expression":{"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"9698:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5208,"indexExpression":{"id":5207,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"9705:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9698:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5209,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"9714:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9698:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5211,"nodeType":"ExpressionStatement","src":"9698:17:15"},{"expression":{"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9733:7:15","subExpression":{"id":5212,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"9733:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5214,"nodeType":"ExpressionStatement","src":"9733:7:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5191,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"9592:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5192,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"9597:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9609:10:15","memberName":"MAX_SUPPLY","nodeType":"MemberAccess","referencedDeclaration":4506,"src":"9597:22:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9597:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9592:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5196,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"9625:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5197,"name":"maxResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"9633:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9625:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9592:51:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5218,"initializationExpression":{"assignments":[5188],"declarations":[{"constant":false,"id":5188,"mutability":"mutable","name":"i","nameLocation":"9585:1:15","nodeType":"VariableDeclaration","scope":5218,"src":"9577:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5187,"name":"uint256","nodeType":"ElementaryTypeName","src":"9577:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5190,"initialValue":{"hexValue":"31","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9589:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"9577:13:15"},"loopExpression":{"expression":{"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9645:3:15","subExpression":{"id":5200,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"9645:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5202,"nodeType":"ExpressionStatement","src":"9645:3:15"},"nodeType":"ForStatement","src":"9572:193:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5219,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"9821:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"9829:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9836:6:15","memberName":"length","nodeType":"MemberAccess","src":"9829:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9821:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5257,"nodeType":"IfStatement","src":"9817:231:15","trueBody":{"id":5256,"nodeType":"Block","src":"9844:204:15","statements":[{"assignments":[5227],"declarations":[{"constant":false,"id":5227,"mutability":"mutable","name":"resized","nameLocation":"9875:7:15","nodeType":"VariableDeclaration","scope":5256,"src":"9858:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5225,"name":"uint256","nodeType":"ElementaryTypeName","src":"9858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5226,"nodeType":"ArrayTypeName","src":"9858:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5233,"initialValue":{"arguments":[{"id":5231,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"9899:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9885:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"9889:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5229,"nodeType":"ArrayTypeName","src":"9889:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9885:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9858:47:15"},{"body":{"id":5252,"nodeType":"Block","src":"9955:55:15","statements":[{"expression":{"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5244,"name":"resized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"9973:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5246,"indexExpression":{"id":5245,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"9981:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9973:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5247,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"9986:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5249,"indexExpression":{"id":5248,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"9993:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9986:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9973:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5251,"nodeType":"ExpressionStatement","src":"9973:22:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"9939:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5239,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"9943:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9939:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5253,"initializationExpression":{"assignments":[5235],"declarations":[{"constant":false,"id":5235,"mutability":"mutable","name":"i","nameLocation":"9932:1:15","nodeType":"VariableDeclaration","scope":5253,"src":"9924:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"9924:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5237,"initialValue":{"hexValue":"30","id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9936:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9924:13:15"},"loopExpression":{"expression":{"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9950:3:15","subExpression":{"id":5241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"9950:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5243,"nodeType":"ExpressionStatement","src":"9950:3:15"},"nodeType":"ForStatement","src":"9919:91:15"},{"expression":{"id":5254,"name":"resized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"10030:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5167,"id":5255,"nodeType":"Return","src":"10023:14:15"}]}},{"expression":{"id":5258,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"10073:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5167,"id":5259,"nodeType":"Return","src":"10066:13:15"}]},"documentation":{"id":5160,"nodeType":"StructuredDocumentation","src":"9166:189:15","text":" @dev Get list of NFT IDs currently in vault (up to maxResults)\n @param maxResults Maximum number of results to return\n @return Array of NFT token IDs in vault"},"functionSelector":"978cd40f","id":5261,"implemented":true,"kind":"function","modifiers":[],"name":"getNFTsInVault","nameLocation":"9369:14:15","nodeType":"FunctionDefinition","parameters":{"id":5163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5162,"mutability":"mutable","name":"maxResults","nameLocation":"9392:10:15","nodeType":"VariableDeclaration","scope":5261,"src":"9384:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5161,"name":"uint256","nodeType":"ElementaryTypeName","src":"9384:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9383:20:15"},"returnParameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5261,"src":"9427:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5164,"name":"uint256","nodeType":"ElementaryTypeName","src":"9427:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5165,"nodeType":"ArrayTypeName","src":"9427:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9426:18:15"},"scope":5511,"src":"9360:726:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5281,"nodeType":"Block","src":"10307:196:15","statements":[{"expression":{"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5269,"name":"totalMarketCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"10317:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5270,"name":"additionalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"10335:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10317:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5272,"nodeType":"ExpressionStatement","src":"10317:33:15"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5274,"name":"getFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"10383:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10383:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5273,"name":"FloorPriceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"10365:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5277,"nodeType":"EmitStatement","src":"10360:39:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5278,"name":"_checkOpenMarketMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"10474:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10474:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5280,"nodeType":"ExpressionStatement","src":"10474:22:15"}]},"documentation":{"id":5262,"nodeType":"StructuredDocumentation","src":"10092:141:15","text":" @dev Update market cap (called by MintRouter or admin)\n @param additionalValue Additional value to add to market cap"},"functionSelector":"b1e776e3","id":5282,"implemented":true,"kind":"function","modifiers":[{"id":5267,"kind":"modifierInvocation","modifierName":{"id":5266,"name":"onlyAdmin","nameLocations":["10297:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":4653,"src":"10297:9:15"},"nodeType":"ModifierInvocation","src":"10297:9:15"}],"name":"updateMarketCap","nameLocation":"10247:15:15","nodeType":"FunctionDefinition","parameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"additionalValue","nameLocation":"10271:15:15","nodeType":"VariableDeclaration","scope":5282,"src":"10263:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"10263:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10262:25:15"},"returnParameters":{"id":5268,"nodeType":"ParameterList","parameters":[],"src":"10307:0:15"},"scope":5511,"src":"10238:265:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5308,"nodeType":"Block","src":"10637:209:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10651:15:15","subExpression":{"id":5286,"name":"openMarketMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"10652:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5288,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"10670:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10682:11:15","memberName":"totalMinted","nodeType":"MemberAccess","referencedDeclaration":4511,"src":"10670:23:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10670:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5291,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"10699:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10711:10:15","memberName":"MAX_SUPPLY","nodeType":"MemberAccess","referencedDeclaration":4506,"src":"10699:22:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10699:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10670:53:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10651:72:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5307,"nodeType":"IfStatement","src":"10647:193:15","trueBody":{"id":5306,"nodeType":"Block","src":"10725:115:15","statements":[{"expression":{"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5296,"name":"openMarketMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"10739:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10756:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10739:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5299,"nodeType":"ExpressionStatement","src":"10739:21:15"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5301,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"10803:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10815:11:15","memberName":"totalMinted","nodeType":"MemberAccess","referencedDeclaration":4511,"src":"10803:23:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5300,"name":"OpenMarketModeActivated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"10779:23:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5305,"nodeType":"EmitStatement","src":"10774:55:15"}]}}]},"documentation":{"id":5283,"nodeType":"StructuredDocumentation","src":"10509:82:15","text":" @dev Check and activate open market mode if all NFTs are minted"},"id":5309,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOpenMarketMode","nameLocation":"10605:20:15","nodeType":"FunctionDefinition","parameters":{"id":5284,"nodeType":"ParameterList","parameters":[],"src":"10625:2:15"},"returnParameters":{"id":5285,"nodeType":"ParameterList","parameters":[],"src":"10637:0:15"},"scope":5511,"src":"10596:250:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5340,"nodeType":"Block","src":"10994:198:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5318,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"11012:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11032:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11024:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5319,"name":"address","nodeType":"ElementaryTypeName","src":"11024:7:15","typeDescriptions":{}}},"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11024:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11012:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646d696e2061646472657373","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11036:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653","typeString":"literal_string \"Invalid admin address\""},"value":"Invalid admin address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653","typeString":"literal_string \"Invalid admin address\""}],"id":5317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11004:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11004:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5326,"nodeType":"ExpressionStatement","src":"11004:56:15"},{"assignments":[5328],"declarations":[{"constant":false,"id":5328,"mutability":"mutable","name":"oldAdmin","nameLocation":"11087:8:15","nodeType":"VariableDeclaration","scope":5340,"src":"11079:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5327,"name":"address","nodeType":"ElementaryTypeName","src":"11079:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5330,"initialValue":{"id":5329,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"11098:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11079:24:15"},{"expression":{"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5331,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"11113:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5332,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"11121:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11113:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5334,"nodeType":"ExpressionStatement","src":"11113:16:15"},{"eventCall":{"arguments":[{"id":5336,"name":"oldAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"11166:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5337,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"11176:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5335,"name":"AdminUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"11153:12:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11153:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5339,"nodeType":"EmitStatement","src":"11148:37:15"}]},"documentation":{"id":5310,"nodeType":"StructuredDocumentation","src":"10852:82:15","text":" @dev Set admin address\n @param newAdmin New admin address"},"functionSelector":"704b6c02","id":5341,"implemented":true,"kind":"function","modifiers":[{"id":5315,"kind":"modifierInvocation","modifierName":{"id":5314,"name":"onlyOwner","nameLocations":["10984:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10984:9:15"},"nodeType":"ModifierInvocation","src":"10984:9:15"}],"name":"setAdmin","nameLocation":"10948:8:15","nodeType":"FunctionDefinition","parameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"newAdmin","nameLocation":"10965:8:15","nodeType":"VariableDeclaration","scope":5341,"src":"10957:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5311,"name":"address","nodeType":"ElementaryTypeName","src":"10957:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10956:18:15"},"returnParameters":{"id":5316,"nodeType":"ParameterList","parameters":[],"src":"10994:0:15"},"scope":5511,"src":"10939:253:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5357,"nodeType":"Block","src":"11367:79:15","statements":[{"expression":{"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5349,"name":"swapEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"11377:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5350,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"11391:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11377:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5352,"nodeType":"ExpressionStatement","src":"11377:21:15"},{"eventCall":{"arguments":[{"id":5354,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"11431:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5353,"name":"SwapStatusUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"11413:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11413:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5356,"nodeType":"EmitStatement","src":"11408:31:15"}]},"documentation":{"id":5342,"nodeType":"StructuredDocumentation","src":"11198:107:15","text":" @dev Enable or disable swapping\n @param enabled Whether swapping should be enabled"},"functionSelector":"e01af92c","id":5358,"implemented":true,"kind":"function","modifiers":[{"id":5347,"kind":"modifierInvocation","modifierName":{"id":5346,"name":"onlyAdmin","nameLocations":["11357:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":4653,"src":"11357:9:15"},"nodeType":"ModifierInvocation","src":"11357:9:15"}],"name":"setSwapEnabled","nameLocation":"11319:14:15","nodeType":"FunctionDefinition","parameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"enabled","nameLocation":"11339:7:15","nodeType":"VariableDeclaration","scope":5358,"src":"11334:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5343,"name":"bool","nodeType":"ElementaryTypeName","src":"11334:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11333:14:15"},"returnParameters":{"id":5348,"nodeType":"ParameterList","parameters":[],"src":"11367:0:15"},"scope":5511,"src":"11310:136:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5400,"nodeType":"Block","src":"11708:240:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5369,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"11726:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11740:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11732:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5370,"name":"address","nodeType":"ElementaryTypeName","src":"11732:7:15","typeDescriptions":{}}},"id":5373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11732:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11726:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e74","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11744:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""},"value":"Invalid recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""}],"id":5368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11718:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11718:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5377,"nodeType":"ExpressionStatement","src":"11718:46:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5379,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"11782:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5380,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"11792:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11782:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420746f6b656e2062616c616e6365","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11806:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192","typeString":"literal_string \"Insufficient token balance\""},"value":"Insufficient token balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192","typeString":"literal_string \"Insufficient token balance\""}],"id":5378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11774:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11774:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5384,"nodeType":"ExpressionStatement","src":"11774:61:15"},{"expression":{"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5385,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"11854:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5386,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"11870:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11854:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5388,"nodeType":"ExpressionStatement","src":"11854:22:15"},{"expression":{"arguments":[{"id":5396,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"11930:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5397,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"11934:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":5392,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"11901:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}],"id":5391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11893:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5390,"name":"address","nodeType":"ElementaryTypeName","src":"11893:7:15","typeDescriptions":{}}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11893:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5389,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"11886:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$315_$","typeString":"type(contract IERC20)"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11886:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11917:12:15","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":386,"src":"11886:43:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11886:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5399,"nodeType":"ExpressionStatement","src":"11886:55:15"}]},"documentation":{"id":5359,"nodeType":"StructuredDocumentation","src":"11452:171:15","text":" @dev Emergency function to withdraw tokens (admin only)\n @param to Address to withdraw tokens to\n @param amount Amount of tokens to withdraw"},"functionSelector":"917bb998","id":5401,"implemented":true,"kind":"function","modifiers":[{"id":5366,"kind":"modifierInvocation","modifierName":{"id":5365,"name":"onlyAdmin","nameLocations":["11698:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":4653,"src":"11698:9:15"},"nodeType":"ModifierInvocation","src":"11698:9:15"}],"name":"emergencyWithdrawTokens","nameLocation":"11637:23:15","nodeType":"FunctionDefinition","parameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"to","nameLocation":"11669:2:15","nodeType":"VariableDeclaration","scope":5401,"src":"11661:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5360,"name":"address","nodeType":"ElementaryTypeName","src":"11661:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5363,"mutability":"mutable","name":"amount","nameLocation":"11681:6:15","nodeType":"VariableDeclaration","scope":5401,"src":"11673:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5362,"name":"uint256","nodeType":"ElementaryTypeName","src":"11673:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11660:28:15"},"returnParameters":{"id":5367,"nodeType":"ParameterList","parameters":[],"src":"11708:0:15"},"scope":5511,"src":"11628:320:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5448,"nodeType":"Block","src":"12200:247:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5412,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"12218:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12232:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12224:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5413,"name":"address","nodeType":"ElementaryTypeName","src":"12224:7:15","typeDescriptions":{}}},"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12224:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12218:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e74","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12236:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""},"value":"Invalid recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""}],"id":5411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12210:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12210:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5420,"nodeType":"ExpressionStatement","src":"12210:46:15"},{"expression":{"arguments":[{"baseExpression":{"id":5422,"name":"nftHeld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"12274:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":5424,"indexExpression":{"id":5423,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"12282:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12274:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4654206e6f7420696e207661756c74","id":5425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12292:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_dac8f8f8cefeef49f92bd194a19eb3d0ca80d6935a78adb3e30c70d8a4b421bf","typeString":"literal_string \"NFT not in vault\""},"value":"NFT not in vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dac8f8f8cefeef49f92bd194a19eb3d0ca80d6935a78adb3e30c70d8a4b421bf","typeString":"literal_string \"NFT not in vault\""}],"id":5421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5427,"nodeType":"ExpressionStatement","src":"12266:45:15"},{"expression":{"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5428,"name":"nftHeld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"12330:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":5430,"indexExpression":{"id":5429,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"12338:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12330:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12349:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12330:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5433,"nodeType":"ExpressionStatement","src":"12330:24:15"},{"expression":{"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"12364:10:15","subExpression":{"id":5434,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"12364:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5436,"nodeType":"ExpressionStatement","src":"12364:10:15"},{"expression":{"arguments":[{"arguments":[{"id":5442,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12421:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC222Vault_$5511","typeString":"contract ERC222Vault"}],"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12413:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5440,"name":"address","nodeType":"ElementaryTypeName","src":"12413:7:15","typeDescriptions":{}}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12413:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5444,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"12428:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5445,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"12432:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5437,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"12384:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12396:16:15","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":877,"src":"12384:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12384:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5447,"nodeType":"ExpressionStatement","src":"12384:56:15"}]},"documentation":{"id":5402,"nodeType":"StructuredDocumentation","src":"11954:163:15","text":" @dev Emergency function to withdraw NFTs (admin only)\n @param to Address to withdraw NFT to\n @param tokenId NFT token ID to withdraw"},"functionSelector":"922b8079","id":5449,"implemented":true,"kind":"function","modifiers":[{"id":5409,"kind":"modifierInvocation","modifierName":{"id":5408,"name":"onlyAdmin","nameLocations":["12190:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":4653,"src":"12190:9:15"},"nodeType":"ModifierInvocation","src":"12190:9:15"}],"name":"emergencyWithdrawNFT","nameLocation":"12131:20:15","nodeType":"FunctionDefinition","parameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"to","nameLocation":"12160:2:15","nodeType":"VariableDeclaration","scope":5449,"src":"12152:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5403,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5406,"mutability":"mutable","name":"tokenId","nameLocation":"12172:7:15","nodeType":"VariableDeclaration","scope":5449,"src":"12164:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5405,"name":"uint256","nodeType":"ElementaryTypeName","src":"12164:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12151:29:15"},"returnParameters":{"id":5410,"nodeType":"ParameterList","parameters":[],"src":"12200:0:15"},"scope":5511,"src":"12122:325:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[939],"body":{"id":5468,"nodeType":"Block","src":"12693:65:15","statements":[{"expression":{"expression":{"expression":{"id":5464,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"12710:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$940_$","typeString":"type(contract IERC721Receiver)"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12726:16:15","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":939,"src":"12710:32:15","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12743:8:15","memberName":"selector","nodeType":"MemberAccess","src":"12710:41:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":5463,"id":5467,"nodeType":"Return","src":"12703:48:15"}]},"documentation":{"id":5450,"nodeType":"StructuredDocumentation","src":"12453:61:15","text":" @dev Handle NFT transfers to this contract"},"functionSelector":"150b7a02","id":5469,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"12528:16:15","nodeType":"FunctionDefinition","overrides":{"id":5460,"nodeType":"OverrideSpecifier","overrides":[],"src":"12667:8:15"},"parameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"operator","nameLocation":"12562:8:15","nodeType":"VariableDeclaration","scope":5469,"src":"12554:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5451,"name":"address","nodeType":"ElementaryTypeName","src":"12554:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5454,"mutability":"mutable","name":"from","nameLocation":"12588:4:15","nodeType":"VariableDeclaration","scope":5469,"src":"12580:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5453,"name":"address","nodeType":"ElementaryTypeName","src":"12580:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5456,"mutability":"mutable","name":"tokenId","nameLocation":"12610:7:15","nodeType":"VariableDeclaration","scope":5469,"src":"12602:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5455,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5458,"mutability":"mutable","name":"data","nameLocation":"12642:4:15","nodeType":"VariableDeclaration","scope":5469,"src":"12627:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5457,"name":"bytes","nodeType":"ElementaryTypeName","src":"12627:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12544:108:15"},"returnParameters":{"id":5463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5469,"src":"12685:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5461,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12685:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12684:8:15"},"scope":5511,"src":"12519:239:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":5509,"nodeType":"Block","src":"13153:290:15","statements":[{"expression":{"components":[{"id":5491,"name":"songName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"13184:8:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[{"id":5494,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"13214:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC222NFT_$4517","typeString":"contract IERC222NFT"}],"id":5493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13206:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5492,"name":"address","nodeType":"ElementaryTypeName","src":"13206:7:15","typeDescriptions":{}}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13206:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5498,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"13248:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC222Token_$4537","typeString":"contract IERC222Token"}],"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13240:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5496,"name":"address","nodeType":"ElementaryTypeName","src":"13240:7:15","typeDescriptions":{}}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13240:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5500,"name":"TOKENS_PER_NFT_UNITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"13276:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5501,"name":"nftCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"13310:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5502,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"13332:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5503,"name":"getFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"13358:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13358:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5505,"name":"openMarketMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"13387:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5506,"name":"swapEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"13415:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13170:266:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_storage_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$","typeString":"tuple(string storage ref,address,address,uint256,uint256,uint256,uint256,bool,bool)"}},"functionReturnParameters":5490,"id":5508,"nodeType":"Return","src":"13163:273:15"}]},"documentation":{"id":5470,"nodeType":"StructuredDocumentation","src":"12764:59:15","text":" @dev Get comprehensive vault information"},"functionSelector":"7f98aa71","id":5510,"implemented":true,"kind":"function","modifiers":[],"name":"getVaultInfo","nameLocation":"12837:12:15","nodeType":"FunctionDefinition","parameters":{"id":5471,"nodeType":"ParameterList","parameters":[],"src":"12849:2:15"},"returnParameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"vaultSongName","nameLocation":"12898:13:15","nodeType":"VariableDeclaration","scope":5510,"src":"12884:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5472,"name":"string","nodeType":"ElementaryTypeName","src":"12884:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5475,"mutability":"mutable","name":"nftAddress","nameLocation":"12929:10:15","nodeType":"VariableDeclaration","scope":5510,"src":"12921:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5474,"name":"address","nodeType":"ElementaryTypeName","src":"12921:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5477,"mutability":"mutable","name":"tokenAddress","nameLocation":"12957:12:15","nodeType":"VariableDeclaration","scope":5510,"src":"12949:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5476,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5479,"mutability":"mutable","name":"conversionRatio","nameLocation":"12987:15:15","nodeType":"VariableDeclaration","scope":5510,"src":"12979:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5478,"name":"uint256","nodeType":"ElementaryTypeName","src":"12979:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5481,"mutability":"mutable","name":"nftsHeld","nameLocation":"13020:8:15","nodeType":"VariableDeclaration","scope":5510,"src":"13012:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5480,"name":"uint256","nodeType":"ElementaryTypeName","src":"13012:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5483,"mutability":"mutable","name":"tokensHeld","nameLocation":"13046:10:15","nodeType":"VariableDeclaration","scope":5510,"src":"13038:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"13038:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5485,"mutability":"mutable","name":"currentFloorPrice","nameLocation":"13074:17:15","nodeType":"VariableDeclaration","scope":5510,"src":"13066:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"13066:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5487,"mutability":"mutable","name":"openMarket","nameLocation":"13106:10:15","nodeType":"VariableDeclaration","scope":5510,"src":"13101:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5486,"name":"bool","nodeType":"ElementaryTypeName","src":"13101:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5489,"mutability":"mutable","name":"swappingEnabled","nameLocation":"13131:15:15","nodeType":"VariableDeclaration","scope":5510,"src":"13126:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5488,"name":"bool","nodeType":"ElementaryTypeName","src":"13126:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12874:278:15"},"scope":5511,"src":"12828:615:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5512,"src":"1481:11964:15","usedErrors":[13,18,353,1036],"usedEvents":[24,4587,4595,4603,4611,4617,4621,4625,4631,4635]}],"src":"32:13413:15"},"id":15}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087d2304e86c07eccd4f9f39f79c28cf8db16e46e5d8ee645e6e8b23c0c5e7a7e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xD2 ADDRESS 0x4E DUP7 0xC0 PUSH31 0xCCD4F9F39F79C28CF8DB16E46E5D8EE645E6E8B23C0C5E7A7E64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087d2304e86c07eccd4f9f39f79c28cf8db16e46e5d8ee645e6e8b23c0c5e7a7e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xD2 ADDRESS 0x4E DUP7 0xC0 PUSH31 0xCCD4F9F39F79C28CF8DB16E46E5D8EE645E6E8B23C0C5E7A7E64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/ERC222Vault.sol":{"ERC222Vault":{"abi":[{"inputs":[{"internalType":"address","name":"nftContract_","type":"address"},{"internalType":"address","name":"tokenContract_","type":"address"},{"internalType":"string","name":"songName_","type":"string"},{"internalType":"address","name":"admin_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAdmin","type":"address"},{"indexed":true,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFloorPrice","type":"uint256"}],"name":"FloorPriceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokensReceived","type":"uint256"}],"name":"NFTDepositedToVault","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokensPaid","type":"uint256"}],"name":"NFTWithdrawnFromVault","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"totalNFTsMinted","type":"uint256"}],"name":"OpenMarketModeActivated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"SwapStatusUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"nftReceived","type":"uint256"}],"name":"TokensDepositedToVault","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"nftDeposited","type":"uint256"}],"name":"TokensWithdrawnFromVault","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"nftCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"VaultPreloaded","type":"event"},{"inputs":[],"name":"TOKENS_PER_NFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKENS_PER_NFT_UNITS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN_DECIMALS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"depositNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"depositTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"emergencyWithdrawNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFloorPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxResults","type":"uint256"}],"name":"getNFTsInVault","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultInfo","outputs":[{"internalType":"string","name":"vaultSongName","type":"string"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"conversionRatio","type":"uint256"},{"internalType":"uint256","name":"nftsHeld","type":"uint256"},{"internalType":"uint256","name":"tokensHeld","type":"uint256"},{"internalType":"uint256","name":"currentFloorPrice","type":"uint256"},{"internalType":"bool","name":"openMarket","type":"bool"},{"internalType":"bool","name":"swappingEnabled","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultStats","outputs":[{"internalType":"uint256","name":"nftsInVault","type":"uint256"},{"internalType":"uint256","name":"tokensInVault","type":"uint256"},{"internalType":"uint256","name":"floorPrice","type":"uint256"},{"internalType":"bool","name":"isOpenMarket","type":"bool"},{"internalType":"uint256","name":"totalNFTsMinted","type":"uint256"},{"internalType":"uint256","name":"maxNFTSupply","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isNFTInVault","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftContract","outputs":[{"internalType":"contract IERC222NFT","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"nftHeld","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"openMarketMode","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"nftIds","type":"uint256[]"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"preloadVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"setAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setSwapEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"songName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swapEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenContract","outputs":[{"internalType":"contract IERC222Token","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalMarketCap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"additionalValue","type":"uint256"}],"name":"updateMarketCap","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1044":{"entryPoint":null,"id":1044,"parameterSlots":0,"returnSlots":0},"@_4762":{"entryPoint":null,"id":4762,"parameterSlots":4,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":810,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":890,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_address_fromMemory":{"entryPoint":941,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1557,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":1583,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67900602c4c4a6a28389c91f7c020f4bdf4429a39649ceb1958d4005df760c74__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7da84f3a1c9f163c91d06a811fbdd86f5cfb6057a97fe7a83411f17c926ea263__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_exp_helper":{"entryPoint":1649,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":1904,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":1722,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1921,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1270,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1353,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1210,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1627,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":919,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7984:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:16","statements":[{"nodeType":"YulAssignment","src":"84:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:16"},"nodeType":"YulFunctionCall","src":"93:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:16"}]},{"body":{"nodeType":"YulBlock","src":"169:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:16"},"nodeType":"YulFunctionCall","src":"171:12:16"},"nodeType":"YulExpressionStatement","src":"171:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:16"},"nodeType":"YulFunctionCall","src":"150:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:16"},"nodeType":"YulFunctionCall","src":"146:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:16"},"nodeType":"YulFunctionCall","src":"135:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:16"},"nodeType":"YulFunctionCall","src":"125:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:16"},"nodeType":"YulFunctionCall","src":"118:50:16"},"nodeType":"YulIf","src":"115:70:16"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:16","type":""}],"src":"14:177:16"},{"body":{"nodeType":"YulBlock","src":"228:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"245:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"252:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"257:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"248:3:16"},"nodeType":"YulFunctionCall","src":"248:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"238:6:16"},"nodeType":"YulFunctionCall","src":"238:31:16"},"nodeType":"YulExpressionStatement","src":"238:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"285:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"288:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"278:6:16"},"nodeType":"YulFunctionCall","src":"278:15:16"},"nodeType":"YulExpressionStatement","src":"278:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:16"},"nodeType":"YulFunctionCall","src":"302:15:16"},"nodeType":"YulExpressionStatement","src":"302:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"196:127:16"},{"body":{"nodeType":"YulBlock","src":"470:1156:16","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:16"},"nodeType":"YulFunctionCall","src":"519:12:16"},"nodeType":"YulExpressionStatement","src":"519:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"487:3:16"},"nodeType":"YulFunctionCall","src":"487:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"512:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"483:3:16"},"nodeType":"YulFunctionCall","src":"483:33:16"},"nodeType":"YulIf","src":"480:53:16"},{"nodeType":"YulAssignment","src":"542:50:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"582:9:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"552:29:16"},"nodeType":"YulFunctionCall","src":"552:40:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"542:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"601:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"611:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"605:2:16","type":""}]},{"nodeType":"YulAssignment","src":"622:59:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"666:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"677:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"662:3:16"},"nodeType":"YulFunctionCall","src":"662:18:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"632:29:16"},"nodeType":"YulFunctionCall","src":"632:49:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"622:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"690:39:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"714:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"725:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"710:3:16"},"nodeType":"YulFunctionCall","src":"710:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"704:5:16"},"nodeType":"YulFunctionCall","src":"704:25:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"694:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"738:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"756:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"760:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"752:3:16"},"nodeType":"YulFunctionCall","src":"752:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"764:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"748:3:16"},"nodeType":"YulFunctionCall","src":"748:18:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"742:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"793:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"802:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"805:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"795:6:16"},"nodeType":"YulFunctionCall","src":"795:12:16"},"nodeType":"YulExpressionStatement","src":"795:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"781:6:16"},{"name":"_2","nodeType":"YulIdentifier","src":"789:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"778:2:16"},"nodeType":"YulFunctionCall","src":"778:14:16"},"nodeType":"YulIf","src":"775:34:16"},{"nodeType":"YulVariableDeclaration","src":"818:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"832:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"843:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"828:3:16"},"nodeType":"YulFunctionCall","src":"828:22:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"822:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"898:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"907:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"910:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"900:6:16"},"nodeType":"YulFunctionCall","src":"900:12:16"},"nodeType":"YulExpressionStatement","src":"900:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"877:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"881:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"873:3:16"},"nodeType":"YulFunctionCall","src":"873:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"888:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"869:3:16"},"nodeType":"YulFunctionCall","src":"869:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"862:6:16"},"nodeType":"YulFunctionCall","src":"862:35:16"},"nodeType":"YulIf","src":"859:55:16"},{"nodeType":"YulVariableDeclaration","src":"923:19:16","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"939:2:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"933:5:16"},"nodeType":"YulFunctionCall","src":"933:9:16"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"927:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"965:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"967:16:16"},"nodeType":"YulFunctionCall","src":"967:18:16"},"nodeType":"YulExpressionStatement","src":"967:18:16"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"957:2:16"},{"name":"_2","nodeType":"YulIdentifier","src":"961:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"954:2:16"},"nodeType":"YulFunctionCall","src":"954:10:16"},"nodeType":"YulIf","src":"951:36:16"},{"nodeType":"YulVariableDeclaration","src":"996:17:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1010:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1006:3:16"},"nodeType":"YulFunctionCall","src":"1006:7:16"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"1000:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1022:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1042:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1036:5:16"},"nodeType":"YulFunctionCall","src":"1036:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1026:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1054:71:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1076:6:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1100:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"1104:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1096:3:16"},"nodeType":"YulFunctionCall","src":"1096:13:16"},{"name":"_5","nodeType":"YulIdentifier","src":"1111:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1092:3:16"},"nodeType":"YulFunctionCall","src":"1092:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"1116:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1088:3:16"},"nodeType":"YulFunctionCall","src":"1088:31:16"},{"name":"_5","nodeType":"YulIdentifier","src":"1121:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1084:3:16"},"nodeType":"YulFunctionCall","src":"1084:40:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1072:3:16"},"nodeType":"YulFunctionCall","src":"1072:53:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1058:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1184:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1186:16:16"},"nodeType":"YulFunctionCall","src":"1186:18:16"},"nodeType":"YulExpressionStatement","src":"1186:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1143:10:16"},{"name":"_2","nodeType":"YulIdentifier","src":"1155:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1140:2:16"},"nodeType":"YulFunctionCall","src":"1140:18:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1163:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1175:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1160:2:16"},"nodeType":"YulFunctionCall","src":"1160:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1137:2:16"},"nodeType":"YulFunctionCall","src":"1137:46:16"},"nodeType":"YulIf","src":"1134:72:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1222:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1226:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1215:6:16"},"nodeType":"YulFunctionCall","src":"1215:22:16"},"nodeType":"YulExpressionStatement","src":"1215:22:16"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1253:6:16"},{"name":"_4","nodeType":"YulIdentifier","src":"1261:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1246:6:16"},"nodeType":"YulFunctionCall","src":"1246:18:16"},"nodeType":"YulExpressionStatement","src":"1246:18:16"},{"body":{"nodeType":"YulBlock","src":"1310:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1319:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1322:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1312:6:16"},"nodeType":"YulFunctionCall","src":"1312:12:16"},"nodeType":"YulExpressionStatement","src":"1312:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1287:2:16"},{"name":"_4","nodeType":"YulIdentifier","src":"1291:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1283:3:16"},"nodeType":"YulFunctionCall","src":"1283:11:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1296:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1279:3:16"},"nodeType":"YulFunctionCall","src":"1279:20:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1276:2:16"},"nodeType":"YulFunctionCall","src":"1276:33:16"},"nodeType":"YulIf","src":"1273:53:16"},{"nodeType":"YulVariableDeclaration","src":"1335:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1344:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1339:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1400:83:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1429:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"1437:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1425:3:16"},"nodeType":"YulFunctionCall","src":"1425:14:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1441:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1421:3:16"},"nodeType":"YulFunctionCall","src":"1421:23:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1460:2:16"},{"name":"i","nodeType":"YulIdentifier","src":"1464:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:16"},"nodeType":"YulFunctionCall","src":"1456:10:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1468:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1452:3:16"},"nodeType":"YulFunctionCall","src":"1452:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1446:5:16"},"nodeType":"YulFunctionCall","src":"1446:26:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1414:6:16"},"nodeType":"YulFunctionCall","src":"1414:59:16"},"nodeType":"YulExpressionStatement","src":"1414:59:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1365:1:16"},{"name":"_4","nodeType":"YulIdentifier","src":"1368:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1362:2:16"},"nodeType":"YulFunctionCall","src":"1362:9:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1372:19:16","statements":[{"nodeType":"YulAssignment","src":"1374:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1383:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1386:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1379:3:16"},"nodeType":"YulFunctionCall","src":"1379:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1374:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1358:3:16","statements":[]},"src":"1354:129:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1507:6:16"},{"name":"_4","nodeType":"YulIdentifier","src":"1515:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1503:3:16"},"nodeType":"YulFunctionCall","src":"1503:15:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1520:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:16"},"nodeType":"YulFunctionCall","src":"1499:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"1525:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:16"},"nodeType":"YulFunctionCall","src":"1492:35:16"},"nodeType":"YulExpressionStatement","src":"1492:35:16"},{"nodeType":"YulAssignment","src":"1536:16:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1546:6:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1536:6:16"}]},{"nodeType":"YulAssignment","src":"1561:59:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1605:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1616:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1601:3:16"},"nodeType":"YulFunctionCall","src":"1601:18:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"1571:29:16"},"nodeType":"YulFunctionCall","src":"1571:49:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1561:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"412:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"423:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"435:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"443:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"451:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"459:6:16","type":""}],"src":"328:1298:16"},{"body":{"nodeType":"YulBlock","src":"1732:102:16","statements":[{"nodeType":"YulAssignment","src":"1742:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1754:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1765:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1750:3:16"},"nodeType":"YulFunctionCall","src":"1750:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1742:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1784:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1799:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1815:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1820:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1811:3:16"},"nodeType":"YulFunctionCall","src":"1811:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"1824:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1807:3:16"},"nodeType":"YulFunctionCall","src":"1807:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1795:3:16"},"nodeType":"YulFunctionCall","src":"1795:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1777:6:16"},"nodeType":"YulFunctionCall","src":"1777:51:16"},"nodeType":"YulExpressionStatement","src":"1777:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1701:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1712:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1723:4:16","type":""}],"src":"1631:203:16"},{"body":{"nodeType":"YulBlock","src":"2013:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2030:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2041:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2023:6:16"},"nodeType":"YulFunctionCall","src":"2023:21:16"},"nodeType":"YulExpressionStatement","src":"2023:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2064:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2075:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2060:3:16"},"nodeType":"YulFunctionCall","src":"2060:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"2080:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2053:6:16"},"nodeType":"YulFunctionCall","src":"2053:30:16"},"nodeType":"YulExpressionStatement","src":"2053:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2103:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2114:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2099:3:16"},"nodeType":"YulFunctionCall","src":"2099:18:16"},{"hexValue":"496e76616c6964204e465420636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"2119:22:16","type":"","value":"Invalid NFT contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2092:6:16"},"nodeType":"YulFunctionCall","src":"2092:50:16"},"nodeType":"YulExpressionStatement","src":"2092:50:16"},{"nodeType":"YulAssignment","src":"2151:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2163:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2174:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:16"},"nodeType":"YulFunctionCall","src":"2159:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2151:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1990:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2004:4:16","type":""}],"src":"1839:344:16"},{"body":{"nodeType":"YulBlock","src":"2362:172:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2379:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2390:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2372:6:16"},"nodeType":"YulFunctionCall","src":"2372:21:16"},"nodeType":"YulExpressionStatement","src":"2372:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2413:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2424:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2409:3:16"},"nodeType":"YulFunctionCall","src":"2409:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"2429:2:16","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2402:6:16"},"nodeType":"YulFunctionCall","src":"2402:30:16"},"nodeType":"YulExpressionStatement","src":"2402:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2452:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2463:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2448:3:16"},"nodeType":"YulFunctionCall","src":"2448:18:16"},{"hexValue":"496e76616c696420746f6b656e20636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"2468:24:16","type":"","value":"Invalid token contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2441:6:16"},"nodeType":"YulFunctionCall","src":"2441:52:16"},"nodeType":"YulExpressionStatement","src":"2441:52:16"},{"nodeType":"YulAssignment","src":"2502:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2514:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2525:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2510:3:16"},"nodeType":"YulFunctionCall","src":"2510:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2502:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7da84f3a1c9f163c91d06a811fbdd86f5cfb6057a97fe7a83411f17c926ea263__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2339:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2353:4:16","type":""}],"src":"2188:346:16"},{"body":{"nodeType":"YulBlock","src":"2713:175:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2730:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2741:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2723:6:16"},"nodeType":"YulFunctionCall","src":"2723:21:16"},"nodeType":"YulExpressionStatement","src":"2723:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2775:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:16"},"nodeType":"YulFunctionCall","src":"2760:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"2780:2:16","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:16"},"nodeType":"YulFunctionCall","src":"2753:30:16"},"nodeType":"YulExpressionStatement","src":"2753:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2803:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2814:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2799:3:16"},"nodeType":"YulFunctionCall","src":"2799:18:16"},{"hexValue":"536f6e67206e616d652063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"2819:27:16","type":"","value":"Song name cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2792:6:16"},"nodeType":"YulFunctionCall","src":"2792:55:16"},"nodeType":"YulExpressionStatement","src":"2792:55:16"},{"nodeType":"YulAssignment","src":"2856:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2868:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2879:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2864:3:16"},"nodeType":"YulFunctionCall","src":"2864:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2856:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_67900602c4c4a6a28389c91f7c020f4bdf4429a39649ceb1958d4005df760c74__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2690:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2704:4:16","type":""}],"src":"2539:349:16"},{"body":{"nodeType":"YulBlock","src":"3067:171:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3084:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3095:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3077:6:16"},"nodeType":"YulFunctionCall","src":"3077:21:16"},"nodeType":"YulExpressionStatement","src":"3077:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3118:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3129:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3114:3:16"},"nodeType":"YulFunctionCall","src":"3114:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"3134:2:16","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3107:6:16"},"nodeType":"YulFunctionCall","src":"3107:30:16"},"nodeType":"YulExpressionStatement","src":"3107:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3157:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3168:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3153:3:16"},"nodeType":"YulFunctionCall","src":"3153:18:16"},{"hexValue":"496e76616c69642061646d696e2061646472657373","kind":"string","nodeType":"YulLiteral","src":"3173:23:16","type":"","value":"Invalid admin address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3146:6:16"},"nodeType":"YulFunctionCall","src":"3146:51:16"},"nodeType":"YulExpressionStatement","src":"3146:51:16"},{"nodeType":"YulAssignment","src":"3206:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3218:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3229:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3214:3:16"},"nodeType":"YulFunctionCall","src":"3214:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3206:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3044:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3058:4:16","type":""}],"src":"2893:345:16"},{"body":{"nodeType":"YulBlock","src":"3298:325:16","statements":[{"nodeType":"YulAssignment","src":"3308:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3322:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3325:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3318:3:16"},"nodeType":"YulFunctionCall","src":"3318:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3308:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"3339:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3369:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3375:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3365:3:16"},"nodeType":"YulFunctionCall","src":"3365:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3343:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3416:31:16","statements":[{"nodeType":"YulAssignment","src":"3418:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3432:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3440:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3428:3:16"},"nodeType":"YulFunctionCall","src":"3428:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3418:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3396:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3389:6:16"},"nodeType":"YulFunctionCall","src":"3389:26:16"},"nodeType":"YulIf","src":"3386:61:16"},{"body":{"nodeType":"YulBlock","src":"3506:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3527:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3534:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3539:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3530:3:16"},"nodeType":"YulFunctionCall","src":"3530:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3520:6:16"},"nodeType":"YulFunctionCall","src":"3520:31:16"},"nodeType":"YulExpressionStatement","src":"3520:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3571:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3574:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3564:6:16"},"nodeType":"YulFunctionCall","src":"3564:15:16"},"nodeType":"YulExpressionStatement","src":"3564:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3599:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3602:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3592:6:16"},"nodeType":"YulFunctionCall","src":"3592:15:16"},"nodeType":"YulExpressionStatement","src":"3592:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3462:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3485:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3493:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3482:2:16"},"nodeType":"YulFunctionCall","src":"3482:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3459:2:16"},"nodeType":"YulFunctionCall","src":"3459:38:16"},"nodeType":"YulIf","src":"3456:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3278:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3287:6:16","type":""}],"src":"3243:380:16"},{"body":{"nodeType":"YulBlock","src":"3684:65:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3701:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"3704:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3694:6:16"},"nodeType":"YulFunctionCall","src":"3694:14:16"},"nodeType":"YulExpressionStatement","src":"3694:14:16"},{"nodeType":"YulAssignment","src":"3717:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3735:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3738:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3725:9:16"},"nodeType":"YulFunctionCall","src":"3725:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3717:4:16"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3667:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3675:4:16","type":""}],"src":"3628:121:16"},{"body":{"nodeType":"YulBlock","src":"3835:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"3868:425:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3882:11:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3892:1:16","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3886:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3913:2:16"},{"name":"array","nodeType":"YulIdentifier","src":"3917:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3906:6:16"},"nodeType":"YulFunctionCall","src":"3906:17:16"},"nodeType":"YulExpressionStatement","src":"3906:17:16"},{"nodeType":"YulVariableDeclaration","src":"3936:31:16","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3958:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"3962:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3948:9:16"},"nodeType":"YulFunctionCall","src":"3948:19:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"3940:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3980:57:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4003:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4013:1:16","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4020:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"4032:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4016:3:16"},"nodeType":"YulFunctionCall","src":"4016:19:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4009:3:16"},"nodeType":"YulFunctionCall","src":"4009:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:16"},"nodeType":"YulFunctionCall","src":"3999:38:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"3984:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4074:23:16","statements":[{"nodeType":"YulAssignment","src":"4076:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"4091:4:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4076:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4056:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"4068:4:16","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4053:2:16"},"nodeType":"YulFunctionCall","src":"4053:20:16"},"nodeType":"YulIf","src":"4050:47:16"},{"nodeType":"YulVariableDeclaration","src":"4110:41:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4124:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4134:1:16","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4141:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4146:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4137:3:16"},"nodeType":"YulFunctionCall","src":"4137:12:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4130:3:16"},"nodeType":"YulFunctionCall","src":"4130:20:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4120:3:16"},"nodeType":"YulFunctionCall","src":"4120:31:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4114:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4164:24:16","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"4177:11:16"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"4168:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4262:21:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4271:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4278:2:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4264:6:16"},"nodeType":"YulFunctionCall","src":"4264:17:16"},"nodeType":"YulExpressionStatement","src":"4264:17:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4212:5:16"},{"name":"_2","nodeType":"YulIdentifier","src":"4219:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4209:2:16"},"nodeType":"YulFunctionCall","src":"4209:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4223:26:16","statements":[{"nodeType":"YulAssignment","src":"4225:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4238:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4245:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4234:3:16"},"nodeType":"YulFunctionCall","src":"4234:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"4225:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"4205:3:16","statements":[]},"src":"4201:82:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3851:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3856:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3848:2:16"},"nodeType":"YulFunctionCall","src":"3848:11:16"},"nodeType":"YulIf","src":"3845:448:16"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3807:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"3814:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3819:10:16","type":""}],"src":"3754:545:16"},{"body":{"nodeType":"YulBlock","src":"4389:81:16","statements":[{"nodeType":"YulAssignment","src":"4399:65:16","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4414:4:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4432:1:16","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"4435:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4428:3:16"},"nodeType":"YulFunctionCall","src":"4428:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4445:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4441:3:16"},"nodeType":"YulFunctionCall","src":"4441:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4424:3:16"},"nodeType":"YulFunctionCall","src":"4424:24:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4420:3:16"},"nodeType":"YulFunctionCall","src":"4420:29:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4410:3:16"},"nodeType":"YulFunctionCall","src":"4410:40:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4456:1:16","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"4459:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4452:3:16"},"nodeType":"YulFunctionCall","src":"4452:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4407:2:16"},"nodeType":"YulFunctionCall","src":"4407:57:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4399:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4366:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"4372:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4380:4:16","type":""}],"src":"4304:166:16"},{"body":{"nodeType":"YulBlock","src":"4571:1256:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4581:24:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4601:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4595:5:16"},"nodeType":"YulFunctionCall","src":"4595:10:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"4585:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4648:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4650:16:16"},"nodeType":"YulFunctionCall","src":"4650:18:16"},"nodeType":"YulExpressionStatement","src":"4650:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4620:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4636:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"4640:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4632:3:16"},"nodeType":"YulFunctionCall","src":"4632:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"4644:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4628:3:16"},"nodeType":"YulFunctionCall","src":"4628:18:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4617:2:16"},"nodeType":"YulFunctionCall","src":"4617:30:16"},"nodeType":"YulIf","src":"4614:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4723:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4761:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4755:5:16"},"nodeType":"YulFunctionCall","src":"4755:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4729:25:16"},"nodeType":"YulFunctionCall","src":"4729:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"4769:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"4679:43:16"},"nodeType":"YulFunctionCall","src":"4679:97:16"},"nodeType":"YulExpressionStatement","src":"4679:97:16"},{"nodeType":"YulVariableDeclaration","src":"4785:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4802:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4789:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4812:23:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4831:4:16","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"4816:11:16","type":""}]},{"nodeType":"YulAssignment","src":"4844:24:16","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4857:11:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4844:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4914:656:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4928:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4947:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4959:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4955:3:16"},"nodeType":"YulFunctionCall","src":"4955:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4943:3:16"},"nodeType":"YulFunctionCall","src":"4943:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4932:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4976:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5020:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"4990:29:16"},"nodeType":"YulFunctionCall","src":"4990:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4980:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5038:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5047:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5042:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5125:172:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5150:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5168:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5173:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5164:3:16"},"nodeType":"YulFunctionCall","src":"5164:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5158:5:16"},"nodeType":"YulFunctionCall","src":"5158:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5143:6:16"},"nodeType":"YulFunctionCall","src":"5143:42:16"},"nodeType":"YulExpressionStatement","src":"5143:42:16"},{"nodeType":"YulAssignment","src":"5202:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5216:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5224:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5212:3:16"},"nodeType":"YulFunctionCall","src":"5212:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5202:6:16"}]},{"nodeType":"YulAssignment","src":"5243:40:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5260:9:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"5271:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5256:3:16"},"nodeType":"YulFunctionCall","src":"5256:27:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5243:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5072:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5075:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5069:2:16"},"nodeType":"YulFunctionCall","src":"5069:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5084:28:16","statements":[{"nodeType":"YulAssignment","src":"5086:24:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5095:1:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"5098:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5091:3:16"},"nodeType":"YulFunctionCall","src":"5091:19:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5086:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5065:3:16","statements":[]},"src":"5061:236:16"},{"body":{"nodeType":"YulBlock","src":"5345:166:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5363:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5390:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5395:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5386:3:16"},"nodeType":"YulFunctionCall","src":"5386:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5380:5:16"},"nodeType":"YulFunctionCall","src":"5380:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5367:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5430:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"5442:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5469:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"5472:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5465:3:16"},"nodeType":"YulFunctionCall","src":"5465:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"5481:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5461:3:16"},"nodeType":"YulFunctionCall","src":"5461:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5491:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5487:3:16"},"nodeType":"YulFunctionCall","src":"5487:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5457:3:16"},"nodeType":"YulFunctionCall","src":"5457:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5453:3:16"},"nodeType":"YulFunctionCall","src":"5453:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5438:3:16"},"nodeType":"YulFunctionCall","src":"5438:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5423:6:16"},"nodeType":"YulFunctionCall","src":"5423:74:16"},"nodeType":"YulExpressionStatement","src":"5423:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5316:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"5325:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5313:2:16"},"nodeType":"YulFunctionCall","src":"5313:19:16"},"nodeType":"YulIf","src":"5310:201:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5531:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5545:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"5548:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5541:3:16"},"nodeType":"YulFunctionCall","src":"5541:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"5557:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5537:3:16"},"nodeType":"YulFunctionCall","src":"5537:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5524:6:16"},"nodeType":"YulFunctionCall","src":"5524:36:16"},"nodeType":"YulExpressionStatement","src":"5524:36:16"}]},"nodeType":"YulCase","src":"4907:663:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4912:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5587:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5601:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5614:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5605:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5650:67:16","statements":[{"nodeType":"YulAssignment","src":"5668:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5687:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5692:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5683:3:16"},"nodeType":"YulFunctionCall","src":"5683:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5677:5:16"},"nodeType":"YulFunctionCall","src":"5677:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5668:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5631:6:16"},"nodeType":"YulIf","src":"5628:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5737:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5796:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"5803:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5743:52:16"},"nodeType":"YulFunctionCall","src":"5743:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5730:6:16"},"nodeType":"YulFunctionCall","src":"5730:81:16"},"nodeType":"YulExpressionStatement","src":"5730:81:16"}]},"nodeType":"YulCase","src":"5579:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4887:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4895:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4884:2:16"},"nodeType":"YulFunctionCall","src":"4884:14:16"},"nodeType":"YulSwitch","src":"4877:944:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4556:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"4562:3:16","type":""}],"src":"4475:1352:16"},{"body":{"nodeType":"YulBlock","src":"5913:103:16","statements":[{"body":{"nodeType":"YulBlock","src":"5959:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5968:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5971:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5961:6:16"},"nodeType":"YulFunctionCall","src":"5961:12:16"},"nodeType":"YulExpressionStatement","src":"5961:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5934:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5943:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5930:3:16"},"nodeType":"YulFunctionCall","src":"5930:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5955:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5926:3:16"},"nodeType":"YulFunctionCall","src":"5926:32:16"},"nodeType":"YulIf","src":"5923:52:16"},{"nodeType":"YulAssignment","src":"5984:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6000:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5994:5:16"},"nodeType":"YulFunctionCall","src":"5994:16:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5984:6:16"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5879:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5890:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5902:6:16","type":""}],"src":"5832:184:16"},{"body":{"nodeType":"YulBlock","src":"6100:194:16","statements":[{"body":{"nodeType":"YulBlock","src":"6146:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6155:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6158:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6148:6:16"},"nodeType":"YulFunctionCall","src":"6148:12:16"},"nodeType":"YulExpressionStatement","src":"6148:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6121:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6130:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6117:3:16"},"nodeType":"YulFunctionCall","src":"6117:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"6142:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6113:3:16"},"nodeType":"YulFunctionCall","src":"6113:32:16"},"nodeType":"YulIf","src":"6110:52:16"},{"nodeType":"YulVariableDeclaration","src":"6171:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6190:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6184:5:16"},"nodeType":"YulFunctionCall","src":"6184:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6248:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6257:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6260:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6250:6:16"},"nodeType":"YulFunctionCall","src":"6250:12:16"},"nodeType":"YulExpressionStatement","src":"6250:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6222:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6233:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6240:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6229:3:16"},"nodeType":"YulFunctionCall","src":"6229:16:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6219:2:16"},"nodeType":"YulFunctionCall","src":"6219:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6212:6:16"},"nodeType":"YulFunctionCall","src":"6212:35:16"},"nodeType":"YulIf","src":"6209:55:16"},{"nodeType":"YulAssignment","src":"6273:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"6283:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6273:6:16"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6066:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6077:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6089:6:16","type":""}],"src":"6021:273:16"},{"body":{"nodeType":"YulBlock","src":"6331:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6348:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6355:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6360:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6351:3:16"},"nodeType":"YulFunctionCall","src":"6351:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6341:6:16"},"nodeType":"YulFunctionCall","src":"6341:31:16"},"nodeType":"YulExpressionStatement","src":"6341:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6388:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6391:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6381:6:16"},"nodeType":"YulFunctionCall","src":"6381:15:16"},"nodeType":"YulExpressionStatement","src":"6381:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6412:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6415:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6405:6:16"},"nodeType":"YulFunctionCall","src":"6405:15:16"},"nodeType":"YulExpressionStatement","src":"6405:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6299:127:16"},{"body":{"nodeType":"YulBlock","src":"6495:358:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6505:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6520:1:16","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"6509:7:16","type":""}]},{"nodeType":"YulAssignment","src":"6530:16:16","value":{"name":"power_1","nodeType":"YulIdentifier","src":"6539:7:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6530:5:16"}]},{"nodeType":"YulAssignment","src":"6555:13:16","value":{"name":"_base","nodeType":"YulIdentifier","src":"6563:5:16"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"6555:4:16"}]},{"body":{"nodeType":"YulBlock","src":"6619:228:16","statements":[{"body":{"nodeType":"YulBlock","src":"6664:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6666:16:16"},"nodeType":"YulFunctionCall","src":"6666:18:16"},"nodeType":"YulExpressionStatement","src":"6666:18:16"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6639:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6653:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6649:3:16"},"nodeType":"YulFunctionCall","src":"6649:6:16"},{"name":"base","nodeType":"YulIdentifier","src":"6657:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6645:3:16"},"nodeType":"YulFunctionCall","src":"6645:17:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6636:2:16"},"nodeType":"YulFunctionCall","src":"6636:27:16"},"nodeType":"YulIf","src":"6633:53:16"},{"body":{"nodeType":"YulBlock","src":"6725:29:16","statements":[{"nodeType":"YulAssignment","src":"6727:25:16","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"6740:5:16"},{"name":"base","nodeType":"YulIdentifier","src":"6747:4:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6736:3:16"},"nodeType":"YulFunctionCall","src":"6736:16:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6727:5:16"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6706:8:16"},{"name":"power_1","nodeType":"YulIdentifier","src":"6716:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6702:3:16"},"nodeType":"YulFunctionCall","src":"6702:22:16"},"nodeType":"YulIf","src":"6699:55:16"},{"nodeType":"YulAssignment","src":"6767:23:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6779:4:16"},{"name":"base","nodeType":"YulIdentifier","src":"6785:4:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6775:3:16"},"nodeType":"YulFunctionCall","src":"6775:15:16"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"6767:4:16"}]},{"nodeType":"YulAssignment","src":"6803:34:16","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"6819:7:16"},{"name":"exponent","nodeType":"YulIdentifier","src":"6828:8:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6815:3:16"},"nodeType":"YulFunctionCall","src":"6815:22:16"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"6803:8:16"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6588:8:16"},{"name":"power_1","nodeType":"YulIdentifier","src":"6598:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6585:2:16"},"nodeType":"YulFunctionCall","src":"6585:21:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6607:3:16","statements":[]},"pre":{"nodeType":"YulBlock","src":"6581:3:16","statements":[]},"src":"6577:270:16"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"6459:5:16","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6466:8:16","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6479:5:16","type":""},{"name":"base","nodeType":"YulTypedName","src":"6486:4:16","type":""}],"src":"6431:422:16"},{"body":{"nodeType":"YulBlock","src":"6917:747:16","statements":[{"body":{"nodeType":"YulBlock","src":"6955:52:16","statements":[{"nodeType":"YulAssignment","src":"6969:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6978:1:16","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6969:5:16"}]},{"nodeType":"YulLeave","src":"6992:5:16"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6937:8:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6930:6:16"},"nodeType":"YulFunctionCall","src":"6930:16:16"},"nodeType":"YulIf","src":"6927:80:16"},{"body":{"nodeType":"YulBlock","src":"7040:52:16","statements":[{"nodeType":"YulAssignment","src":"7054:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7063:1:16","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7054:5:16"}]},{"nodeType":"YulLeave","src":"7077:5:16"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7026:4:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7019:6:16"},"nodeType":"YulFunctionCall","src":"7019:12:16"},"nodeType":"YulIf","src":"7016:76:16"},{"cases":[{"body":{"nodeType":"YulBlock","src":"7128:52:16","statements":[{"nodeType":"YulAssignment","src":"7142:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7151:1:16","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7142:5:16"}]},{"nodeType":"YulLeave","src":"7165:5:16"}]},"nodeType":"YulCase","src":"7121:59:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7126:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7196:123:16","statements":[{"body":{"nodeType":"YulBlock","src":"7231:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7233:16:16"},"nodeType":"YulFunctionCall","src":"7233:18:16"},"nodeType":"YulExpressionStatement","src":"7233:18:16"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7216:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"7226:3:16","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7213:2:16"},"nodeType":"YulFunctionCall","src":"7213:17:16"},"nodeType":"YulIf","src":"7210:43:16"},{"nodeType":"YulAssignment","src":"7266:25:16","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7279:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"7289:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7275:3:16"},"nodeType":"YulFunctionCall","src":"7275:16:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7266:5:16"}]},{"nodeType":"YulLeave","src":"7304:5:16"}]},"nodeType":"YulCase","src":"7189:130:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7194:1:16","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"7108:4:16"},"nodeType":"YulSwitch","src":"7101:218:16"},{"body":{"nodeType":"YulBlock","src":"7417:70:16","statements":[{"nodeType":"YulAssignment","src":"7431:28:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7444:4:16"},{"name":"exponent","nodeType":"YulIdentifier","src":"7450:8:16"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7440:3:16"},"nodeType":"YulFunctionCall","src":"7440:19:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7431:5:16"}]},{"nodeType":"YulLeave","src":"7472:5:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7341:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"7347:2:16","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7338:2:16"},"nodeType":"YulFunctionCall","src":"7338:12:16"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7355:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"7365:2:16","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7352:2:16"},"nodeType":"YulFunctionCall","src":"7352:16:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7334:3:16"},"nodeType":"YulFunctionCall","src":"7334:35:16"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7378:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"7384:3:16","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7375:2:16"},"nodeType":"YulFunctionCall","src":"7375:13:16"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7393:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"7403:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7390:2:16"},"nodeType":"YulFunctionCall","src":"7390:16:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7371:3:16"},"nodeType":"YulFunctionCall","src":"7371:36:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7331:2:16"},"nodeType":"YulFunctionCall","src":"7331:77:16"},"nodeType":"YulIf","src":"7328:159:16"},{"nodeType":"YulVariableDeclaration","src":"7496:57:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7538:4:16"},{"name":"exponent","nodeType":"YulIdentifier","src":"7544:8:16"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"7519:18:16"},"nodeType":"YulFunctionCall","src":"7519:34:16"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"7500:7:16","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"7509:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7598:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7600:16:16"},"nodeType":"YulFunctionCall","src":"7600:18:16"},"nodeType":"YulExpressionStatement","src":"7600:18:16"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"7568:7:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7585:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7581:3:16"},"nodeType":"YulFunctionCall","src":"7581:6:16"},{"name":"base_1","nodeType":"YulIdentifier","src":"7589:6:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7577:3:16"},"nodeType":"YulFunctionCall","src":"7577:19:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7565:2:16"},"nodeType":"YulFunctionCall","src":"7565:32:16"},"nodeType":"YulIf","src":"7562:58:16"},{"nodeType":"YulAssignment","src":"7629:29:16","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"7642:7:16"},{"name":"base_1","nodeType":"YulIdentifier","src":"7651:6:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7638:3:16"},"nodeType":"YulFunctionCall","src":"7638:20:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7629:5:16"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"6888:4:16","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6894:8:16","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6907:5:16","type":""}],"src":"6858:806:16"},{"body":{"nodeType":"YulBlock","src":"7737:72:16","statements":[{"nodeType":"YulAssignment","src":"7747:56:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7777:4:16"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7787:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"7797:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7783:3:16"},"nodeType":"YulFunctionCall","src":"7783:19:16"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"7756:20:16"},"nodeType":"YulFunctionCall","src":"7756:47:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7747:5:16"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"7708:4:16","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"7714:8:16","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"7727:5:16","type":""}],"src":"7669:140:16"},{"body":{"nodeType":"YulBlock","src":"7866:116:16","statements":[{"nodeType":"YulAssignment","src":"7876:20:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7891:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"7894:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7887:3:16"},"nodeType":"YulFunctionCall","src":"7887:9:16"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"7876:7:16"}]},{"body":{"nodeType":"YulBlock","src":"7954:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7956:16:16"},"nodeType":"YulFunctionCall","src":"7956:18:16"},"nodeType":"YulExpressionStatement","src":"7956:18:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7925:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7918:6:16"},"nodeType":"YulFunctionCall","src":"7918:9:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7932:1:16"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"7939:7:16"},{"name":"x","nodeType":"YulIdentifier","src":"7948:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7935:3:16"},"nodeType":"YulFunctionCall","src":"7935:15:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7929:2:16"},"nodeType":"YulFunctionCall","src":"7929:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7915:2:16"},"nodeType":"YulFunctionCall","src":"7915:37:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7908:6:16"},"nodeType":"YulFunctionCall","src":"7908:45:16"},"nodeType":"YulIf","src":"7905:71:16"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7845:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"7848:1:16","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"7854:7:16","type":""}],"src":"7814:168:16"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let _1 := 32\n        value1 := abi_decode_address_fromMemory(add(headStart, _1))\n        let offset := mload(add(headStart, 64))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value2 := memPtr\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid NFT contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7da84f3a1c9f163c91d06a811fbdd86f5cfb6057a97fe7a83411f17c926ea263__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid token contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67900602c4c4a6a28389c91f7c020f4bdf4429a39649ceb1958d4005df760c74__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Song name cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid admin address\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101206040526007805460ff60a81b1916600160a81b1790553480156200002557600080fd5b5060405162002c7338038062002c738339810160408190526200004891620003ad565b33806200007057604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200007b816200032a565b50600180556001600160a01b038416620000d85760405162461bcd60e51b815260206004820152601460248201527f496e76616c6964204e465420636f6e7472616374000000000000000000000000604482015260640162000067565b6001600160a01b038316620001305760405162461bcd60e51b815260206004820152601660248201527f496e76616c696420746f6b656e20636f6e747261637400000000000000000000604482015260640162000067565b6000825111620001835760405162461bcd60e51b815260206004820152601960248201527f536f6e67206e616d652063616e6e6f7420626520656d70747900000000000000604482015260640162000067565b6001600160a01b038116620001db5760405162461bcd60e51b815260206004820152601560248201527f496e76616c69642061646d696e20616464726573730000000000000000000000604482015260640162000067565b6001600160a01b03808516608052831660a0526002620001fc838262000549565b5080600760016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a0516001600160a01b031663adee8ff26040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000265573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028b919062000615565b60c08181525050826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f791906200062f565b60ff1660e08190526200030c90600a62000770565b60c0516200031b919062000781565b61010052506200079b92505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200039257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215620003c457600080fd5b620003cf856200037a565b93506020620003e08187016200037a565b60408701519094506001600160401b0380821115620003fe57600080fd5b818801915088601f8301126200041357600080fd5b81518181111562000428576200042862000397565b604051601f8201601f19908116603f0116810190838211818310171562000453576200045362000397565b816040528281528b868487010111156200046c57600080fd5b600093505b8284101562000490578484018601518185018701529285019262000471565b6000868483010152809750505050505050620004af606086016200037a565b905092959194509250565b600181811c90821680620004cf57607f821691505b602082108103620004f057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200054457600081815260208120601f850160051c810160208610156200051f5750805b601f850160051c820191505b8181101562000540578281556001016200052b565b5050505b505050565b81516001600160401b0381111562000565576200056562000397565b6200057d81620005768454620004ba565b84620004f6565b602080601f831160018114620005b557600084156200059c5750858301515b600019600386901b1c1916600185901b17855562000540565b600085815260208120601f198616915b82811015620005e657888601518255948401946001909101908401620005c5565b5085821015620006055787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200062857600080fd5b5051919050565b6000602082840312156200064257600080fd5b815160ff811681146200065457600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620006b25781600019048211156200069657620006966200065b565b80851615620006a457918102915b93841c939080029062000676565b509250929050565b600082620006cb575060016200076a565b81620006da575060006200076a565b8160018114620006f35760028114620006fe576200071e565b60019150506200076a565b60ff8411156200071257620007126200065b565b50506001821b6200076a565b5060208310610133831016604e8410600b841016171562000743575081810a6200076a565b6200074f838362000671565b80600019048211156200076657620007666200065b565b0290505b92915050565b60006200065460ff841683620006ba565b80820281158282048414176200076a576200076a6200065b565b60805160a05160c05160e051610100516123c8620008ab60003960008181610428015281816107fc01528181610961015281816111c70152818161123a015281816112fc015281816115fd015281816118f801528181611a1901528181611a7f0152611aa8015260006102ea0152600061044f0152600081816102ab015281816106c00152818161094001528181610b4f0152818161138c0152611a5c015260008181610492015281816106000152818161074b0152818161091f01528181610c9901528181610df101528181610fb7015281816110390152818161146b0152818161152c015281816117ef0152818161197f01528181611be801528181611c6a0152611d3b01526123c86000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063922b807911610104578063b1e776e3116100a2578063e01af92c11610071578063e01af92c146104c7578063e91a7ca6146104da578063f2fde38b146104ed578063f851a4401461050057600080fd5b8063b1e776e314610471578063bbffa2d314610484578063d56d229d1461048d578063dd49756e146104b457600080fd5b80639e1a4d19116100de5780639e1a4d19146103e3578063a59aa5a6146103ec578063a98d499414610423578063adee8ff21461044a57600080fd5b8063922b80791461039b57806396cd06f8146103ae578063978cd40f146103c357600080fd5b80635b7f415c1161017c5780637304fa201161014b5780637304fa201461034d5780637f98aa711461035a5780638da5cb5b14610377578063917bb9981461038857600080fd5b80635b7f415c146102e55780636ddd17131461031e578063704b6c0214610332578063715018a61461034557600080fd5b8063150b7a02116101b8578063150b7a02146102435780632a33d6b21461027b578063505860881461028357806355a373d6146102a657600080fd5b8063029a3c5f146101df578063035dd06d146101f45780630af2c6ca1461022c575b600080fd5b6101f26101ed366004611f1c565b610518565b005b610217610202366004611f97565b60009081526003602052604090205460ff1690565b60405190151581526020015b60405180910390f35b61023560045481565b604051908152602001610223565b610262610251366004611fc5565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610223565b610235610746565b610217610291366004611f97565b60036020526000908152604090205460ff1681565b6102cd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610223565b61030c7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610223565b60075461021790600160a81b900460ff1681565b6101f2610340366004612064565b610849565b6101f26108f9565b6007546102179060ff1681565b61036261090d565b604051610223999897969594939291906120ce565b6000546001600160a01b03166102cd565b6101f261039636600461212f565b610a4a565b6101f26103a936600461212f565b610b7a565b6103b6610d08565b604051610223919061215b565b6103d66103d1366004611f97565b610d96565b604051610223919061216e565b61023560055481565b6103f4610f8e565b6040805196875260208701959095529385019290925215156060840152608083015260a082015260c001610223565b6102357f000000000000000000000000000000000000000000000000000000000000000081565b6102357f000000000000000000000000000000000000000000000000000000000000000081565b6101f261047f366004611f97565b6110cc565b61023560065481565b6102cd7f000000000000000000000000000000000000000000000000000000000000000081565b6101f26104c2366004611f97565b61116d565b6101f26104d53660046121c0565b6116db565b6101f26104e8366004611f97565b611777565b6101f26104fb366004612064565b611b3d565b6007546102cd9061010090046001600160a01b031681565b60075461010090046001600160a01b031633148061054057506000546001600160a01b031633145b6105655760405162461bcd60e51b815260040161055c906121dd565b60405180910390fd5b60005b828110156106ac5760008484838181106105845761058461220b565b60209081029290920135600081815260039093526040909220549192505060ff16156105e95760405162461bcd60e51b815260206004820152601460248201527313919508185b1c9958591e481a5b881d985d5b1d60621b604482015260640161055c565b604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e9061063990339030908690600401612221565b600060405180830381600087803b15801561065357600080fd5b505af1158015610667573d6000803e3d6000fd5b5050506000828152600360205260408120805460ff19166001179055600480549250906106938361225b565b91905055505080806106a49061225b565b915050610568565b508015610700576106e86001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611b78565b80600560008282546106fa9190612274565b90915550505b60408051838152602081018390527f0aaa76c8a42ec2b6c80e857ced5306e0fe0a1e94eb891a653c2aec9bced6bb84910160405180910390a1610741611bd8565b505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2309ff86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cb9190612287565b9050806000036107dd57600091505090565b60075460ff161561083b576004546000036107fa57600091505090565b7f000000000000000000000000000000000000000000000000000000000000000060045460055461082b91906122b6565b61083591906122b6565b91505090565b8060065461083591906122b6565b610851611dbe565b6001600160a01b03811661089f5760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b604482015260640161055c565b600780546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f101b8081ff3b56bbf45deb824d86a3b0fd38b7e3dd42421105cf8abe9106db0b90600090a35050565b610901611dbe565b61090b6000611deb565b565b606060008060008060008060008060027f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060045460055461098e610746565b600754875460ff80831692600160a81b9004169089906109ad906122ca565b80601f01602080910402602001604051908101604052809291908181526020018280546109d9906122ca565b8015610a265780601f106109fb57610100808354040283529160200191610a26565b820191906000526020600020905b815481529060010190602001808311610a0957829003601f168201915b50505050509850985098509850985098509850985098509850909192939495969798565b60075461010090046001600160a01b0316331480610a7257506000546001600160a01b031633145b610a8e5760405162461bcd60e51b815260040161055c906121dd565b6001600160a01b038216610ad85760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b604482015260640161055c565b600554811115610b2a5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e6365000000000000604482015260640161055c565b8060056000828254610b3c9190612304565b90915550610b7690506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168383611e3b565b5050565b60075461010090046001600160a01b0316331480610ba257506000546001600160a01b031633145b610bbe5760405162461bcd60e51b815260040161055c906121dd565b6001600160a01b038216610c085760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b604482015260640161055c565b60008181526003602052604090205460ff16610c595760405162461bcd60e51b815260206004820152601060248201526f139195081b9bdd081a5b881d985d5b1d60821b604482015260640161055c565b6000818152600360205260408120805460ff191690556004805491610c7d83612317565b9091555050604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90610cd290309086908690600401612221565b600060405180830381600087803b158015610cec57600080fd5b505af1158015610d00573d6000803e3d6000fd5b505050505050565b60028054610d15906122ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610d41906122ca565b8015610d8e5780601f10610d6357610100808354040283529160200191610d8e565b820191906000526020600020905b815481529060010190602001808311610d7157829003601f168201915b505050505081565b60606000610da660045484611e6c565b67ffffffffffffffff811115610dbe57610dbe61232e565b604051908082528060200260200182016040528015610de7578160200160208202803683370190505b509050600060015b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332cb6b0c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e719190612287565b8111158015610e7f57508482105b15610ed95760008181526003602052604090205460ff1615610ec75780838381518110610eae57610eae61220b565b602090810291909101015281610ec38161225b565b9250505b80610ed18161225b565b915050610def565b508151811015610f875760008167ffffffffffffffff811115610efe57610efe61232e565b604051908082528060200260200182016040528015610f27578160200160208202803683370190505b50905060005b82811015610f7e57838181518110610f4757610f4761220b565b6020026020010151828281518110610f6157610f6161220b565b602090810291909101015280610f768161225b565b915050610f2d565b50949350505050565b5092915050565b600080600080600080600454600554610fa5610746565b600760009054906101000a900460ff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2309ff86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611013573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110379190612287565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332cb6b0c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b99190612287565b949b939a50919850965094509092509050565b60075461010090046001600160a01b03163314806110f457506000546001600160a01b031633145b6111105760405162461bcd60e51b815260040161055c906121dd565b80600660008282546111229190612274565b909155507f41c5e8c55061532e874271e77c72be737c2b190be0b0da85c4b6248689eac53a9050611151610746565b60405190815260200160405180910390a161116a611bd8565b50565b611175611e81565b600754600160a81b900460ff166111c55760405162461bcd60e51b815260206004820152601460248201527314ddd85c1c1a5b99c81a5cc8191a5cd8589b195960621b604482015260640161055c565b7f00000000000000000000000000000000000000000000000000000000000000008110156112355760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420746f6b656e20616d6f756e7400000000000000604482015260640161055c565b61125f7f000000000000000000000000000000000000000000000000000000000000000082612344565b156112a35760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b604482015260640161055c565b6000600454116112f55760405162461bcd60e51b815260206004820152601a60248201527f4e6f204e46547320617661696c61626c6520696e207661756c74000000000000604482015260640161055c565b60006113217f0000000000000000000000000000000000000000000000000000000000000000836122b6565b90506004548111156113755760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f756768204e46547320696e207661756c740000000000000000604482015260640161055c565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906113c590339030908790600401612221565b6020604051808303816000875af11580156113e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114089190612358565b61144c5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161055c565b816005600082825461145e9190612274565b909155506000905060015b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332cb6b0c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114eb9190612287565b81111580156114f957508282105b156116465760008181526003602052604090205460ff161561163457604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e9061156590309033908690600401612221565b600060405180830381600087803b15801561157f57600080fd5b505af1158015611593573d6000803e3d6000fd5b5050506000828152600360205260408120805460ff19169055600480549250906115bc83612317565b919050555081806115cc9061225b565b92505080336001600160a01b03167f0a08eebabec640fe759f6e5d61d6377cfe1f1367ae220b5f81a44a7b74c9be347f000000000000000000000000000000000000000000000000000000000000000060405161162b91815260200190565b60405180910390a35b8061163e8161225b565b915050611469565b508181146116965760405162461bcd60e51b815260206004820152601b60248201527f4661696c656420746f207472616e7366657220616c6c204e4654730000000000604482015260640161055c565b7f41c5e8c55061532e874271e77c72be737c2b190be0b0da85c4b6248689eac53a6116bf610746565b60405190815260200160405180910390a1505061116a60018055565b60075461010090046001600160a01b031633148061170357506000546001600160a01b031633145b61171f5760405162461bcd60e51b815260040161055c906121dd565b60078054821515600160a81b0260ff60a81b199091161790556040517fd101cbf49d2d7d396082a0e64b8dcc4e0b2a280bdccc3855f1d1fe8cf9d0f0e29061176c90831515815260200190565b60405180910390a150565b61177f611e81565b600754600160a81b900460ff166117cf5760405162461bcd60e51b815260206004820152601460248201527314ddd85c1c1a5b99c81a5cc8191a5cd8589b195960621b604482015260640161055c565b6040516331a9108f60e11b81526004810182905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015611836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185a9190612375565b6001600160a01b0316146118a05760405162461bcd60e51b815260206004820152600d60248201526c2737ba1027232a1037bbb732b960991b604482015260640161055c565b60008181526003602052604090205460ff16156118f65760405162461bcd60e51b815260206004820152601460248201527313919508185b1c9958591e481a5b881d985d5b1d60621b604482015260640161055c565b7f000000000000000000000000000000000000000000000000000000000000000060055410156119685760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e7320696e207661756c7400000000604482015260640161055c565b604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e906119b890339030908690600401612221565b600060405180830381600087803b1580156119d257600080fd5b505af11580156119e6573d6000803e3d6000fd5b5050506000828152600360205260408120805460ff1916600117905560048054925090611a128361225b565b91905055507f000000000000000000000000000000000000000000000000000000000000000060056000828254611a499190612304565b90915550611aa390506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f0000000000000000000000000000000000000000000000000000000000000000611e3b565b6040517f00000000000000000000000000000000000000000000000000000000000000008152819033907f494c78ec0278e768f6779f083e8c6b4691758074367b4e7c6355aa772ed6d7049060200160405180910390a37f41c5e8c55061532e874271e77c72be737c2b190be0b0da85c4b6248689eac53a611b23610746565b60405190815260200160405180910390a161116a60018055565b611b45611dbe565b6001600160a01b038116611b6f57604051631e4fbdf760e01b81526000600482015260240161055c565b61116a81611deb565b611bd284856001600160a01b03166323b872dd868686604051602401611ba093929190612221565b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611eab565b50505050565b60075460ff16158015611ced57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332cb6b0c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c689190612287565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2309ff86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cea9190612287565b10155b1561090b576007805460ff191660011790556040805163144613ff60e31b815290517f2f32e519b30d0f52c856843502cc5b899f08f78da6adc87ddedb8d70c7365b1f916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163a2309ff8916004808201926020929091908290030181865afa158015611d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dab9190612287565b60405190815260200160405180910390a1565b6000546001600160a01b0316331461090b5760405163118cdaa760e01b815233600482015260240161055c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0383811660248301526044820183905261074191859182169063a9059cbb90606401611ba0565b60008282188284100282185b90505b92915050565b600260015403611ea457604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b600080602060008451602086016000885af180611ece576040513d6000823e3d81fd5b50506000513d91508115611ee6578060011415611ef3565b6001600160a01b0384163b155b15611bd257604051635274afe760e01b81526001600160a01b038516600482015260240161055c565b600080600060408486031215611f3157600080fd5b833567ffffffffffffffff80821115611f4957600080fd5b818601915086601f830112611f5d57600080fd5b813581811115611f6c57600080fd5b8760208260051b8501011115611f8157600080fd5b6020928301989097509590910135949350505050565b600060208284031215611fa957600080fd5b5035919050565b6001600160a01b038116811461116a57600080fd5b600080600080600060808688031215611fdd57600080fd5b8535611fe881611fb0565b94506020860135611ff881611fb0565b935060408601359250606086013567ffffffffffffffff8082111561201c57600080fd5b818801915088601f83011261203057600080fd5b81358181111561203f57600080fd5b89602082850101111561205157600080fd5b9699959850939650602001949392505050565b60006020828403121561207657600080fd5b813561208181611fb0565b9392505050565b6000815180845260005b818110156120ae57602081850181015186830182015201612092565b506000602082860101526020601f19601f83011685010191505092915050565b60006101208083526120e28184018d612088565b6001600160a01b039b8c16602085015299909a166040830152506060810196909652608086019490945260a085019290925260c0840152151560e083015215156101009091015292915050565b6000806040838503121561214257600080fd5b823561214d81611fb0565b946020939093013593505050565b602081526000611e786020830184612088565b6020808252825182820181905260009190848201906040850190845b818110156121a65783518352928401929184019160010161218a565b50909695505050505050565b801515811461116a57600080fd5b6000602082840312156121d257600080fd5b8135612081816121b2565b6020808252601490820152732737ba1030baba3437b934bd32b21030b236b4b760611b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b60006001820161226d5761226d612245565b5060010190565b80820180821115611e7b57611e7b612245565b60006020828403121561229957600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b6000826122c5576122c56122a0565b500490565b600181811c908216806122de57607f821691505b6020821081036122fe57634e487b7160e01b600052602260045260246000fd5b50919050565b81810381811115611e7b57611e7b612245565b60008161232657612326612245565b506000190190565b634e487b7160e01b600052604160045260246000fd5b600082612353576123536122a0565b500690565b60006020828403121561236a57600080fd5b8151612081816121b2565b60006020828403121561238757600080fd5b815161208181611fb056fea264697066735822122030a05a3147a9f145ba8ad437cfb1597813bd43ea197a1cafedb34d17a754836764736f6c63430008140033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2C73 CODESIZE SUB DUP1 PUSH3 0x2C73 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x48 SWAP2 PUSH3 0x3AD JUMP JUMPDEST CALLER DUP1 PUSH3 0x70 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x7B DUP2 PUSH3 0x32A JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0xD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204E465420636F6E7472616374000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20636F6E747261637400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x67 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH3 0x183 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F6E67206E616D652063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x1DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642061646D696E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x80 MSTORE DUP4 AND PUSH1 0xA0 MSTORE PUSH1 0x2 PUSH3 0x1FC DUP4 DUP3 PUSH3 0x549 JUMP JUMPDEST POP DUP1 PUSH1 0x7 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xADEE8FF2 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x265 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x28B SWAP2 SWAP1 PUSH3 0x615 JUMP JUMPDEST PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2F7 SWAP2 SWAP1 PUSH3 0x62F JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xE0 DUP2 SWAP1 MSTORE PUSH3 0x30C SWAP1 PUSH1 0xA PUSH3 0x770 JUMP JUMPDEST PUSH1 0xC0 MLOAD PUSH3 0x31B SWAP2 SWAP1 PUSH3 0x781 JUMP JUMPDEST PUSH2 0x100 MSTORE POP PUSH3 0x79B SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3CF DUP6 PUSH3 0x37A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH3 0x3E0 DUP2 DUP8 ADD PUSH3 0x37A JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x428 JUMPI PUSH3 0x428 PUSH3 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x453 JUMPI PUSH3 0x453 PUSH3 0x397 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP12 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x490 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x471 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP POP POP POP PUSH3 0x4AF PUSH1 0x60 DUP7 ADD PUSH3 0x37A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x4CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x544 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x51F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x540 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x52B JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x565 JUMPI PUSH3 0x565 PUSH3 0x397 JUMP JUMPDEST PUSH3 0x57D DUP2 PUSH3 0x576 DUP5 SLOAD PUSH3 0x4BA JUMP JUMPDEST DUP5 PUSH3 0x4F6 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5B5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x59C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x540 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5E6 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x5C5 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x605 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x6B2 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x696 JUMPI PUSH3 0x696 PUSH3 0x65B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x6A4 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x676 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x6CB JUMPI POP PUSH1 0x1 PUSH3 0x76A JUMP JUMPDEST DUP2 PUSH3 0x6DA JUMPI POP PUSH1 0x0 PUSH3 0x76A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x6F3 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x6FE JUMPI PUSH3 0x71E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x76A JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x712 JUMPI PUSH3 0x712 PUSH3 0x65B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x76A JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x743 JUMPI POP DUP2 DUP2 EXP PUSH3 0x76A JUMP JUMPDEST PUSH3 0x74F DUP4 DUP4 PUSH3 0x671 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x766 JUMPI PUSH3 0x766 PUSH3 0x65B JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x654 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x6BA JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x76A JUMPI PUSH3 0x76A PUSH3 0x65B JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x23C8 PUSH3 0x8AB PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x428 ADD MSTORE DUP2 DUP2 PUSH2 0x7FC ADD MSTORE DUP2 DUP2 PUSH2 0x961 ADD MSTORE DUP2 DUP2 PUSH2 0x11C7 ADD MSTORE DUP2 DUP2 PUSH2 0x123A ADD MSTORE DUP2 DUP2 PUSH2 0x12FC ADD MSTORE DUP2 DUP2 PUSH2 0x15FD ADD MSTORE DUP2 DUP2 PUSH2 0x18F8 ADD MSTORE DUP2 DUP2 PUSH2 0x1A19 ADD MSTORE DUP2 DUP2 PUSH2 0x1A7F ADD MSTORE PUSH2 0x1AA8 ADD MSTORE PUSH1 0x0 PUSH2 0x2EA ADD MSTORE PUSH1 0x0 PUSH2 0x44F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2AB ADD MSTORE DUP2 DUP2 PUSH2 0x6C0 ADD MSTORE DUP2 DUP2 PUSH2 0x940 ADD MSTORE DUP2 DUP2 PUSH2 0xB4F ADD MSTORE DUP2 DUP2 PUSH2 0x138C ADD MSTORE PUSH2 0x1A5C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x492 ADD MSTORE DUP2 DUP2 PUSH2 0x600 ADD MSTORE DUP2 DUP2 PUSH2 0x74B ADD MSTORE DUP2 DUP2 PUSH2 0x91F ADD MSTORE DUP2 DUP2 PUSH2 0xC99 ADD MSTORE DUP2 DUP2 PUSH2 0xDF1 ADD MSTORE DUP2 DUP2 PUSH2 0xFB7 ADD MSTORE DUP2 DUP2 PUSH2 0x1039 ADD MSTORE DUP2 DUP2 PUSH2 0x146B ADD MSTORE DUP2 DUP2 PUSH2 0x152C ADD MSTORE DUP2 DUP2 PUSH2 0x17EF ADD MSTORE DUP2 DUP2 PUSH2 0x197F ADD MSTORE DUP2 DUP2 PUSH2 0x1BE8 ADD MSTORE DUP2 DUP2 PUSH2 0x1C6A ADD MSTORE PUSH2 0x1D3B ADD MSTORE PUSH2 0x23C8 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x922B8079 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB1E776E3 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE01AF92C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE01AF92C EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xE91A7CA6 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1E776E3 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0xBBFFA2D3 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E1A4D19 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9E1A4D19 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xA59AA5A6 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xA98D4994 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xADEE8FF2 EQ PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x922B8079 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x96CD06F8 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x978CD40F EQ PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5B7F415C GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x7304FA20 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x7304FA20 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x7F98AA71 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x917BB998 EQ PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5B7F415C EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x6DDD1713 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x2A33D6B2 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x50586088 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29A3C5F EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x35DD06D EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xAF2C6CA EQ PUSH2 0x22C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x223 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC5 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x223 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x217 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2CD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x223 JUMP JUMPDEST PUSH2 0x30C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x217 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x217 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x212F JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x212F JUMP JUMPDEST PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x3B6 PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x215B JUMP JUMPDEST PUSH2 0x3D6 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x216E JUMP JUMPDEST PUSH2 0x235 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F4 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x223 JUMP JUMPDEST PUSH2 0x235 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x235 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2CD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x4C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0x116D JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x4D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C0 JUMP JUMPDEST PUSH2 0x16DB JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x4FB CALLDATASIZE PUSH1 0x4 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2CD SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x540 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x584 JUMPI PUSH2 0x584 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13919508185B1C9958591E481A5B881D985D5B1D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x639 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x667 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 POP SWAP1 PUSH2 0x693 DUP4 PUSH2 0x225B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP DUP1 DUP1 PUSH2 0x6A4 SWAP1 PUSH2 0x225B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x568 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x700 JUMPI PUSH2 0x6E8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x1B78 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x2274 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xAAA76C8A42EC2B6C80E857CED5306E0FE0A1E94EB891A653C2AEC9BCED6BB84 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x741 PUSH2 0x1BD8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA2309FF8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x7DD JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x83B JUMPI PUSH1 0x4 SLOAD PUSH1 0x0 SUB PUSH2 0x7FA JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x851 PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x101B8081FF3B56BBF45DEB824D86A3B0FD38B7E3DD42421105CF8ABE9106DB0B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x901 PUSH2 0x1DBE JUMP JUMPDEST PUSH2 0x90B PUSH1 0x0 PUSH2 0x1DEB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x98E PUSH2 0x746 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP8 SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV AND SWAP1 DUP10 SWAP1 PUSH2 0x9AD SWAP1 PUSH2 0x22CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D9 SWAP1 PUSH2 0x22CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xA72 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT ISZERO PUSH2 0xB2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x2304 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB76 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x1E3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xBA2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139195081B9BDD081A5B881D985D5B1D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP2 PUSH2 0xC7D DUP4 PUSH2 0x2317 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0xCD2 SWAP1 ADDRESS SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xD15 SWAP1 PUSH2 0x22CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD41 SWAP1 PUSH2 0x22CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD8E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD63 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD8E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD71 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xDA6 PUSH1 0x4 SLOAD DUP5 PUSH2 0x1E6C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDBE JUMPI PUSH2 0xDBE PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDE7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32CB6B0C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE71 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xE7F JUMPI POP DUP5 DUP3 LT JUMPDEST ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEC7 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xEAE JUMPI PUSH2 0xEAE PUSH2 0x220B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0xEC3 DUP2 PUSH2 0x225B JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0xED1 DUP2 PUSH2 0x225B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDEF JUMP JUMPDEST POP DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xF87 JUMPI PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFE PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF27 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF7E JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xF47 JUMPI PUSH2 0xF47 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF61 JUMPI PUSH2 0xF61 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xF76 DUP2 PUSH2 0x225B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF2D JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0xFA5 PUSH2 0x746 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA2309FF8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1013 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32CB6B0C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1095 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST SWAP5 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x10F4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x21DD JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1122 SWAP2 SWAP1 PUSH2 0x2274 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH32 0x41C5E8C55061532E874271E77C72BE737C2B190BE0B0DA85C4B6248689EAC53A SWAP1 POP PUSH2 0x1151 PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x116A PUSH2 0x1BD8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1175 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DDD85C1C1A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x1235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E20616D6F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH2 0x125F PUSH32 0x0 DUP3 PUSH2 0x2344 JUMP JUMPDEST ISZERO PUSH2 0x12A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081D1BDAD95B88185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F204E46547320617661696C61626C6520696E207661756C74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1321 PUSH32 0x0 DUP4 PUSH2 0x22B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768204E46547320696E207661756C740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x13C5 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1408 SWAP2 SWAP1 PUSH2 0x2358 JUMP JUMPDEST PUSH2 0x144C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x2274 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x1 JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32CB6B0C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14EB SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x14F9 JUMPI POP DUP3 DUP3 LT JUMPDEST ISZERO PUSH2 0x1646 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1634 JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x1565 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x157F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1593 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 POP SWAP1 PUSH2 0x15BC DUP4 PUSH2 0x2317 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 DUP1 PUSH2 0x15CC SWAP1 PUSH2 0x225B JUMP JUMPDEST SWAP3 POP POP DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA08EEBABEC640FE759F6E5D61D6377CFE1F1367AE220B5F81A44A7B74C9BE34 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0x162B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP1 PUSH2 0x163E DUP2 PUSH2 0x225B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1469 JUMP JUMPDEST POP DUP2 DUP2 EQ PUSH2 0x1696 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207472616E7366657220616C6C204E4654730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH32 0x41C5E8C55061532E874271E77C72BE737C2B190BE0B0DA85C4B6248689EAC53A PUSH2 0x16BF PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x116A PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1703 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x171F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD101CBF49D2D7D396082A0E64B8DCC4E0B2A280BDCCC3855F1D1FE8CF9D0F0E2 SWAP1 PUSH2 0x176C SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x177F PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x17CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DDD85C1C1A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1836 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x185A SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x18A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA1027232A1037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13919508185B1C9958591E481A5B881D985D5B1D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD LT ISZERO PUSH2 0x1968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E7320696E207661756C7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x19B8 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 POP SWAP1 PUSH2 0x1A12 DUP4 PUSH2 0x225B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x0 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A49 SWAP2 SWAP1 PUSH2 0x2304 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1AA3 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER PUSH32 0x0 PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE DUP2 SWAP1 CALLER SWAP1 PUSH32 0x494C78EC0278E768F6779F083E8C6B4691758074367B4E7C6355AA772ED6D704 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x41C5E8C55061532E874271E77C72BE737C2B190BE0B0DA85C4B6248689EAC53A PUSH2 0x1B23 PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x116A PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x1B45 PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55C JUMP JUMPDEST PUSH2 0x116A DUP2 PUSH2 0x1DEB JUMP JUMPDEST PUSH2 0x1BD2 DUP5 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1BA0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1CED JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32CB6B0C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C68 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA2309FF8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CEA SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST LT ISZERO JUMPDEST ISZERO PUSH2 0x90B JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x144613FF PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH32 0x2F32E519B30D0F52C856843502CC5B899F08F78DA6ADC87DDEDB8D70C7365B1F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0xA2309FF8 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DAB SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x741 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x1BA0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 XOR DUP3 DUP5 LT MUL DUP3 XOR JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1EA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1ECE JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x1EE6 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1EF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1BD2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1F6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1F81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1FE8 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1FF8 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x201C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x203F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2081 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20AE JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2092 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 MSTORE PUSH2 0x20E2 DUP2 DUP5 ADD DUP14 PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP10 SWAP1 SWAP11 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x214D DUP2 PUSH2 0x1FB0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E78 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21A6 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x218A JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2081 DUP2 PUSH2 0x21B2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2737BA1030BABA3437B934BD32B21030B236B4B7 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x226D JUMPI PUSH2 0x226D PUSH2 0x2245 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1E7B JUMPI PUSH2 0x1E7B PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22C5 JUMPI PUSH2 0x22C5 PUSH2 0x22A0 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x22DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1E7B JUMPI PUSH2 0x1E7B PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2326 JUMPI PUSH2 0x2326 PUSH2 0x2245 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2353 JUMPI PUSH2 0x2353 PUSH2 0x22A0 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x236A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2081 DUP2 PUSH2 0x21B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2081 DUP2 PUSH2 0x1FB0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS LOG0 GAS BALANCE SELFBALANCE 0xA9 CALL GASLIMIT 0xBA DUP11 0xD4 CALLDATACOPY 0xCF 0xB1 MSIZE PUSH25 0x13BD43EA197A1CAFEDB34D17A754836764736F6C6343000814 STOP CALLER ","sourceMap":"1481:11964:15:-:0;;;2403:30;;;-1:-1:-1;;;;2403:30:15;-1:-1:-1;;;2403:30:15;;;3407:860;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3552:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;1777:51:16;1750:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:11;2061:21;;-1:-1:-1;;;;;3582:26:15;::::1;3574:59;;;::::0;-1:-1:-1;;;3574:59:15;;2041:2:16;3574:59:15::1;::::0;::::1;2023:21:16::0;2080:2;2060:18;;;2053:30;2119:22;2099:18;;;2092:50;2159:18;;3574:59:15::1;1839:344:16::0;3574:59:15::1;-1:-1:-1::0;;;;;3651:28:15;::::1;3643:63;;;::::0;-1:-1:-1;;;3643:63:15;;2390:2:16;3643:63:15::1;::::0;::::1;2372:21:16::0;2429:2;2409:18;;;2402:30;2468:24;2448:18;;;2441:52;2510:18;;3643:63:15::1;2188:346:16::0;3643:63:15::1;3750:1;3730:9;3724:23;:27;3716:65;;;::::0;-1:-1:-1;;;3716:65:15;;2741:2:16;3716:65:15::1;::::0;::::1;2723:21:16::0;2780:2;2760:18;;;2753:30;2819:27;2799:18;;;2792:55;2864:18;;3716:65:15::1;2539:349:16::0;3716:65:15::1;-1:-1:-1::0;;;;;3799:20:15;::::1;3791:54;;;::::0;-1:-1:-1;;;3791:54:15;;3095:2:16;3791:54:15::1;::::0;::::1;3077:21:16::0;3134:2;3114:18;;;3107:30;3173:23;3153:18;;;3146:51;3214:18;;3791:54:15::1;2893:345:16::0;3791:54:15::1;-1:-1:-1::0;;;;;3856:38:15;;::::1;;::::0;3904:44;::::1;;::::0;3958:8:::1;:20;3969:9:::0;3958:8;:20:::1;:::i;:::-;;3996:6;3988:5;;:14;;;;;-1:-1:-1::0;;;;;3988:14:15::1;;;;;-1:-1:-1::0;;;;;3988:14:15::1;;;;;;4090:13;;-1:-1:-1::0;;;;;4090:28:15::1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4073:47;;;;::::0;::::1;4162:14;-1:-1:-1::0;;;;;4147:39:15::1;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4130:58;;;::::0;;;4239:20:::1;::::0;:2:::1;:20;:::i;:::-;4221:14;;:39;;;;:::i;:::-;4198:62;::::0;-1:-1:-1;1481:11964:15;;-1:-1:-1;;;1481:11964:15;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:16:-;93:13;;-1:-1:-1;;;;;135:31:16;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1298;435:6;443;451;459;512:3;500:9;491:7;487:23;483:33;480:53;;;529:1;526;519:12;480:53;552:40;582:9;552:40;:::i;:::-;542:50;;611:2;632:49;677:2;666:9;662:18;632:49;:::i;:::-;725:2;710:18;;704:25;622:59;;-1:-1:-1;;;;;;778:14:16;;;775:34;;;805:1;802;795:12;775:34;843:6;832:9;828:22;818:32;;888:7;881:4;877:2;873:13;869:27;859:55;;910:1;907;900:12;859:55;939:2;933:9;961:2;957;954:10;951:36;;;967:18;;:::i;:::-;1042:2;1036:9;1010:2;1096:13;;-1:-1:-1;;1092:22:16;;;1116:2;1088:31;1084:40;1072:53;;;1140:18;;;1160:22;;;1137:46;1134:72;;;1186:18;;:::i;:::-;1226:10;1222:2;1215:22;1261:2;1253:6;1246:18;1301:7;1296:2;1291;1287;1283:11;1279:20;1276:33;1273:53;;;1322:1;1319;1312:12;1273:53;1344:1;1335:10;;1354:129;1368:2;1365:1;1362:9;1354:129;;;1456:10;;;1452:19;;1446:26;1425:14;;;1421:23;;1414:59;1379:10;;;;1354:129;;;1525:1;1520:2;1515;1507:6;1503:15;1499:24;1492:35;1546:6;1536:16;;;;;;;;1571:49;1616:2;1605:9;1601:18;1571:49;:::i;:::-;1561:59;;328:1298;;;;;;;:::o;3243:380::-;3322:1;3318:12;;;;3365;;;3386:61;;3440:4;3432:6;3428:17;3418:27;;3386:61;3493:2;3485:6;3482:14;3462:18;3459:38;3456:161;;3539:10;3534:3;3530:20;3527:1;3520:31;3574:4;3571:1;3564:15;3602:4;3599:1;3592:15;3456:161;;3243:380;;;:::o;3754:545::-;3856:2;3851:3;3848:11;3845:448;;;3892:1;3917:5;3913:2;3906:17;3962:4;3958:2;3948:19;4032:2;4020:10;4016:19;4013:1;4009:27;4003:4;3999:38;4068:4;4056:10;4053:20;4050:47;;;-1:-1:-1;4091:4:16;4050:47;4146:2;4141:3;4137:12;4134:1;4130:20;4124:4;4120:31;4110:41;;4201:82;4219:2;4212:5;4209:13;4201:82;;;4264:17;;;4245:1;4234:13;4201:82;;;4205:3;;;3845:448;3754:545;;;:::o;4475:1352::-;4595:10;;-1:-1:-1;;;;;4617:30:16;;4614:56;;;4650:18;;:::i;:::-;4679:97;4769:6;4729:38;4761:4;4755:11;4729:38;:::i;:::-;4723:4;4679:97;:::i;:::-;4831:4;;4895:2;4884:14;;4912:1;4907:663;;;;5614:1;5631:6;5628:89;;;-1:-1:-1;5683:19:16;;;5677:26;5628:89;-1:-1:-1;;4432:1:16;4428:11;;;4424:24;4420:29;4410:40;4456:1;4452:11;;;4407:57;5730:81;;4877:944;;4907:663;3701:1;3694:14;;;3738:4;3725:18;;-1:-1:-1;;4943:20:16;;;5061:236;5075:7;5072:1;5069:14;5061:236;;;5164:19;;;5158:26;5143:42;;5256:27;;;;5224:1;5212:14;;;;5091:19;;5061:236;;;5065:3;5325:6;5316:7;5313:19;5310:201;;;5386:19;;;5380:26;-1:-1:-1;;5469:1:16;5465:14;;;5481:3;5461:24;5457:37;5453:42;5438:58;5423:74;;5310:201;-1:-1:-1;;;;;5557:1:16;5541:14;;;5537:22;5524:36;;-1:-1:-1;4475:1352:16:o;5832:184::-;5902:6;5955:2;5943:9;5934:7;5930:23;5926:32;5923:52;;;5971:1;5968;5961:12;5923:52;-1:-1:-1;5994:16:16;;5832:184;-1:-1:-1;5832:184:16:o;6021:273::-;6089:6;6142:2;6130:9;6121:7;6117:23;6113:32;6110:52;;;6158:1;6155;6148:12;6110:52;6190:9;6184:16;6240:4;6233:5;6229:16;6222:5;6219:27;6209:55;;6260:1;6257;6250:12;6209:55;6283:5;6021:273;-1:-1:-1;;;6021:273:16:o;6299:127::-;6360:10;6355:3;6351:20;6348:1;6341:31;6391:4;6388:1;6381:15;6415:4;6412:1;6405:15;6431:422;6520:1;6563:5;6520:1;6577:270;6598:7;6588:8;6585:21;6577:270;;;6657:4;6653:1;6649:6;6645:17;6639:4;6636:27;6633:53;;;6666:18;;:::i;:::-;6716:7;6706:8;6702:22;6699:55;;;6736:16;;;;6699:55;6815:22;;;;6775:15;;;;6577:270;;;6581:3;6431:422;;;;;:::o;6858:806::-;6907:5;6937:8;6927:80;;-1:-1:-1;6978:1:16;6992:5;;6927:80;7026:4;7016:76;;-1:-1:-1;7063:1:16;7077:5;;7016:76;7108:4;7126:1;7121:59;;;;7194:1;7189:130;;;;7101:218;;7121:59;7151:1;7142:10;;7165:5;;;7189:130;7226:3;7216:8;7213:17;7210:43;;;7233:18;;:::i;:::-;-1:-1:-1;;7289:1:16;7275:16;;7304:5;;7101:218;;7403:2;7393:8;7390:16;7384:3;7378:4;7375:13;7371:36;7365:2;7355:8;7352:16;7347:2;7341:4;7338:12;7334:35;7331:77;7328:159;;;-1:-1:-1;7440:19:16;;;7472:5;;7328:159;7519:34;7544:8;7538:4;7519:34;:::i;:::-;7589:6;7585:1;7581:6;7577:19;7568:7;7565:32;7562:58;;;7600:18;;:::i;:::-;7638:20;;-1:-1:-1;6858:806:16;;;;;:::o;7669:140::-;7727:5;7756:47;7797:4;7787:8;7783:19;7777:4;7756:47;:::i;7814:168::-;7887:9;;;7918;;7935:15;;;7929:22;;7915:37;7905:71;;7956:18;;:::i;7814:168::-;1481:11964:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@TOKENS_PER_NFT_4558":{"entryPoint":null,"id":4558,"parameterSlots":0,"returnSlots":0},"@TOKENS_PER_NFT_UNITS_4562":{"entryPoint":null,"id":4562,"parameterSlots":0,"returnSlots":0},"@TOKEN_DECIMALS_4560":{"entryPoint":null,"id":4560,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_763":{"entryPoint":7851,"id":763,"parameterSlots":2,"returnSlots":0},"@_checkOpenMarketMode_5309":{"entryPoint":7128,"id":5309,"parameterSlots":0,"returnSlots":0},"@_checkOwner_84":{"entryPoint":7614,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_952":{"entryPoint":null,"id":952,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1079":{"entryPoint":null,"id":1079,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1071":{"entryPoint":7809,"id":1071,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":7659,"id":146,"parameterSlots":1,"returnSlots":0},"@admin_4576":{"entryPoint":null,"id":4576,"parameterSlots":0,"returnSlots":0},"@depositNFT_4848":{"entryPoint":6007,"id":4848,"parameterSlots":1,"returnSlots":0},"@depositTokens_4983":{"entryPoint":4461,"id":4983,"parameterSlots":1,"returnSlots":0},"@emergencyWithdrawNFT_5449":{"entryPoint":2938,"id":5449,"parameterSlots":2,"returnSlots":0},"@emergencyWithdrawTokens_5401":{"entryPoint":2634,"id":5401,"parameterSlots":2,"returnSlots":0},"@getFloorPrice_5116":{"entryPoint":1862,"id":5116,"parameterSlots":0,"returnSlots":1},"@getNFTsInVault_5261":{"entryPoint":3478,"id":5261,"parameterSlots":1,"returnSlots":1},"@getVaultInfo_5510":{"entryPoint":2317,"id":5510,"parameterSlots":0,"returnSlots":9},"@getVaultStats_5146":{"entryPoint":3982,"id":5146,"parameterSlots":0,"returnSlots":6},"@isNFTInVault_5159":{"entryPoint":null,"id":5159,"parameterSlots":1,"returnSlots":1},"@min_1430":{"entryPoint":7788,"id":1430,"parameterSlots":2,"returnSlots":1},"@nftContract_4551":{"entryPoint":null,"id":4551,"parameterSlots":0,"returnSlots":0},"@nftCount_4568":{"entryPoint":null,"id":4568,"parameterSlots":0,"returnSlots":0},"@nftHeld_4566":{"entryPoint":null,"id":4566,"parameterSlots":0,"returnSlots":0},"@onERC721Received_5469":{"entryPoint":null,"id":5469,"parameterSlots":5,"returnSlots":1},"@openMarketMode_4574":{"entryPoint":null,"id":4574,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@preloadVault_5077":{"entryPoint":1304,"id":5077,"parameterSlots":3,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":2297,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_413":{"entryPoint":7032,"id":413,"parameterSlots":4,"returnSlots":0},"@safeTransfer_386":{"entryPoint":7739,"id":386,"parameterSlots":3,"returnSlots":0},"@setAdmin_5341":{"entryPoint":2121,"id":5341,"parameterSlots":1,"returnSlots":0},"@setSwapEnabled_5358":{"entryPoint":5851,"id":5358,"parameterSlots":1,"returnSlots":0},"@songName_4556":{"entryPoint":3336,"id":4556,"parameterSlots":0,"returnSlots":0},"@swapEnabled_4579":{"entryPoint":null,"id":4579,"parameterSlots":0,"returnSlots":0},"@ternary_1392":{"entryPoint":null,"id":1392,"parameterSlots":3,"returnSlots":1},"@toUint_4488":{"entryPoint":null,"id":4488,"parameterSlots":1,"returnSlots":1},"@tokenBalance_4570":{"entryPoint":null,"id":4570,"parameterSlots":0,"returnSlots":0},"@tokenContract_4554":{"entryPoint":null,"id":4554,"parameterSlots":0,"returnSlots":0},"@totalMarketCap_4572":{"entryPoint":null,"id":4572,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":6973,"id":126,"parameterSlots":1,"returnSlots":0},"@updateMarketCap_5282":{"entryPoint":4300,"id":5282,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":8292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":9077,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":8133,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8495,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_uint256":{"entryPoint":7964,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool":{"entryPoint":8640,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":9048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8087,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":8328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":8737,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8558,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC222NFT_$4517__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC222Token_$4537__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8539,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":8398,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_stringliteral_047408cc66cd4bce0065fb1dea15e09cef2ca92140d126441538d3699cbe478a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_22b4ff83a89f0ed753d7c94d6a561988cc291cdbc12cc5944f7816bd89d4253e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3fc3731ef9740462983b2951356ca0d33ce8125202f1d23502d5bbbba6300654__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b63528b7ff238c3d3d1fd93178bccfff510ad1c0b4577c21af8789c804e9e371__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8669,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b8cc72502f0093626f62554052e6b81ff0fd1fac2661b2b0b249acbe883a8bb5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_da2386093b42d90c04b4e0b9bfdcee221d41310af41e9f52a16ad6bdac1a7d6c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dac8f8f8cefeef49f92bd194a19eb3d0ca80d6935a78adb3e30c70d8a4b421bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e7816a82000dd88ad42d481d0b9d57e317be6b70a8783407a941115869cbb947__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fbc2e10076f6921a763c3f489052dd0b77e1bb855bd0a8a6901f7fbc1cc7125e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8820,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8886,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8964,"id":null,"parameterSlots":2,"returnSlots":1},"decrement_t_uint256":{"entryPoint":8983,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":8906,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":8795,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":9028,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":8773,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8864,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8715,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9006,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":8112,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":8626,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15643:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"136:567:16","statements":[{"body":{"nodeType":"YulBlock","src":"182:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"191:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"184:6:16"},"nodeType":"YulFunctionCall","src":"184:12:16"},"nodeType":"YulExpressionStatement","src":"184:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"157:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"166:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"153:3:16"},"nodeType":"YulFunctionCall","src":"153:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"178:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"149:3:16"},"nodeType":"YulFunctionCall","src":"149:32:16"},"nodeType":"YulIf","src":"146:52:16"},{"nodeType":"YulVariableDeclaration","src":"207:37:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"234:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"221:12:16"},"nodeType":"YulFunctionCall","src":"221:23:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"211:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"253:28:16","value":{"kind":"number","nodeType":"YulLiteral","src":"263:18:16","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"257:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"308:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"296:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"304:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"293:2:16"},"nodeType":"YulFunctionCall","src":"293:14:16"},"nodeType":"YulIf","src":"290:34:16"},{"nodeType":"YulVariableDeclaration","src":"333:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"347:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"358:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"343:3:16"},"nodeType":"YulFunctionCall","src":"343:22:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"337:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"413:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"422:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"425:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"415:6:16"},"nodeType":"YulFunctionCall","src":"415:12:16"},"nodeType":"YulExpressionStatement","src":"415:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"392:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"396:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"388:3:16"},"nodeType":"YulFunctionCall","src":"388:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"403:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"384:3:16"},"nodeType":"YulFunctionCall","src":"384:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"377:6:16"},"nodeType":"YulFunctionCall","src":"377:35:16"},"nodeType":"YulIf","src":"374:55:16"},{"nodeType":"YulVariableDeclaration","src":"438:30:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"465:2:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"452:12:16"},"nodeType":"YulFunctionCall","src":"452:16:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"442:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"495:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"504:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"507:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"497:6:16"},"nodeType":"YulFunctionCall","src":"497:12:16"},"nodeType":"YulExpressionStatement","src":"497:12:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"483:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"491:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"480:2:16"},"nodeType":"YulFunctionCall","src":"480:14:16"},"nodeType":"YulIf","src":"477:34:16"},{"body":{"nodeType":"YulBlock","src":"571:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"580:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"583:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"573:6:16"},"nodeType":"YulFunctionCall","src":"573:12:16"},"nodeType":"YulExpressionStatement","src":"573:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"534:2:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"542:1:16","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"545:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"538:3:16"},"nodeType":"YulFunctionCall","src":"538:14:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"530:3:16"},"nodeType":"YulFunctionCall","src":"530:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"555:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"526:3:16"},"nodeType":"YulFunctionCall","src":"526:34:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"562:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"523:2:16"},"nodeType":"YulFunctionCall","src":"523:47:16"},"nodeType":"YulIf","src":"520:67:16"},{"nodeType":"YulAssignment","src":"596:23:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"610:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"614:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"606:3:16"},"nodeType":"YulFunctionCall","src":"606:13:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"596:6:16"}]},{"nodeType":"YulAssignment","src":"628:16:16","value":{"name":"length","nodeType":"YulIdentifier","src":"638:6:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"628:6:16"}]},{"nodeType":"YulAssignment","src":"653:44:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"680:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"691:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"676:3:16"},"nodeType":"YulFunctionCall","src":"676:20:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"663:12:16"},"nodeType":"YulFunctionCall","src":"663:34:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"653:6:16"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"86:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"97:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"109:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"117:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"125:6:16","type":""}],"src":"14:689:16"},{"body":{"nodeType":"YulBlock","src":"778:110:16","statements":[{"body":{"nodeType":"YulBlock","src":"824:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"833:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"836:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"826:6:16"},"nodeType":"YulFunctionCall","src":"826:12:16"},"nodeType":"YulExpressionStatement","src":"826:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"799:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"808:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"795:3:16"},"nodeType":"YulFunctionCall","src":"795:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"820:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"791:3:16"},"nodeType":"YulFunctionCall","src":"791:32:16"},"nodeType":"YulIf","src":"788:52:16"},{"nodeType":"YulAssignment","src":"849:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"872:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"859:12:16"},"nodeType":"YulFunctionCall","src":"859:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"849:6:16"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"744:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"755:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"767:6:16","type":""}],"src":"708:180:16"},{"body":{"nodeType":"YulBlock","src":"988:92:16","statements":[{"nodeType":"YulAssignment","src":"998:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1010:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1021:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1006:3:16"},"nodeType":"YulFunctionCall","src":"1006:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"998:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1065:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1058:6:16"},"nodeType":"YulFunctionCall","src":"1058:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1051:6:16"},"nodeType":"YulFunctionCall","src":"1051:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1033:6:16"},"nodeType":"YulFunctionCall","src":"1033:41:16"},"nodeType":"YulExpressionStatement","src":"1033:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"957:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"968:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"979:4:16","type":""}],"src":"893:187:16"},{"body":{"nodeType":"YulBlock","src":"1186:76:16","statements":[{"nodeType":"YulAssignment","src":"1196:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1208:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1219:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1204:3:16"},"nodeType":"YulFunctionCall","src":"1204:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1196:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1238:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"1249:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1231:6:16"},"nodeType":"YulFunctionCall","src":"1231:25:16"},"nodeType":"YulExpressionStatement","src":"1231:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1155:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1166:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1177:4:16","type":""}],"src":"1085:177:16"},{"body":{"nodeType":"YulBlock","src":"1312:86:16","statements":[{"body":{"nodeType":"YulBlock","src":"1376:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1385:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1388:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1378:6:16"},"nodeType":"YulFunctionCall","src":"1378:12:16"},"nodeType":"YulExpressionStatement","src":"1378:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1335:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1346:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1361:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1366:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1357:3:16"},"nodeType":"YulFunctionCall","src":"1357:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"1370:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1353:3:16"},"nodeType":"YulFunctionCall","src":"1353:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1342:3:16"},"nodeType":"YulFunctionCall","src":"1342:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1332:2:16"},"nodeType":"YulFunctionCall","src":"1332:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1325:6:16"},"nodeType":"YulFunctionCall","src":"1325:50:16"},"nodeType":"YulIf","src":"1322:70:16"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1301:5:16","type":""}],"src":"1267:131:16"},{"body":{"nodeType":"YulBlock","src":"1543:796:16","statements":[{"body":{"nodeType":"YulBlock","src":"1590:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1599:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1602:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1592:6:16"},"nodeType":"YulFunctionCall","src":"1592:12:16"},"nodeType":"YulExpressionStatement","src":"1592:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1564:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1573:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1560:3:16"},"nodeType":"YulFunctionCall","src":"1560:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1585:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1556:3:16"},"nodeType":"YulFunctionCall","src":"1556:33:16"},"nodeType":"YulIf","src":"1553:53:16"},{"nodeType":"YulVariableDeclaration","src":"1615:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1641:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1628:12:16"},"nodeType":"YulFunctionCall","src":"1628:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1619:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1685:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1660:24:16"},"nodeType":"YulFunctionCall","src":"1660:31:16"},"nodeType":"YulExpressionStatement","src":"1660:31:16"},{"nodeType":"YulAssignment","src":"1700:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1710:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1700:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1724:47:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1756:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1767:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1752:3:16"},"nodeType":"YulFunctionCall","src":"1752:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1739:12:16"},"nodeType":"YulFunctionCall","src":"1739:32:16"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1728:7:16","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1805:7:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1780:24:16"},"nodeType":"YulFunctionCall","src":"1780:33:16"},"nodeType":"YulExpressionStatement","src":"1780:33:16"},{"nodeType":"YulAssignment","src":"1822:17:16","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1832:7:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1822:6:16"}]},{"nodeType":"YulAssignment","src":"1848:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1875:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1886:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1871:3:16"},"nodeType":"YulFunctionCall","src":"1871:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1858:12:16"},"nodeType":"YulFunctionCall","src":"1858:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1848:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1899:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1930:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1941:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1926:3:16"},"nodeType":"YulFunctionCall","src":"1926:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1913:12:16"},"nodeType":"YulFunctionCall","src":"1913:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1903:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1954:28:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1964:18:16","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1958:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2009:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2018:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2021:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2011:6:16"},"nodeType":"YulFunctionCall","src":"2011:12:16"},"nodeType":"YulExpressionStatement","src":"2011:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1997:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2005:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1994:2:16"},"nodeType":"YulFunctionCall","src":"1994:14:16"},"nodeType":"YulIf","src":"1991:34:16"},{"nodeType":"YulVariableDeclaration","src":"2034:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2048:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"2059:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2044:3:16"},"nodeType":"YulFunctionCall","src":"2044:22:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2038:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2114:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2123:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2126:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2116:6:16"},"nodeType":"YulFunctionCall","src":"2116:12:16"},"nodeType":"YulExpressionStatement","src":"2116:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2093:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"2097:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2089:3:16"},"nodeType":"YulFunctionCall","src":"2089:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2104:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2085:3:16"},"nodeType":"YulFunctionCall","src":"2085:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2078:6:16"},"nodeType":"YulFunctionCall","src":"2078:35:16"},"nodeType":"YulIf","src":"2075:55:16"},{"nodeType":"YulVariableDeclaration","src":"2139:30:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2166:2:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2153:12:16"},"nodeType":"YulFunctionCall","src":"2153:16:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2143:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2196:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2205:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2208:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2198:6:16"},"nodeType":"YulFunctionCall","src":"2198:12:16"},"nodeType":"YulExpressionStatement","src":"2198:12:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2184:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2192:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:16"},"nodeType":"YulFunctionCall","src":"2181:14:16"},"nodeType":"YulIf","src":"2178:34:16"},{"body":{"nodeType":"YulBlock","src":"2262:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2271:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2274:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2264:6:16"},"nodeType":"YulFunctionCall","src":"2264:12:16"},"nodeType":"YulExpressionStatement","src":"2264:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2235:2:16"},{"name":"length","nodeType":"YulIdentifier","src":"2239:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2231:3:16"},"nodeType":"YulFunctionCall","src":"2231:15:16"},{"kind":"number","nodeType":"YulLiteral","src":"2248:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2227:3:16"},"nodeType":"YulFunctionCall","src":"2227:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2253:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2224:2:16"},"nodeType":"YulFunctionCall","src":"2224:37:16"},"nodeType":"YulIf","src":"2221:57:16"},{"nodeType":"YulAssignment","src":"2287:21:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2301:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"2305:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2297:3:16"},"nodeType":"YulFunctionCall","src":"2297:11:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2287:6:16"}]},{"nodeType":"YulAssignment","src":"2317:16:16","value":{"name":"length","nodeType":"YulIdentifier","src":"2327:6:16"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2317:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1477:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1488:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1500:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1508:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1516:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1524:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1532:6:16","type":""}],"src":"1403:936:16"},{"body":{"nodeType":"YulBlock","src":"2443:103:16","statements":[{"nodeType":"YulAssignment","src":"2453:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2465:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2476:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:16"},"nodeType":"YulFunctionCall","src":"2461:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2453:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2495:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2510:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2522:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2527:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2518:3:16"},"nodeType":"YulFunctionCall","src":"2518:20:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2506:3:16"},"nodeType":"YulFunctionCall","src":"2506:33:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2488:6:16"},"nodeType":"YulFunctionCall","src":"2488:52:16"},"nodeType":"YulExpressionStatement","src":"2488:52:16"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2412:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2423:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2434:4:16","type":""}],"src":"2344:202:16"},{"body":{"nodeType":"YulBlock","src":"2673:102:16","statements":[{"nodeType":"YulAssignment","src":"2683:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2695:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2706:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2691:3:16"},"nodeType":"YulFunctionCall","src":"2691:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2683:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2725:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2740:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2756:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2761:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2752:3:16"},"nodeType":"YulFunctionCall","src":"2752:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"2765:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2748:3:16"},"nodeType":"YulFunctionCall","src":"2748:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2736:3:16"},"nodeType":"YulFunctionCall","src":"2736:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2718:6:16"},"nodeType":"YulFunctionCall","src":"2718:51:16"},"nodeType":"YulExpressionStatement","src":"2718:51:16"}]},"name":"abi_encode_tuple_t_contract$_IERC222Token_$4537__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2642:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2653:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2664:4:16","type":""}],"src":"2551:224:16"},{"body":{"nodeType":"YulBlock","src":"2877:87:16","statements":[{"nodeType":"YulAssignment","src":"2887:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2899:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2910:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2895:3:16"},"nodeType":"YulFunctionCall","src":"2895:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2887:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2929:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2944:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2952:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2940:3:16"},"nodeType":"YulFunctionCall","src":"2940:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2922:6:16"},"nodeType":"YulFunctionCall","src":"2922:36:16"},"nodeType":"YulExpressionStatement","src":"2922:36:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2846:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2857:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2868:4:16","type":""}],"src":"2780:184:16"},{"body":{"nodeType":"YulBlock","src":"3039:177:16","statements":[{"body":{"nodeType":"YulBlock","src":"3085:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3094:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3097:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3087:6:16"},"nodeType":"YulFunctionCall","src":"3087:12:16"},"nodeType":"YulExpressionStatement","src":"3087:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3060:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3069:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3056:3:16"},"nodeType":"YulFunctionCall","src":"3056:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3081:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3052:3:16"},"nodeType":"YulFunctionCall","src":"3052:32:16"},"nodeType":"YulIf","src":"3049:52:16"},{"nodeType":"YulVariableDeclaration","src":"3110:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3136:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3123:12:16"},"nodeType":"YulFunctionCall","src":"3123:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3114:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3180:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3155:24:16"},"nodeType":"YulFunctionCall","src":"3155:31:16"},"nodeType":"YulExpressionStatement","src":"3155:31:16"},{"nodeType":"YulAssignment","src":"3195:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"3205:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3195:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3005:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3016:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3028:6:16","type":""}],"src":"2969:247:16"},{"body":{"nodeType":"YulBlock","src":"3271:373:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3281:26:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3301:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3295:5:16"},"nodeType":"YulFunctionCall","src":"3295:12:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3285:6:16","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3323:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3328:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3316:6:16"},"nodeType":"YulFunctionCall","src":"3316:19:16"},"nodeType":"YulExpressionStatement","src":"3316:19:16"},{"nodeType":"YulVariableDeclaration","src":"3344:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3353:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3348:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3415:110:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3429:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3439:4:16","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3433:2:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3471:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"3476:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3467:3:16"},"nodeType":"YulFunctionCall","src":"3467:11:16"},{"name":"_1","nodeType":"YulIdentifier","src":"3480:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:16"},"nodeType":"YulFunctionCall","src":"3463:20:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3499:5:16"},{"name":"i","nodeType":"YulIdentifier","src":"3506:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3495:3:16"},"nodeType":"YulFunctionCall","src":"3495:13:16"},{"name":"_1","nodeType":"YulIdentifier","src":"3510:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3491:3:16"},"nodeType":"YulFunctionCall","src":"3491:22:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3485:5:16"},"nodeType":"YulFunctionCall","src":"3485:29:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3456:6:16"},"nodeType":"YulFunctionCall","src":"3456:59:16"},"nodeType":"YulExpressionStatement","src":"3456:59:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3374:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"3377:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3371:2:16"},"nodeType":"YulFunctionCall","src":"3371:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3385:21:16","statements":[{"nodeType":"YulAssignment","src":"3387:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3396:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"3399:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3392:3:16"},"nodeType":"YulFunctionCall","src":"3392:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3367:3:16","statements":[]},"src":"3363:162:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3549:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3554:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3545:3:16"},"nodeType":"YulFunctionCall","src":"3545:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"3563:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3541:3:16"},"nodeType":"YulFunctionCall","src":"3541:27:16"},{"kind":"number","nodeType":"YulLiteral","src":"3570:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3534:6:16"},"nodeType":"YulFunctionCall","src":"3534:38:16"},"nodeType":"YulExpressionStatement","src":"3534:38:16"},{"nodeType":"YulAssignment","src":"3581:57:16","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3596:3:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3609:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3617:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3605:3:16"},"nodeType":"YulFunctionCall","src":"3605:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3626:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3622:3:16"},"nodeType":"YulFunctionCall","src":"3622:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3601:3:16"},"nodeType":"YulFunctionCall","src":"3601:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3592:3:16"},"nodeType":"YulFunctionCall","src":"3592:39:16"},{"kind":"number","nodeType":"YulLiteral","src":"3633:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3588:3:16"},"nodeType":"YulFunctionCall","src":"3588:50:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3581:3:16"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3248:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3255:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3263:3:16","type":""}],"src":"3221:423:16"},{"body":{"nodeType":"YulBlock","src":"3982:558:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3992:13:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4002:3:16","type":"","value":"288"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3996:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4021:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4032:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4014:6:16"},"nodeType":"YulFunctionCall","src":"4014:21:16"},"nodeType":"YulExpressionStatement","src":"4014:21:16"},{"nodeType":"YulAssignment","src":"4044:53:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4070:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4082:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4093:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4078:3:16"},"nodeType":"YulFunctionCall","src":"4078:18:16"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4052:17:16"},"nodeType":"YulFunctionCall","src":"4052:45:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4044:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"4106:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4124:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4129:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4120:3:16"},"nodeType":"YulFunctionCall","src":"4120:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"4133:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4116:3:16"},"nodeType":"YulFunctionCall","src":"4116:19:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4110:2:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4155:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4166:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4151:3:16"},"nodeType":"YulFunctionCall","src":"4151:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4175:6:16"},{"name":"_2","nodeType":"YulIdentifier","src":"4183:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4171:3:16"},"nodeType":"YulFunctionCall","src":"4171:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4144:6:16"},"nodeType":"YulFunctionCall","src":"4144:43:16"},"nodeType":"YulExpressionStatement","src":"4144:43:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4207:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4218:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4203:3:16"},"nodeType":"YulFunctionCall","src":"4203:18:16"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4227:6:16"},{"name":"_2","nodeType":"YulIdentifier","src":"4235:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4223:3:16"},"nodeType":"YulFunctionCall","src":"4223:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4196:6:16"},"nodeType":"YulFunctionCall","src":"4196:43:16"},"nodeType":"YulExpressionStatement","src":"4196:43:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4259:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4270:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4255:3:16"},"nodeType":"YulFunctionCall","src":"4255:18:16"},{"name":"value3","nodeType":"YulIdentifier","src":"4275:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4248:6:16"},"nodeType":"YulFunctionCall","src":"4248:34:16"},"nodeType":"YulExpressionStatement","src":"4248:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4302:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4313:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4298:3:16"},"nodeType":"YulFunctionCall","src":"4298:19:16"},{"name":"value4","nodeType":"YulIdentifier","src":"4319:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4291:6:16"},"nodeType":"YulFunctionCall","src":"4291:35:16"},"nodeType":"YulExpressionStatement","src":"4291:35:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4346:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4357:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4342:3:16"},"nodeType":"YulFunctionCall","src":"4342:19:16"},{"name":"value5","nodeType":"YulIdentifier","src":"4363:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4335:6:16"},"nodeType":"YulFunctionCall","src":"4335:35:16"},"nodeType":"YulExpressionStatement","src":"4335:35:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4390:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4401:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4386:3:16"},"nodeType":"YulFunctionCall","src":"4386:19:16"},{"name":"value6","nodeType":"YulIdentifier","src":"4407:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4379:6:16"},"nodeType":"YulFunctionCall","src":"4379:35:16"},"nodeType":"YulExpressionStatement","src":"4379:35:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4434:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4445:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4430:3:16"},"nodeType":"YulFunctionCall","src":"4430:19:16"},{"arguments":[{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"4465:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4458:6:16"},"nodeType":"YulFunctionCall","src":"4458:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4451:6:16"},"nodeType":"YulFunctionCall","src":"4451:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4423:6:16"},"nodeType":"YulFunctionCall","src":"4423:51:16"},"nodeType":"YulExpressionStatement","src":"4423:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4494:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4505:3:16","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4490:3:16"},"nodeType":"YulFunctionCall","src":"4490:19:16"},{"arguments":[{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"4525:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4518:6:16"},"nodeType":"YulFunctionCall","src":"4518:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4511:6:16"},"nodeType":"YulFunctionCall","src":"4511:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4483:6:16"},"nodeType":"YulFunctionCall","src":"4483:51:16"},"nodeType":"YulExpressionStatement","src":"4483:51:16"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3887:9:16","type":""},{"name":"value8","nodeType":"YulTypedName","src":"3898:6:16","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3906:6:16","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3914:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3922:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3930:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3938:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3946:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3954:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3962:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3973:4:16","type":""}],"src":"3649:891:16"},{"body":{"nodeType":"YulBlock","src":"4646:102:16","statements":[{"nodeType":"YulAssignment","src":"4656:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4668:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4679:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4664:3:16"},"nodeType":"YulFunctionCall","src":"4664:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4656:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4698:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4713:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4729:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4734:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4725:3:16"},"nodeType":"YulFunctionCall","src":"4725:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"4738:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4721:3:16"},"nodeType":"YulFunctionCall","src":"4721:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4709:3:16"},"nodeType":"YulFunctionCall","src":"4709:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4691:6:16"},"nodeType":"YulFunctionCall","src":"4691:51:16"},"nodeType":"YulExpressionStatement","src":"4691:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4615:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4626:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4637:4:16","type":""}],"src":"4545:203:16"},{"body":{"nodeType":"YulBlock","src":"4840:228:16","statements":[{"body":{"nodeType":"YulBlock","src":"4886:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4895:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4898:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4888:6:16"},"nodeType":"YulFunctionCall","src":"4888:12:16"},"nodeType":"YulExpressionStatement","src":"4888:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4861:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4870:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4857:3:16"},"nodeType":"YulFunctionCall","src":"4857:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4882:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4853:3:16"},"nodeType":"YulFunctionCall","src":"4853:32:16"},"nodeType":"YulIf","src":"4850:52:16"},{"nodeType":"YulVariableDeclaration","src":"4911:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4937:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4924:12:16"},"nodeType":"YulFunctionCall","src":"4924:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4915:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4981:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4956:24:16"},"nodeType":"YulFunctionCall","src":"4956:31:16"},"nodeType":"YulExpressionStatement","src":"4956:31:16"},{"nodeType":"YulAssignment","src":"4996:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5006:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4996:6:16"}]},{"nodeType":"YulAssignment","src":"5020:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5047:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5058:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5043:3:16"},"nodeType":"YulFunctionCall","src":"5043:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5030:12:16"},"nodeType":"YulFunctionCall","src":"5030:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5020:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4798:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4809:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4821:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4829:6:16","type":""}],"src":"4753:315:16"},{"body":{"nodeType":"YulBlock","src":"5194:99:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5211:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5222:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5204:6:16"},"nodeType":"YulFunctionCall","src":"5204:21:16"},"nodeType":"YulExpressionStatement","src":"5204:21:16"},{"nodeType":"YulAssignment","src":"5234:53:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5260:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5272:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5283:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5268:3:16"},"nodeType":"YulFunctionCall","src":"5268:18:16"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5242:17:16"},"nodeType":"YulFunctionCall","src":"5242:45:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5234:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5163:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5174:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5185:4:16","type":""}],"src":"5073:220:16"},{"body":{"nodeType":"YulBlock","src":"5449:481:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5459:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5469:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5463:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5480:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5498:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5509:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5494:3:16"},"nodeType":"YulFunctionCall","src":"5494:18:16"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"5484:6:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5528:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5539:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5521:6:16"},"nodeType":"YulFunctionCall","src":"5521:21:16"},"nodeType":"YulExpressionStatement","src":"5521:21:16"},{"nodeType":"YulVariableDeclaration","src":"5551:17:16","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"5562:6:16"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"5555:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5577:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5597:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5591:5:16"},"nodeType":"YulFunctionCall","src":"5591:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5581:6:16","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5620:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"5628:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5613:6:16"},"nodeType":"YulFunctionCall","src":"5613:22:16"},"nodeType":"YulExpressionStatement","src":"5613:22:16"},{"nodeType":"YulAssignment","src":"5644:25:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5655:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5666:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5651:3:16"},"nodeType":"YulFunctionCall","src":"5651:18:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5644:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"5678:29:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5696:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5704:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5692:3:16"},"nodeType":"YulFunctionCall","src":"5692:15:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5682:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5716:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5725:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5720:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5784:120:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5805:3:16"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5816:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5810:5:16"},"nodeType":"YulFunctionCall","src":"5810:13:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5798:6:16"},"nodeType":"YulFunctionCall","src":"5798:26:16"},"nodeType":"YulExpressionStatement","src":"5798:26:16"},{"nodeType":"YulAssignment","src":"5837:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5848:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5853:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5844:3:16"},"nodeType":"YulFunctionCall","src":"5844:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5837:3:16"}]},{"nodeType":"YulAssignment","src":"5869:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5883:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"5891:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5879:3:16"},"nodeType":"YulFunctionCall","src":"5879:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5869:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5746:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"5749:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5743:2:16"},"nodeType":"YulFunctionCall","src":"5743:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5757:18:16","statements":[{"nodeType":"YulAssignment","src":"5759:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5768:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"5771:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5764:3:16"},"nodeType":"YulFunctionCall","src":"5764:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5759:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5739:3:16","statements":[]},"src":"5735:169:16"},{"nodeType":"YulAssignment","src":"5913:11:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"5921:3:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5913:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5418:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5429:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5440:4:16","type":""}],"src":"5298:632:16"},{"body":{"nodeType":"YulBlock","src":"6170:310:16","statements":[{"nodeType":"YulAssignment","src":"6180:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6192:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6203:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6188:3:16"},"nodeType":"YulFunctionCall","src":"6188:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6180:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"6234:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6216:6:16"},"nodeType":"YulFunctionCall","src":"6216:25:16"},"nodeType":"YulExpressionStatement","src":"6216:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6261:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6272:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6257:3:16"},"nodeType":"YulFunctionCall","src":"6257:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"6277:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6250:6:16"},"nodeType":"YulFunctionCall","src":"6250:34:16"},"nodeType":"YulExpressionStatement","src":"6250:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6304:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6315:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6300:3:16"},"nodeType":"YulFunctionCall","src":"6300:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"6320:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6293:6:16"},"nodeType":"YulFunctionCall","src":"6293:34:16"},"nodeType":"YulExpressionStatement","src":"6293:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6347:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6358:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6343:3:16"},"nodeType":"YulFunctionCall","src":"6343:18:16"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6377:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6370:6:16"},"nodeType":"YulFunctionCall","src":"6370:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6363:6:16"},"nodeType":"YulFunctionCall","src":"6363:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6336:6:16"},"nodeType":"YulFunctionCall","src":"6336:50:16"},"nodeType":"YulExpressionStatement","src":"6336:50:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6406:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6417:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6402:3:16"},"nodeType":"YulFunctionCall","src":"6402:19:16"},{"name":"value4","nodeType":"YulIdentifier","src":"6423:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6395:6:16"},"nodeType":"YulFunctionCall","src":"6395:35:16"},"nodeType":"YulExpressionStatement","src":"6395:35:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6450:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6461:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6446:3:16"},"nodeType":"YulFunctionCall","src":"6446:19:16"},{"name":"value5","nodeType":"YulIdentifier","src":"6467:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6439:6:16"},"nodeType":"YulFunctionCall","src":"6439:35:16"},"nodeType":"YulExpressionStatement","src":"6439:35:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6099:9:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6110:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6118:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6126:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6134:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6142:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6150:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6161:4:16","type":""}],"src":"5935:545:16"},{"body":{"nodeType":"YulBlock","src":"6605:102:16","statements":[{"nodeType":"YulAssignment","src":"6615:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6627:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6638:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6623:3:16"},"nodeType":"YulFunctionCall","src":"6623:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6615:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6657:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6672:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6688:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6693:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6684:3:16"},"nodeType":"YulFunctionCall","src":"6684:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"6697:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6680:3:16"},"nodeType":"YulFunctionCall","src":"6680:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6668:3:16"},"nodeType":"YulFunctionCall","src":"6668:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6650:6:16"},"nodeType":"YulFunctionCall","src":"6650:51:16"},"nodeType":"YulExpressionStatement","src":"6650:51:16"}]},"name":"abi_encode_tuple_t_contract$_IERC222NFT_$4517__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6574:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6585:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6596:4:16","type":""}],"src":"6485:222:16"},{"body":{"nodeType":"YulBlock","src":"6754:76:16","statements":[{"body":{"nodeType":"YulBlock","src":"6808:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6817:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6820:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6810:6:16"},"nodeType":"YulFunctionCall","src":"6810:12:16"},"nodeType":"YulExpressionStatement","src":"6810:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6777:5:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6798:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6791:6:16"},"nodeType":"YulFunctionCall","src":"6791:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6784:6:16"},"nodeType":"YulFunctionCall","src":"6784:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6774:2:16"},"nodeType":"YulFunctionCall","src":"6774:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6767:6:16"},"nodeType":"YulFunctionCall","src":"6767:40:16"},"nodeType":"YulIf","src":"6764:60:16"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6743:5:16","type":""}],"src":"6712:118:16"},{"body":{"nodeType":"YulBlock","src":"6902:174:16","statements":[{"body":{"nodeType":"YulBlock","src":"6948:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6957:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6960:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6950:6:16"},"nodeType":"YulFunctionCall","src":"6950:12:16"},"nodeType":"YulExpressionStatement","src":"6950:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6923:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6932:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6919:3:16"},"nodeType":"YulFunctionCall","src":"6919:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"6944:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6915:3:16"},"nodeType":"YulFunctionCall","src":"6915:32:16"},"nodeType":"YulIf","src":"6912:52:16"},{"nodeType":"YulVariableDeclaration","src":"6973:36:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6999:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6986:12:16"},"nodeType":"YulFunctionCall","src":"6986:23:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6977:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7040:5:16"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"7018:21:16"},"nodeType":"YulFunctionCall","src":"7018:28:16"},"nodeType":"YulExpressionStatement","src":"7018:28:16"},{"nodeType":"YulAssignment","src":"7055:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"7065:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7055:6:16"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6868:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6879:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6891:6:16","type":""}],"src":"6835:241:16"},{"body":{"nodeType":"YulBlock","src":"7255:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7272:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7283:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7265:6:16"},"nodeType":"YulFunctionCall","src":"7265:21:16"},"nodeType":"YulExpressionStatement","src":"7265:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7306:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7317:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7302:3:16"},"nodeType":"YulFunctionCall","src":"7302:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7322:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7295:6:16"},"nodeType":"YulFunctionCall","src":"7295:30:16"},"nodeType":"YulExpressionStatement","src":"7295:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7345:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7356:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7341:3:16"},"nodeType":"YulFunctionCall","src":"7341:18:16"},{"hexValue":"4e6f7420617574686f72697a65642061646d696e","kind":"string","nodeType":"YulLiteral","src":"7361:22:16","type":"","value":"Not authorized admin"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7334:6:16"},"nodeType":"YulFunctionCall","src":"7334:50:16"},"nodeType":"YulExpressionStatement","src":"7334:50:16"},{"nodeType":"YulAssignment","src":"7393:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7405:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7416:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7401:3:16"},"nodeType":"YulFunctionCall","src":"7401:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7393:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b63528b7ff238c3d3d1fd93178bccfff510ad1c0b4577c21af8789c804e9e371__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7232:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7246:4:16","type":""}],"src":"7081:344:16"},{"body":{"nodeType":"YulBlock","src":"7462:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7479:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7486:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7491:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7482:3:16"},"nodeType":"YulFunctionCall","src":"7482:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7472:6:16"},"nodeType":"YulFunctionCall","src":"7472:31:16"},"nodeType":"YulExpressionStatement","src":"7472:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7519:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7522:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7512:6:16"},"nodeType":"YulFunctionCall","src":"7512:15:16"},"nodeType":"YulExpressionStatement","src":"7512:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7543:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7546:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7536:6:16"},"nodeType":"YulFunctionCall","src":"7536:15:16"},"nodeType":"YulExpressionStatement","src":"7536:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7430:127:16"},{"body":{"nodeType":"YulBlock","src":"7736:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7753:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7764:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7746:6:16"},"nodeType":"YulFunctionCall","src":"7746:21:16"},"nodeType":"YulExpressionStatement","src":"7746:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7787:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7798:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7783:3:16"},"nodeType":"YulFunctionCall","src":"7783:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7803:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7776:6:16"},"nodeType":"YulFunctionCall","src":"7776:30:16"},"nodeType":"YulExpressionStatement","src":"7776:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7826:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7837:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7822:3:16"},"nodeType":"YulFunctionCall","src":"7822:18:16"},{"hexValue":"4e465420616c726561647920696e207661756c74","kind":"string","nodeType":"YulLiteral","src":"7842:22:16","type":"","value":"NFT already in vault"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7815:6:16"},"nodeType":"YulFunctionCall","src":"7815:50:16"},"nodeType":"YulExpressionStatement","src":"7815:50:16"},{"nodeType":"YulAssignment","src":"7874:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7886:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7897:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7882:3:16"},"nodeType":"YulFunctionCall","src":"7882:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7874:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_e7816a82000dd88ad42d481d0b9d57e317be6b70a8783407a941115869cbb947__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7713:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7727:4:16","type":""}],"src":"7562:344:16"},{"body":{"nodeType":"YulBlock","src":"8068:218:16","statements":[{"nodeType":"YulAssignment","src":"8078:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8090:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8101:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8086:3:16"},"nodeType":"YulFunctionCall","src":"8086:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8078:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"8113:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8131:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8136:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8127:3:16"},"nodeType":"YulFunctionCall","src":"8127:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"8140:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8123:3:16"},"nodeType":"YulFunctionCall","src":"8123:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8117:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8158:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8173:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"8181:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8169:3:16"},"nodeType":"YulFunctionCall","src":"8169:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8151:6:16"},"nodeType":"YulFunctionCall","src":"8151:34:16"},"nodeType":"YulExpressionStatement","src":"8151:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8205:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8216:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8201:3:16"},"nodeType":"YulFunctionCall","src":"8201:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8225:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"8233:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8221:3:16"},"nodeType":"YulFunctionCall","src":"8221:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8194:6:16"},"nodeType":"YulFunctionCall","src":"8194:43:16"},"nodeType":"YulExpressionStatement","src":"8194:43:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8257:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8268:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8253:3:16"},"nodeType":"YulFunctionCall","src":"8253:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"8273:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8246:6:16"},"nodeType":"YulFunctionCall","src":"8246:34:16"},"nodeType":"YulExpressionStatement","src":"8246:34:16"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8021:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8032:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8040:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8048:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8059:4:16","type":""}],"src":"7911:375:16"},{"body":{"nodeType":"YulBlock","src":"8323:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8340:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8347:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8352:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8343:3:16"},"nodeType":"YulFunctionCall","src":"8343:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8333:6:16"},"nodeType":"YulFunctionCall","src":"8333:31:16"},"nodeType":"YulExpressionStatement","src":"8333:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8380:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8383:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8373:6:16"},"nodeType":"YulFunctionCall","src":"8373:15:16"},"nodeType":"YulExpressionStatement","src":"8373:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8404:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8407:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8397:6:16"},"nodeType":"YulFunctionCall","src":"8397:15:16"},"nodeType":"YulExpressionStatement","src":"8397:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8291:127:16"},{"body":{"nodeType":"YulBlock","src":"8470:88:16","statements":[{"body":{"nodeType":"YulBlock","src":"8501:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8503:16:16"},"nodeType":"YulFunctionCall","src":"8503:18:16"},"nodeType":"YulExpressionStatement","src":"8503:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8486:5:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8497:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8493:3:16"},"nodeType":"YulFunctionCall","src":"8493:6:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8483:2:16"},"nodeType":"YulFunctionCall","src":"8483:17:16"},"nodeType":"YulIf","src":"8480:43:16"},{"nodeType":"YulAssignment","src":"8532:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8543:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"8550:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8539:3:16"},"nodeType":"YulFunctionCall","src":"8539:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8532:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8452:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8462:3:16","type":""}],"src":"8423:135:16"},{"body":{"nodeType":"YulBlock","src":"8611:77:16","statements":[{"nodeType":"YulAssignment","src":"8621:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8632:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"8635:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8628:3:16"},"nodeType":"YulFunctionCall","src":"8628:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8621:3:16"}]},{"body":{"nodeType":"YulBlock","src":"8660:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8662:16:16"},"nodeType":"YulFunctionCall","src":"8662:18:16"},"nodeType":"YulExpressionStatement","src":"8662:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8652:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"8655:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8649:2:16"},"nodeType":"YulFunctionCall","src":"8649:10:16"},"nodeType":"YulIf","src":"8646:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8594:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"8597:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8603:3:16","type":""}],"src":"8563:125:16"},{"body":{"nodeType":"YulBlock","src":"8822:119:16","statements":[{"nodeType":"YulAssignment","src":"8832:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8844:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8855:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8840:3:16"},"nodeType":"YulFunctionCall","src":"8840:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8832:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8874:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"8885:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8867:6:16"},"nodeType":"YulFunctionCall","src":"8867:25:16"},"nodeType":"YulExpressionStatement","src":"8867:25:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8912:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8923:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8908:3:16"},"nodeType":"YulFunctionCall","src":"8908:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"8928:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8901:6:16"},"nodeType":"YulFunctionCall","src":"8901:34:16"},"nodeType":"YulExpressionStatement","src":"8901:34:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8783:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8794:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8802:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8813:4:16","type":""}],"src":"8693:248:16"},{"body":{"nodeType":"YulBlock","src":"9027:103:16","statements":[{"body":{"nodeType":"YulBlock","src":"9073:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9082:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9085:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9075:6:16"},"nodeType":"YulFunctionCall","src":"9075:12:16"},"nodeType":"YulExpressionStatement","src":"9075:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9048:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9057:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9044:3:16"},"nodeType":"YulFunctionCall","src":"9044:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"9069:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9040:3:16"},"nodeType":"YulFunctionCall","src":"9040:32:16"},"nodeType":"YulIf","src":"9037:52:16"},{"nodeType":"YulAssignment","src":"9098:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9114:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9108:5:16"},"nodeType":"YulFunctionCall","src":"9108:16:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9098:6:16"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8993:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9004:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9016:6:16","type":""}],"src":"8946:184:16"},{"body":{"nodeType":"YulBlock","src":"9167:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9184:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9191:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9196:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9187:3:16"},"nodeType":"YulFunctionCall","src":"9187:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9177:6:16"},"nodeType":"YulFunctionCall","src":"9177:31:16"},"nodeType":"YulExpressionStatement","src":"9177:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9224:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9227:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9217:6:16"},"nodeType":"YulFunctionCall","src":"9217:15:16"},"nodeType":"YulExpressionStatement","src":"9217:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9248:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9251:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9241:6:16"},"nodeType":"YulFunctionCall","src":"9241:15:16"},"nodeType":"YulExpressionStatement","src":"9241:15:16"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"9135:127:16"},{"body":{"nodeType":"YulBlock","src":"9313:74:16","statements":[{"body":{"nodeType":"YulBlock","src":"9336:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"9338:16:16"},"nodeType":"YulFunctionCall","src":"9338:18:16"},"nodeType":"YulExpressionStatement","src":"9338:18:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9333:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9326:6:16"},"nodeType":"YulFunctionCall","src":"9326:9:16"},"nodeType":"YulIf","src":"9323:35:16"},{"nodeType":"YulAssignment","src":"9367:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9376:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"9379:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9372:3:16"},"nodeType":"YulFunctionCall","src":"9372:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9367:1:16"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9298:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"9301:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"9307:1:16","type":""}],"src":"9267:120:16"},{"body":{"nodeType":"YulBlock","src":"9566:171:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9583:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9594:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9576:6:16"},"nodeType":"YulFunctionCall","src":"9576:21:16"},"nodeType":"YulExpressionStatement","src":"9576:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9617:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9628:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9613:3:16"},"nodeType":"YulFunctionCall","src":"9613:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"9633:2:16","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9606:6:16"},"nodeType":"YulFunctionCall","src":"9606:30:16"},"nodeType":"YulExpressionStatement","src":"9606:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9656:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9667:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9652:3:16"},"nodeType":"YulFunctionCall","src":"9652:18:16"},{"hexValue":"496e76616c69642061646d696e2061646472657373","kind":"string","nodeType":"YulLiteral","src":"9672:23:16","type":"","value":"Invalid admin address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9645:6:16"},"nodeType":"YulFunctionCall","src":"9645:51:16"},"nodeType":"YulExpressionStatement","src":"9645:51:16"},{"nodeType":"YulAssignment","src":"9705:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9717:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9728:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9713:3:16"},"nodeType":"YulFunctionCall","src":"9713:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9705:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9543:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9557:4:16","type":""}],"src":"9392:345:16"},{"body":{"nodeType":"YulBlock","src":"9797:325:16","statements":[{"nodeType":"YulAssignment","src":"9807:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9821:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"9824:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9817:3:16"},"nodeType":"YulFunctionCall","src":"9817:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9807:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"9838:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9868:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"9874:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9864:3:16"},"nodeType":"YulFunctionCall","src":"9864:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"9842:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9915:31:16","statements":[{"nodeType":"YulAssignment","src":"9917:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9931:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9939:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9927:3:16"},"nodeType":"YulFunctionCall","src":"9927:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9917:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9895:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9888:6:16"},"nodeType":"YulFunctionCall","src":"9888:26:16"},"nodeType":"YulIf","src":"9885:61:16"},{"body":{"nodeType":"YulBlock","src":"10005:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10026:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10033:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10038:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10029:3:16"},"nodeType":"YulFunctionCall","src":"10029:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10019:6:16"},"nodeType":"YulFunctionCall","src":"10019:31:16"},"nodeType":"YulExpressionStatement","src":"10019:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10070:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10073:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10063:6:16"},"nodeType":"YulFunctionCall","src":"10063:15:16"},"nodeType":"YulExpressionStatement","src":"10063:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10098:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10101:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10091:6:16"},"nodeType":"YulFunctionCall","src":"10091:15:16"},"nodeType":"YulExpressionStatement","src":"10091:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9961:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9984:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9992:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9981:2:16"},"nodeType":"YulFunctionCall","src":"9981:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9958:2:16"},"nodeType":"YulFunctionCall","src":"9958:38:16"},"nodeType":"YulIf","src":"9955:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9777:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9786:6:16","type":""}],"src":"9742:380:16"},{"body":{"nodeType":"YulBlock","src":"10301:167:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10318:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10329:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10311:6:16"},"nodeType":"YulFunctionCall","src":"10311:21:16"},"nodeType":"YulExpressionStatement","src":"10311:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10352:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10363:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10348:3:16"},"nodeType":"YulFunctionCall","src":"10348:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10368:2:16","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10341:6:16"},"nodeType":"YulFunctionCall","src":"10341:30:16"},"nodeType":"YulExpressionStatement","src":"10341:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10391:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10402:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10387:3:16"},"nodeType":"YulFunctionCall","src":"10387:18:16"},{"hexValue":"496e76616c696420726563697069656e74","kind":"string","nodeType":"YulLiteral","src":"10407:19:16","type":"","value":"Invalid recipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10380:6:16"},"nodeType":"YulFunctionCall","src":"10380:47:16"},"nodeType":"YulExpressionStatement","src":"10380:47:16"},{"nodeType":"YulAssignment","src":"10436:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10448:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10459:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10444:3:16"},"nodeType":"YulFunctionCall","src":"10444:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10436:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10278:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10292:4:16","type":""}],"src":"10127:341:16"},{"body":{"nodeType":"YulBlock","src":"10647:176:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10664:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10675:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10657:6:16"},"nodeType":"YulFunctionCall","src":"10657:21:16"},"nodeType":"YulExpressionStatement","src":"10657:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10698:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10709:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10694:3:16"},"nodeType":"YulFunctionCall","src":"10694:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10714:2:16","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10687:6:16"},"nodeType":"YulFunctionCall","src":"10687:30:16"},"nodeType":"YulExpressionStatement","src":"10687:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10737:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10748:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10733:3:16"},"nodeType":"YulFunctionCall","src":"10733:18:16"},{"hexValue":"496e73756666696369656e7420746f6b656e2062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"10753:28:16","type":"","value":"Insufficient token balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10726:6:16"},"nodeType":"YulFunctionCall","src":"10726:56:16"},"nodeType":"YulExpressionStatement","src":"10726:56:16"},{"nodeType":"YulAssignment","src":"10791:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10803:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10814:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10799:3:16"},"nodeType":"YulFunctionCall","src":"10799:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10791:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10624:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10638:4:16","type":""}],"src":"10473:350:16"},{"body":{"nodeType":"YulBlock","src":"10877:79:16","statements":[{"nodeType":"YulAssignment","src":"10887:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10899:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"10902:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10895:3:16"},"nodeType":"YulFunctionCall","src":"10895:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"10887:4:16"}]},{"body":{"nodeType":"YulBlock","src":"10928:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10930:16:16"},"nodeType":"YulFunctionCall","src":"10930:18:16"},"nodeType":"YulExpressionStatement","src":"10930:18:16"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"10919:4:16"},{"name":"x","nodeType":"YulIdentifier","src":"10925:1:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10916:2:16"},"nodeType":"YulFunctionCall","src":"10916:11:16"},"nodeType":"YulIf","src":"10913:37:16"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10859:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"10862:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"10868:4:16","type":""}],"src":"10828:128:16"},{"body":{"nodeType":"YulBlock","src":"11135:166:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11152:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11163:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11145:6:16"},"nodeType":"YulFunctionCall","src":"11145:21:16"},"nodeType":"YulExpressionStatement","src":"11145:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11186:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11197:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11182:3:16"},"nodeType":"YulFunctionCall","src":"11182:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11202:2:16","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11175:6:16"},"nodeType":"YulFunctionCall","src":"11175:30:16"},"nodeType":"YulExpressionStatement","src":"11175:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11225:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11236:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11221:3:16"},"nodeType":"YulFunctionCall","src":"11221:18:16"},{"hexValue":"4e4654206e6f7420696e207661756c74","kind":"string","nodeType":"YulLiteral","src":"11241:18:16","type":"","value":"NFT not in vault"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11214:6:16"},"nodeType":"YulFunctionCall","src":"11214:46:16"},"nodeType":"YulExpressionStatement","src":"11214:46:16"},{"nodeType":"YulAssignment","src":"11269:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11281:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11292:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11277:3:16"},"nodeType":"YulFunctionCall","src":"11277:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11269:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_dac8f8f8cefeef49f92bd194a19eb3d0ca80d6935a78adb3e30c70d8a4b421bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11112:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11126:4:16","type":""}],"src":"10961:340:16"},{"body":{"nodeType":"YulBlock","src":"11353:89:16","statements":[{"body":{"nodeType":"YulBlock","src":"11380:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11382:16:16"},"nodeType":"YulFunctionCall","src":"11382:18:16"},"nodeType":"YulExpressionStatement","src":"11382:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11373:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11366:6:16"},"nodeType":"YulFunctionCall","src":"11366:13:16"},"nodeType":"YulIf","src":"11363:39:16"},{"nodeType":"YulAssignment","src":"11411:25:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11422:5:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11433:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11429:3:16"},"nodeType":"YulFunctionCall","src":"11429:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11418:3:16"},"nodeType":"YulFunctionCall","src":"11418:18:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11411:3:16"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11335:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11345:3:16","type":""}],"src":"11306:136:16"},{"body":{"nodeType":"YulBlock","src":"11479:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11496:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11503:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11508:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11499:3:16"},"nodeType":"YulFunctionCall","src":"11499:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11489:6:16"},"nodeType":"YulFunctionCall","src":"11489:31:16"},"nodeType":"YulExpressionStatement","src":"11489:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11536:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11539:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11529:6:16"},"nodeType":"YulFunctionCall","src":"11529:15:16"},"nodeType":"YulExpressionStatement","src":"11529:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11560:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11563:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11553:6:16"},"nodeType":"YulFunctionCall","src":"11553:15:16"},"nodeType":"YulExpressionStatement","src":"11553:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"11447:127:16"},{"body":{"nodeType":"YulBlock","src":"11753:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11770:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11781:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11763:6:16"},"nodeType":"YulFunctionCall","src":"11763:21:16"},"nodeType":"YulExpressionStatement","src":"11763:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11804:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11815:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11800:3:16"},"nodeType":"YulFunctionCall","src":"11800:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11820:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11793:6:16"},"nodeType":"YulFunctionCall","src":"11793:30:16"},"nodeType":"YulExpressionStatement","src":"11793:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11843:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11854:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11839:3:16"},"nodeType":"YulFunctionCall","src":"11839:18:16"},{"hexValue":"5377617070696e672069732064697361626c6564","kind":"string","nodeType":"YulLiteral","src":"11859:22:16","type":"","value":"Swapping is disabled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11832:6:16"},"nodeType":"YulFunctionCall","src":"11832:50:16"},"nodeType":"YulExpressionStatement","src":"11832:50:16"},{"nodeType":"YulAssignment","src":"11891:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11903:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11914:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11899:3:16"},"nodeType":"YulFunctionCall","src":"11899:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11891:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_da2386093b42d90c04b4e0b9bfdcee221d41310af41e9f52a16ad6bdac1a7d6c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11730:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11744:4:16","type":""}],"src":"11579:344:16"},{"body":{"nodeType":"YulBlock","src":"12102:175:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12119:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12130:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12112:6:16"},"nodeType":"YulFunctionCall","src":"12112:21:16"},"nodeType":"YulExpressionStatement","src":"12112:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12153:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12164:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12149:3:16"},"nodeType":"YulFunctionCall","src":"12149:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12169:2:16","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12142:6:16"},"nodeType":"YulFunctionCall","src":"12142:30:16"},"nodeType":"YulExpressionStatement","src":"12142:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12192:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12203:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12188:3:16"},"nodeType":"YulFunctionCall","src":"12188:18:16"},{"hexValue":"496e73756666696369656e7420746f6b656e20616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"12208:27:16","type":"","value":"Insufficient token amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12181:6:16"},"nodeType":"YulFunctionCall","src":"12181:55:16"},"nodeType":"YulExpressionStatement","src":"12181:55:16"},{"nodeType":"YulAssignment","src":"12245:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12257:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12268:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12253:3:16"},"nodeType":"YulFunctionCall","src":"12253:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12245:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12079:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12093:4:16","type":""}],"src":"11928:349:16"},{"body":{"nodeType":"YulBlock","src":"12320:74:16","statements":[{"body":{"nodeType":"YulBlock","src":"12343:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"12345:16:16"},"nodeType":"YulFunctionCall","src":"12345:18:16"},"nodeType":"YulExpressionStatement","src":"12345:18:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12340:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12333:6:16"},"nodeType":"YulFunctionCall","src":"12333:9:16"},"nodeType":"YulIf","src":"12330:35:16"},{"nodeType":"YulAssignment","src":"12374:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12383:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"12386:1:16"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"12379:3:16"},"nodeType":"YulFunctionCall","src":"12379:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"12374:1:16"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12305:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"12308:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"12314:1:16","type":""}],"src":"12282:112:16"},{"body":{"nodeType":"YulBlock","src":"12573:170:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12590:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12601:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12583:6:16"},"nodeType":"YulFunctionCall","src":"12583:21:16"},"nodeType":"YulExpressionStatement","src":"12583:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12624:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12635:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12620:3:16"},"nodeType":"YulFunctionCall","src":"12620:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12640:2:16","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12613:6:16"},"nodeType":"YulFunctionCall","src":"12613:30:16"},"nodeType":"YulExpressionStatement","src":"12613:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12663:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12674:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12659:3:16"},"nodeType":"YulFunctionCall","src":"12659:18:16"},{"hexValue":"496e76616c696420746f6b656e20616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"12679:22:16","type":"","value":"Invalid token amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12652:6:16"},"nodeType":"YulFunctionCall","src":"12652:50:16"},"nodeType":"YulExpressionStatement","src":"12652:50:16"},{"nodeType":"YulAssignment","src":"12711:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12723:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12734:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12719:3:16"},"nodeType":"YulFunctionCall","src":"12719:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12711:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12550:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12564:4:16","type":""}],"src":"12399:344:16"},{"body":{"nodeType":"YulBlock","src":"12922:176:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12939:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12950:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12932:6:16"},"nodeType":"YulFunctionCall","src":"12932:21:16"},"nodeType":"YulExpressionStatement","src":"12932:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12973:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12984:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12969:3:16"},"nodeType":"YulFunctionCall","src":"12969:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"12989:2:16","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12962:6:16"},"nodeType":"YulFunctionCall","src":"12962:30:16"},"nodeType":"YulExpressionStatement","src":"12962:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13012:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13023:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13008:3:16"},"nodeType":"YulFunctionCall","src":"13008:18:16"},{"hexValue":"4e6f204e46547320617661696c61626c6520696e207661756c74","kind":"string","nodeType":"YulLiteral","src":"13028:28:16","type":"","value":"No NFTs available in vault"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13001:6:16"},"nodeType":"YulFunctionCall","src":"13001:56:16"},"nodeType":"YulExpressionStatement","src":"13001:56:16"},{"nodeType":"YulAssignment","src":"13066:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13078:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13089:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13074:3:16"},"nodeType":"YulFunctionCall","src":"13074:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13066:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3fc3731ef9740462983b2951356ca0d33ce8125202f1d23502d5bbbba6300654__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12899:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12913:4:16","type":""}],"src":"12748:350:16"},{"body":{"nodeType":"YulBlock","src":"13277:174:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13294:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13305:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13287:6:16"},"nodeType":"YulFunctionCall","src":"13287:21:16"},"nodeType":"YulExpressionStatement","src":"13287:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13328:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13339:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13324:3:16"},"nodeType":"YulFunctionCall","src":"13324:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"13344:2:16","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13317:6:16"},"nodeType":"YulFunctionCall","src":"13317:30:16"},"nodeType":"YulExpressionStatement","src":"13317:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13367:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13378:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13363:3:16"},"nodeType":"YulFunctionCall","src":"13363:18:16"},{"hexValue":"4e6f7420656e6f756768204e46547320696e207661756c74","kind":"string","nodeType":"YulLiteral","src":"13383:26:16","type":"","value":"Not enough NFTs in vault"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13356:6:16"},"nodeType":"YulFunctionCall","src":"13356:54:16"},"nodeType":"YulExpressionStatement","src":"13356:54:16"},{"nodeType":"YulAssignment","src":"13419:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13431:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13442:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13427:3:16"},"nodeType":"YulFunctionCall","src":"13427:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13419:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_22b4ff83a89f0ed753d7c94d6a561988cc291cdbc12cc5944f7816bd89d4253e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13254:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13268:4:16","type":""}],"src":"13103:348:16"},{"body":{"nodeType":"YulBlock","src":"13534:167:16","statements":[{"body":{"nodeType":"YulBlock","src":"13580:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13589:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13592:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13582:6:16"},"nodeType":"YulFunctionCall","src":"13582:12:16"},"nodeType":"YulExpressionStatement","src":"13582:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13555:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13564:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13551:3:16"},"nodeType":"YulFunctionCall","src":"13551:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"13576:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13547:3:16"},"nodeType":"YulFunctionCall","src":"13547:32:16"},"nodeType":"YulIf","src":"13544:52:16"},{"nodeType":"YulVariableDeclaration","src":"13605:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13624:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13618:5:16"},"nodeType":"YulFunctionCall","src":"13618:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13609:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13665:5:16"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"13643:21:16"},"nodeType":"YulFunctionCall","src":"13643:28:16"},"nodeType":"YulExpressionStatement","src":"13643:28:16"},{"nodeType":"YulAssignment","src":"13680:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"13690:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13680:6:16"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13500:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13511:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13523:6:16","type":""}],"src":"13456:245:16"},{"body":{"nodeType":"YulBlock","src":"13880:171:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13897:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13908:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13890:6:16"},"nodeType":"YulFunctionCall","src":"13890:21:16"},"nodeType":"YulExpressionStatement","src":"13890:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13931:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13942:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13927:3:16"},"nodeType":"YulFunctionCall","src":"13927:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"13947:2:16","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13920:6:16"},"nodeType":"YulFunctionCall","src":"13920:30:16"},"nodeType":"YulExpressionStatement","src":"13920:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13970:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13981:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13966:3:16"},"nodeType":"YulFunctionCall","src":"13966:18:16"},{"hexValue":"546f6b656e207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"13986:23:16","type":"","value":"Token transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13959:6:16"},"nodeType":"YulFunctionCall","src":"13959:51:16"},"nodeType":"YulExpressionStatement","src":"13959:51:16"},{"nodeType":"YulAssignment","src":"14019:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14031:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14042:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14027:3:16"},"nodeType":"YulFunctionCall","src":"14027:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14019:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13857:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13871:4:16","type":""}],"src":"13706:345:16"},{"body":{"nodeType":"YulBlock","src":"14230:177:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14247:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14258:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14240:6:16"},"nodeType":"YulFunctionCall","src":"14240:21:16"},"nodeType":"YulExpressionStatement","src":"14240:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14281:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14292:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14277:3:16"},"nodeType":"YulFunctionCall","src":"14277:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14297:2:16","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14270:6:16"},"nodeType":"YulFunctionCall","src":"14270:30:16"},"nodeType":"YulExpressionStatement","src":"14270:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14320:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14331:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14316:3:16"},"nodeType":"YulFunctionCall","src":"14316:18:16"},{"hexValue":"4661696c656420746f207472616e7366657220616c6c204e465473","kind":"string","nodeType":"YulLiteral","src":"14336:29:16","type":"","value":"Failed to transfer all NFTs"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14309:6:16"},"nodeType":"YulFunctionCall","src":"14309:57:16"},"nodeType":"YulExpressionStatement","src":"14309:57:16"},{"nodeType":"YulAssignment","src":"14375:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14387:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14398:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14383:3:16"},"nodeType":"YulFunctionCall","src":"14383:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14375:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b8cc72502f0093626f62554052e6b81ff0fd1fac2661b2b0b249acbe883a8bb5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14207:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14221:4:16","type":""}],"src":"14056:351:16"},{"body":{"nodeType":"YulBlock","src":"14493:170:16","statements":[{"body":{"nodeType":"YulBlock","src":"14539:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14548:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14551:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14541:6:16"},"nodeType":"YulFunctionCall","src":"14541:12:16"},"nodeType":"YulExpressionStatement","src":"14541:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14514:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"14523:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14510:3:16"},"nodeType":"YulFunctionCall","src":"14510:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"14535:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14506:3:16"},"nodeType":"YulFunctionCall","src":"14506:32:16"},"nodeType":"YulIf","src":"14503:52:16"},{"nodeType":"YulVariableDeclaration","src":"14564:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14583:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14577:5:16"},"nodeType":"YulFunctionCall","src":"14577:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14568:5:16","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14627:5:16"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"14602:24:16"},"nodeType":"YulFunctionCall","src":"14602:31:16"},"nodeType":"YulExpressionStatement","src":"14602:31:16"},{"nodeType":"YulAssignment","src":"14642:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"14652:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14642:6:16"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14459:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14470:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14482:6:16","type":""}],"src":"14412:251:16"},{"body":{"nodeType":"YulBlock","src":"14842:163:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14859:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14870:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14852:6:16"},"nodeType":"YulFunctionCall","src":"14852:21:16"},"nodeType":"YulExpressionStatement","src":"14852:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14893:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14904:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14889:3:16"},"nodeType":"YulFunctionCall","src":"14889:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"14909:2:16","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14882:6:16"},"nodeType":"YulFunctionCall","src":"14882:30:16"},"nodeType":"YulExpressionStatement","src":"14882:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14932:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14943:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14928:3:16"},"nodeType":"YulFunctionCall","src":"14928:18:16"},{"hexValue":"4e6f74204e4654206f776e6572","kind":"string","nodeType":"YulLiteral","src":"14948:15:16","type":"","value":"Not NFT owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14921:6:16"},"nodeType":"YulFunctionCall","src":"14921:43:16"},"nodeType":"YulExpressionStatement","src":"14921:43:16"},{"nodeType":"YulAssignment","src":"14973:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14985:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14996:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14981:3:16"},"nodeType":"YulFunctionCall","src":"14981:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14973:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_fbc2e10076f6921a763c3f489052dd0b77e1bb855bd0a8a6901f7fbc1cc7125e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14819:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14833:4:16","type":""}],"src":"14668:337:16"},{"body":{"nodeType":"YulBlock","src":"15184:178:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15201:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15212:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15194:6:16"},"nodeType":"YulFunctionCall","src":"15194:21:16"},"nodeType":"YulExpressionStatement","src":"15194:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15235:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15246:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15231:3:16"},"nodeType":"YulFunctionCall","src":"15231:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"15251:2:16","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15224:6:16"},"nodeType":"YulFunctionCall","src":"15224:30:16"},"nodeType":"YulExpressionStatement","src":"15224:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15274:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15285:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15270:3:16"},"nodeType":"YulFunctionCall","src":"15270:18:16"},{"hexValue":"496e73756666696369656e7420746f6b656e7320696e207661756c74","kind":"string","nodeType":"YulLiteral","src":"15290:30:16","type":"","value":"Insufficient tokens in vault"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15263:6:16"},"nodeType":"YulFunctionCall","src":"15263:58:16"},"nodeType":"YulExpressionStatement","src":"15263:58:16"},{"nodeType":"YulAssignment","src":"15330:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15342:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15353:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15338:3:16"},"nodeType":"YulFunctionCall","src":"15338:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15330:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_047408cc66cd4bce0065fb1dea15e09cef2ca92140d126441538d3699cbe478a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15161:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15175:4:16","type":""}],"src":"15010:352:16"},{"body":{"nodeType":"YulBlock","src":"15496:145:16","statements":[{"nodeType":"YulAssignment","src":"15506:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15518:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15529:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15514:3:16"},"nodeType":"YulFunctionCall","src":"15514:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15506:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15548:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15563:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15579:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15584:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15575:3:16"},"nodeType":"YulFunctionCall","src":"15575:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"15588:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15571:3:16"},"nodeType":"YulFunctionCall","src":"15571:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15559:3:16"},"nodeType":"YulFunctionCall","src":"15559:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15541:6:16"},"nodeType":"YulFunctionCall","src":"15541:51:16"},"nodeType":"YulExpressionStatement","src":"15541:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15612:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15623:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15608:3:16"},"nodeType":"YulFunctionCall","src":"15608:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"15628:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15601:6:16"},"nodeType":"YulFunctionCall","src":"15601:34:16"},"nodeType":"YulExpressionStatement","src":"15601:34:16"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15457:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15468:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15476:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15487:4:16","type":""}],"src":"15367:274:16"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := calldataload(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_contract$_IERC222Token_$4537__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 288\n        mstore(headStart, _1)\n        tail := abi_encode_string(value0, add(headStart, _1))\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _2))\n        mstore(add(headStart, 64), and(value2, _2))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_contract$_IERC222NFT_$4517__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_b63528b7ff238c3d3d1fd93178bccfff510ad1c0b4577c21af8789c804e9e371__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not authorized admin\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_e7816a82000dd88ad42d481d0b9d57e317be6b70a8783407a941115869cbb947__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"NFT already in vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid admin address\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid recipient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Insufficient token balance\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_dac8f8f8cefeef49f92bd194a19eb3d0ca80d6935a78adb3e30c70d8a4b421bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"NFT not in vault\")\n        tail := add(headStart, 96)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_da2386093b42d90c04b4e0b9bfdcee221d41310af41e9f52a16ad6bdac1a7d6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Swapping is disabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Insufficient token amount\")\n        tail := add(headStart, 96)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_51e395ccdea9060dec5fa8fca2f2563cffa61f9f6f61f3f9c9b3895fa879ed58__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid token amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3fc3731ef9740462983b2951356ca0d33ce8125202f1d23502d5bbbba6300654__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"No NFTs available in vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_22b4ff83a89f0ed753d7c94d6a561988cc291cdbc12cc5944f7816bd89d4253e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Not enough NFTs in vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b8cc72502f0093626f62554052e6b81ff0fd1fac2661b2b0b249acbe883a8bb5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Failed to transfer all NFTs\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fbc2e10076f6921a763c3f489052dd0b77e1bb855bd0a8a6901f7fbc1cc7125e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not NFT owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_047408cc66cd4bce0065fb1dea15e09cef2ca92140d126441538d3699cbe478a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Insufficient tokens in vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4551":[{"length":32,"start":1170},{"length":32,"start":1536},{"length":32,"start":1867},{"length":32,"start":2335},{"length":32,"start":3225},{"length":32,"start":3569},{"length":32,"start":4023},{"length":32,"start":4153},{"length":32,"start":5227},{"length":32,"start":5420},{"length":32,"start":6127},{"length":32,"start":6527},{"length":32,"start":7144},{"length":32,"start":7274},{"length":32,"start":7483}],"4554":[{"length":32,"start":683},{"length":32,"start":1728},{"length":32,"start":2368},{"length":32,"start":2895},{"length":32,"start":5004},{"length":32,"start":6748}],"4558":[{"length":32,"start":1103}],"4560":[{"length":32,"start":746}],"4562":[{"length":32,"start":1064},{"length":32,"start":2044},{"length":32,"start":2401},{"length":32,"start":4551},{"length":32,"start":4666},{"length":32,"start":4860},{"length":32,"start":5629},{"length":32,"start":6392},{"length":32,"start":6681},{"length":32,"start":6783},{"length":32,"start":6824}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101da5760003560e01c8063922b807911610104578063b1e776e3116100a2578063e01af92c11610071578063e01af92c146104c7578063e91a7ca6146104da578063f2fde38b146104ed578063f851a4401461050057600080fd5b8063b1e776e314610471578063bbffa2d314610484578063d56d229d1461048d578063dd49756e146104b457600080fd5b80639e1a4d19116100de5780639e1a4d19146103e3578063a59aa5a6146103ec578063a98d499414610423578063adee8ff21461044a57600080fd5b8063922b80791461039b57806396cd06f8146103ae578063978cd40f146103c357600080fd5b80635b7f415c1161017c5780637304fa201161014b5780637304fa201461034d5780637f98aa711461035a5780638da5cb5b14610377578063917bb9981461038857600080fd5b80635b7f415c146102e55780636ddd17131461031e578063704b6c0214610332578063715018a61461034557600080fd5b8063150b7a02116101b8578063150b7a02146102435780632a33d6b21461027b578063505860881461028357806355a373d6146102a657600080fd5b8063029a3c5f146101df578063035dd06d146101f45780630af2c6ca1461022c575b600080fd5b6101f26101ed366004611f1c565b610518565b005b610217610202366004611f97565b60009081526003602052604090205460ff1690565b60405190151581526020015b60405180910390f35b61023560045481565b604051908152602001610223565b610262610251366004611fc5565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610223565b610235610746565b610217610291366004611f97565b60036020526000908152604090205460ff1681565b6102cd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610223565b61030c7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610223565b60075461021790600160a81b900460ff1681565b6101f2610340366004612064565b610849565b6101f26108f9565b6007546102179060ff1681565b61036261090d565b604051610223999897969594939291906120ce565b6000546001600160a01b03166102cd565b6101f261039636600461212f565b610a4a565b6101f26103a936600461212f565b610b7a565b6103b6610d08565b604051610223919061215b565b6103d66103d1366004611f97565b610d96565b604051610223919061216e565b61023560055481565b6103f4610f8e565b6040805196875260208701959095529385019290925215156060840152608083015260a082015260c001610223565b6102357f000000000000000000000000000000000000000000000000000000000000000081565b6102357f000000000000000000000000000000000000000000000000000000000000000081565b6101f261047f366004611f97565b6110cc565b61023560065481565b6102cd7f000000000000000000000000000000000000000000000000000000000000000081565b6101f26104c2366004611f97565b61116d565b6101f26104d53660046121c0565b6116db565b6101f26104e8366004611f97565b611777565b6101f26104fb366004612064565b611b3d565b6007546102cd9061010090046001600160a01b031681565b60075461010090046001600160a01b031633148061054057506000546001600160a01b031633145b6105655760405162461bcd60e51b815260040161055c906121dd565b60405180910390fd5b60005b828110156106ac5760008484838181106105845761058461220b565b60209081029290920135600081815260039093526040909220549192505060ff16156105e95760405162461bcd60e51b815260206004820152601460248201527313919508185b1c9958591e481a5b881d985d5b1d60621b604482015260640161055c565b604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e9061063990339030908690600401612221565b600060405180830381600087803b15801561065357600080fd5b505af1158015610667573d6000803e3d6000fd5b5050506000828152600360205260408120805460ff19166001179055600480549250906106938361225b565b91905055505080806106a49061225b565b915050610568565b508015610700576106e86001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611b78565b80600560008282546106fa9190612274565b90915550505b60408051838152602081018390527f0aaa76c8a42ec2b6c80e857ced5306e0fe0a1e94eb891a653c2aec9bced6bb84910160405180910390a1610741611bd8565b505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2309ff86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cb9190612287565b9050806000036107dd57600091505090565b60075460ff161561083b576004546000036107fa57600091505090565b7f000000000000000000000000000000000000000000000000000000000000000060045460055461082b91906122b6565b61083591906122b6565b91505090565b8060065461083591906122b6565b610851611dbe565b6001600160a01b03811661089f5760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b604482015260640161055c565b600780546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f101b8081ff3b56bbf45deb824d86a3b0fd38b7e3dd42421105cf8abe9106db0b90600090a35050565b610901611dbe565b61090b6000611deb565b565b606060008060008060008060008060027f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060045460055461098e610746565b600754875460ff80831692600160a81b9004169089906109ad906122ca565b80601f01602080910402602001604051908101604052809291908181526020018280546109d9906122ca565b8015610a265780601f106109fb57610100808354040283529160200191610a26565b820191906000526020600020905b815481529060010190602001808311610a0957829003601f168201915b50505050509850985098509850985098509850985098509850909192939495969798565b60075461010090046001600160a01b0316331480610a7257506000546001600160a01b031633145b610a8e5760405162461bcd60e51b815260040161055c906121dd565b6001600160a01b038216610ad85760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b604482015260640161055c565b600554811115610b2a5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e6365000000000000604482015260640161055c565b8060056000828254610b3c9190612304565b90915550610b7690506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168383611e3b565b5050565b60075461010090046001600160a01b0316331480610ba257506000546001600160a01b031633145b610bbe5760405162461bcd60e51b815260040161055c906121dd565b6001600160a01b038216610c085760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b604482015260640161055c565b60008181526003602052604090205460ff16610c595760405162461bcd60e51b815260206004820152601060248201526f139195081b9bdd081a5b881d985d5b1d60821b604482015260640161055c565b6000818152600360205260408120805460ff191690556004805491610c7d83612317565b9091555050604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e90610cd290309086908690600401612221565b600060405180830381600087803b158015610cec57600080fd5b505af1158015610d00573d6000803e3d6000fd5b505050505050565b60028054610d15906122ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610d41906122ca565b8015610d8e5780601f10610d6357610100808354040283529160200191610d8e565b820191906000526020600020905b815481529060010190602001808311610d7157829003601f168201915b505050505081565b60606000610da660045484611e6c565b67ffffffffffffffff811115610dbe57610dbe61232e565b604051908082528060200260200182016040528015610de7578160200160208202803683370190505b509050600060015b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332cb6b0c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e719190612287565b8111158015610e7f57508482105b15610ed95760008181526003602052604090205460ff1615610ec75780838381518110610eae57610eae61220b565b602090810291909101015281610ec38161225b565b9250505b80610ed18161225b565b915050610def565b508151811015610f875760008167ffffffffffffffff811115610efe57610efe61232e565b604051908082528060200260200182016040528015610f27578160200160208202803683370190505b50905060005b82811015610f7e57838181518110610f4757610f4761220b565b6020026020010151828281518110610f6157610f6161220b565b602090810291909101015280610f768161225b565b915050610f2d565b50949350505050565b5092915050565b600080600080600080600454600554610fa5610746565b600760009054906101000a900460ff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2309ff86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611013573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110379190612287565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332cb6b0c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b99190612287565b949b939a50919850965094509092509050565b60075461010090046001600160a01b03163314806110f457506000546001600160a01b031633145b6111105760405162461bcd60e51b815260040161055c906121dd565b80600660008282546111229190612274565b909155507f41c5e8c55061532e874271e77c72be737c2b190be0b0da85c4b6248689eac53a9050611151610746565b60405190815260200160405180910390a161116a611bd8565b50565b611175611e81565b600754600160a81b900460ff166111c55760405162461bcd60e51b815260206004820152601460248201527314ddd85c1c1a5b99c81a5cc8191a5cd8589b195960621b604482015260640161055c565b7f00000000000000000000000000000000000000000000000000000000000000008110156112355760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420746f6b656e20616d6f756e7400000000000000604482015260640161055c565b61125f7f000000000000000000000000000000000000000000000000000000000000000082612344565b156112a35760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081d1bdad95b88185b5bdd5b9d60621b604482015260640161055c565b6000600454116112f55760405162461bcd60e51b815260206004820152601a60248201527f4e6f204e46547320617661696c61626c6520696e207661756c74000000000000604482015260640161055c565b60006113217f0000000000000000000000000000000000000000000000000000000000000000836122b6565b90506004548111156113755760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f756768204e46547320696e207661756c740000000000000000604482015260640161055c565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906113c590339030908790600401612221565b6020604051808303816000875af11580156113e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114089190612358565b61144c5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161055c565b816005600082825461145e9190612274565b909155506000905060015b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332cb6b0c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114eb9190612287565b81111580156114f957508282105b156116465760008181526003602052604090205460ff161561163457604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e9061156590309033908690600401612221565b600060405180830381600087803b15801561157f57600080fd5b505af1158015611593573d6000803e3d6000fd5b5050506000828152600360205260408120805460ff19169055600480549250906115bc83612317565b919050555081806115cc9061225b565b92505080336001600160a01b03167f0a08eebabec640fe759f6e5d61d6377cfe1f1367ae220b5f81a44a7b74c9be347f000000000000000000000000000000000000000000000000000000000000000060405161162b91815260200190565b60405180910390a35b8061163e8161225b565b915050611469565b508181146116965760405162461bcd60e51b815260206004820152601b60248201527f4661696c656420746f207472616e7366657220616c6c204e4654730000000000604482015260640161055c565b7f41c5e8c55061532e874271e77c72be737c2b190be0b0da85c4b6248689eac53a6116bf610746565b60405190815260200160405180910390a1505061116a60018055565b60075461010090046001600160a01b031633148061170357506000546001600160a01b031633145b61171f5760405162461bcd60e51b815260040161055c906121dd565b60078054821515600160a81b0260ff60a81b199091161790556040517fd101cbf49d2d7d396082a0e64b8dcc4e0b2a280bdccc3855f1d1fe8cf9d0f0e29061176c90831515815260200190565b60405180910390a150565b61177f611e81565b600754600160a81b900460ff166117cf5760405162461bcd60e51b815260206004820152601460248201527314ddd85c1c1a5b99c81a5cc8191a5cd8589b195960621b604482015260640161055c565b6040516331a9108f60e11b81526004810182905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015611836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185a9190612375565b6001600160a01b0316146118a05760405162461bcd60e51b815260206004820152600d60248201526c2737ba1027232a1037bbb732b960991b604482015260640161055c565b60008181526003602052604090205460ff16156118f65760405162461bcd60e51b815260206004820152601460248201527313919508185b1c9958591e481a5b881d985d5b1d60621b604482015260640161055c565b7f000000000000000000000000000000000000000000000000000000000000000060055410156119685760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e7320696e207661756c7400000000604482015260640161055c565b604051632142170760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342842e0e906119b890339030908690600401612221565b600060405180830381600087803b1580156119d257600080fd5b505af11580156119e6573d6000803e3d6000fd5b5050506000828152600360205260408120805460ff1916600117905560048054925090611a128361225b565b91905055507f000000000000000000000000000000000000000000000000000000000000000060056000828254611a499190612304565b90915550611aa390506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f0000000000000000000000000000000000000000000000000000000000000000611e3b565b6040517f00000000000000000000000000000000000000000000000000000000000000008152819033907f494c78ec0278e768f6779f083e8c6b4691758074367b4e7c6355aa772ed6d7049060200160405180910390a37f41c5e8c55061532e874271e77c72be737c2b190be0b0da85c4b6248689eac53a611b23610746565b60405190815260200160405180910390a161116a60018055565b611b45611dbe565b6001600160a01b038116611b6f57604051631e4fbdf760e01b81526000600482015260240161055c565b61116a81611deb565b611bd284856001600160a01b03166323b872dd868686604051602401611ba093929190612221565b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611eab565b50505050565b60075460ff16158015611ced57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332cb6b0c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c689190612287565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a2309ff86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cea9190612287565b10155b1561090b576007805460ff191660011790556040805163144613ff60e31b815290517f2f32e519b30d0f52c856843502cc5b899f08f78da6adc87ddedb8d70c7365b1f916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163a2309ff8916004808201926020929091908290030181865afa158015611d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dab9190612287565b60405190815260200160405180910390a1565b6000546001600160a01b0316331461090b5760405163118cdaa760e01b815233600482015260240161055c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0383811660248301526044820183905261074191859182169063a9059cbb90606401611ba0565b60008282188284100282185b90505b92915050565b600260015403611ea457604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b600080602060008451602086016000885af180611ece576040513d6000823e3d81fd5b50506000513d91508115611ee6578060011415611ef3565b6001600160a01b0384163b155b15611bd257604051635274afe760e01b81526001600160a01b038516600482015260240161055c565b600080600060408486031215611f3157600080fd5b833567ffffffffffffffff80821115611f4957600080fd5b818601915086601f830112611f5d57600080fd5b813581811115611f6c57600080fd5b8760208260051b8501011115611f8157600080fd5b6020928301989097509590910135949350505050565b600060208284031215611fa957600080fd5b5035919050565b6001600160a01b038116811461116a57600080fd5b600080600080600060808688031215611fdd57600080fd5b8535611fe881611fb0565b94506020860135611ff881611fb0565b935060408601359250606086013567ffffffffffffffff8082111561201c57600080fd5b818801915088601f83011261203057600080fd5b81358181111561203f57600080fd5b89602082850101111561205157600080fd5b9699959850939650602001949392505050565b60006020828403121561207657600080fd5b813561208181611fb0565b9392505050565b6000815180845260005b818110156120ae57602081850181015186830182015201612092565b506000602082860101526020601f19601f83011685010191505092915050565b60006101208083526120e28184018d612088565b6001600160a01b039b8c16602085015299909a166040830152506060810196909652608086019490945260a085019290925260c0840152151560e083015215156101009091015292915050565b6000806040838503121561214257600080fd5b823561214d81611fb0565b946020939093013593505050565b602081526000611e786020830184612088565b6020808252825182820181905260009190848201906040850190845b818110156121a65783518352928401929184019160010161218a565b50909695505050505050565b801515811461116a57600080fd5b6000602082840312156121d257600080fd5b8135612081816121b2565b6020808252601490820152732737ba1030baba3437b934bd32b21030b236b4b760611b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b60006001820161226d5761226d612245565b5060010190565b80820180821115611e7b57611e7b612245565b60006020828403121561229957600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b6000826122c5576122c56122a0565b500490565b600181811c908216806122de57607f821691505b6020821081036122fe57634e487b7160e01b600052602260045260246000fd5b50919050565b81810381811115611e7b57611e7b612245565b60008161232657612326612245565b506000190190565b634e487b7160e01b600052604160045260246000fd5b600082612353576123536122a0565b500690565b60006020828403121561236a57600080fd5b8151612081816121b2565b60006020828403121561238757600080fd5b815161208181611fb056fea264697066735822122030a05a3147a9f145ba8ad437cfb1597813bd43ea197a1cafedb34d17a754836764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x922B8079 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB1E776E3 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE01AF92C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE01AF92C EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xE91A7CA6 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1E776E3 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0xBBFFA2D3 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0xDD49756E EQ PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E1A4D19 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9E1A4D19 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0xA59AA5A6 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xA98D4994 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xADEE8FF2 EQ PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x922B8079 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x96CD06F8 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x978CD40F EQ PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5B7F415C GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x7304FA20 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x7304FA20 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x7F98AA71 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x917BB998 EQ PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5B7F415C EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x6DDD1713 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x2A33D6B2 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x50586088 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29A3C5F EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x35DD06D EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xAF2C6CA EQ PUSH2 0x22C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x223 JUMP JUMPDEST PUSH2 0x262 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC5 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x223 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x217 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2CD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x223 JUMP JUMPDEST PUSH2 0x30C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x223 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x217 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x217 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x212F JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x212F JUMP JUMPDEST PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x3B6 PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x215B JUMP JUMPDEST PUSH2 0x3D6 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0xD96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x216E JUMP JUMPDEST PUSH2 0x235 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F4 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x223 JUMP JUMPDEST PUSH2 0x235 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x235 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2CD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x4C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0x116D JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x4D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C0 JUMP JUMPDEST PUSH2 0x16DB JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F97 JUMP JUMPDEST PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x4FB CALLDATASIZE PUSH1 0x4 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x2CD SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x540 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x584 JUMPI PUSH2 0x584 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13919508185B1C9958591E481A5B881D985D5B1D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x639 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x667 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 POP SWAP1 PUSH2 0x693 DUP4 PUSH2 0x225B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP DUP1 DUP1 PUSH2 0x6A4 SWAP1 PUSH2 0x225B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x568 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x700 JUMPI PUSH2 0x6E8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x1B78 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x2274 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xAAA76C8A42EC2B6C80E857CED5306E0FE0A1E94EB891A653C2AEC9BCED6BB84 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x741 PUSH2 0x1BD8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA2309FF8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x7DD JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x83B JUMPI PUSH1 0x4 SLOAD PUSH1 0x0 SUB PUSH2 0x7FA JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH2 0x851 PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x101B8081FF3B56BBF45DEB824D86A3B0FD38B7E3DD42421105CF8ABE9106DB0B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x901 PUSH2 0x1DBE JUMP JUMPDEST PUSH2 0x90B PUSH1 0x0 PUSH2 0x1DEB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x98E PUSH2 0x746 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP8 SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV AND SWAP1 DUP10 SWAP1 PUSH2 0x9AD SWAP1 PUSH2 0x22CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D9 SWAP1 PUSH2 0x22CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xA72 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT ISZERO PUSH2 0xB2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x2304 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB76 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x1E3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xBA2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xBBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139195081B9BDD081A5B881D985D5B1D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP2 PUSH2 0xC7D DUP4 PUSH2 0x2317 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0xCD2 SWAP1 ADDRESS SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xD15 SWAP1 PUSH2 0x22CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD41 SWAP1 PUSH2 0x22CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD8E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD63 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD8E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD71 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xDA6 PUSH1 0x4 SLOAD DUP5 PUSH2 0x1E6C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDBE JUMPI PUSH2 0xDBE PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDE7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32CB6B0C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE71 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xE7F JUMPI POP DUP5 DUP3 LT JUMPDEST ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEC7 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xEAE JUMPI PUSH2 0xEAE PUSH2 0x220B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0xEC3 DUP2 PUSH2 0x225B JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0xED1 DUP2 PUSH2 0x225B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDEF JUMP JUMPDEST POP DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xF87 JUMPI PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFE JUMPI PUSH2 0xEFE PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF27 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF7E JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xF47 JUMPI PUSH2 0xF47 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF61 JUMPI PUSH2 0xF61 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xF76 DUP2 PUSH2 0x225B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF2D JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0xFA5 PUSH2 0x746 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA2309FF8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1013 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32CB6B0C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1095 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST SWAP5 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP SWAP7 POP SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x10F4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x21DD JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1122 SWAP2 SWAP1 PUSH2 0x2274 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH32 0x41C5E8C55061532E874271E77C72BE737C2B190BE0B0DA85C4B6248689EAC53A SWAP1 POP PUSH2 0x1151 PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x116A PUSH2 0x1BD8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1175 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DDD85C1C1A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x1235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E20616D6F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH2 0x125F PUSH32 0x0 DUP3 PUSH2 0x2344 JUMP JUMPDEST ISZERO PUSH2 0x12A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081D1BDAD95B88185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F204E46547320617661696C61626C6520696E207661756C74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1321 PUSH32 0x0 DUP4 PUSH2 0x22B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768204E46547320696E207661756C740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x13C5 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1408 SWAP2 SWAP1 PUSH2 0x2358 JUMP JUMPDEST PUSH2 0x144C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x2274 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH1 0x1 JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32CB6B0C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14EB SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x14F9 JUMPI POP DUP3 DUP3 LT JUMPDEST ISZERO PUSH2 0x1646 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1634 JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x1565 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x157F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1593 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 POP SWAP1 PUSH2 0x15BC DUP4 PUSH2 0x2317 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 DUP1 PUSH2 0x15CC SWAP1 PUSH2 0x225B JUMP JUMPDEST SWAP3 POP POP DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA08EEBABEC640FE759F6E5D61D6377CFE1F1367AE220B5F81A44A7B74C9BE34 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0x162B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP1 PUSH2 0x163E DUP2 PUSH2 0x225B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1469 JUMP JUMPDEST POP DUP2 DUP2 EQ PUSH2 0x1696 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207472616E7366657220616C6C204E4654730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH32 0x41C5E8C55061532E874271E77C72BE737C2B190BE0B0DA85C4B6248689EAC53A PUSH2 0x16BF PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x116A PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1703 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x171F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD101CBF49D2D7D396082A0E64B8DCC4E0B2A280BDCCC3855F1D1FE8CF9D0F0E2 SWAP1 PUSH2 0x176C SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x177F PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x17CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DDD85C1C1A5B99C81A5CC8191A5CD8589B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1836 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x185A SWAP2 SWAP1 PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x18A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA1027232A1037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13919508185B1C9958591E481A5B881D985D5B1D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH32 0x0 PUSH1 0x5 SLOAD LT ISZERO PUSH2 0x1968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E7320696E207661756C7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x19B8 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 POP SWAP1 PUSH2 0x1A12 DUP4 PUSH2 0x225B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x0 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A49 SWAP2 SWAP1 PUSH2 0x2304 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1AA3 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER PUSH32 0x0 PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 DUP2 MSTORE DUP2 SWAP1 CALLER SWAP1 PUSH32 0x494C78EC0278E768F6779F083E8C6B4691758074367B4E7C6355AA772ED6D704 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x41C5E8C55061532E874271E77C72BE737C2B190BE0B0DA85C4B6248689EAC53A PUSH2 0x1B23 PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x116A PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x1B45 PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55C JUMP JUMPDEST PUSH2 0x116A DUP2 PUSH2 0x1DEB JUMP JUMPDEST PUSH2 0x1BD2 DUP5 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1BA0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1CED JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32CB6B0C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C68 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA2309FF8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CC6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CEA SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST LT ISZERO JUMPDEST ISZERO PUSH2 0x90B JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x144613FF PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH32 0x2F32E519B30D0F52C856843502CC5B899F08F78DA6ADC87DDEDB8D70C7365B1F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0xA2309FF8 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DAB SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x741 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x1BA0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 XOR DUP3 DUP5 LT MUL DUP3 XOR JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1EA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1ECE JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x1EE6 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1EF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1BD2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1F6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1F81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1FE8 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1FF8 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x201C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x203F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2081 DUP2 PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20AE JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2092 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 MSTORE PUSH2 0x20E2 DUP2 DUP5 ADD DUP14 PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP10 SWAP1 SWAP11 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x214D DUP2 PUSH2 0x1FB0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E78 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21A6 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x218A JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x116A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2081 DUP2 PUSH2 0x21B2 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2737BA1030BABA3437B934BD32B21030B236B4B7 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x226D JUMPI PUSH2 0x226D PUSH2 0x2245 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1E7B JUMPI PUSH2 0x1E7B PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22C5 JUMPI PUSH2 0x22C5 PUSH2 0x22A0 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x22DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1E7B JUMPI PUSH2 0x1E7B PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2326 JUMPI PUSH2 0x2326 PUSH2 0x2245 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2353 JUMPI PUSH2 0x2353 PUSH2 0x22A0 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x236A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2081 DUP2 PUSH2 0x21B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2081 DUP2 PUSH2 0x1FB0 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS LOG0 GAS BALANCE SELFBALANCE 0xA9 CALL GASLIMIT 0xBA DUP11 0xD4 CALLDATACOPY 0xCF 0xB1 MSIZE PUSH25 0x13BD43EA197A1CAFEDB34D17A754836764736F6C6343000814 STOP CALLER ","sourceMap":"1481:11964:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6909:822;;;;;;:::i;:::-;;:::i;:::-;;9052:108;;;;;;:::i;:::-;9114:4;9137:16;;;:7;:16;;;;;;;;;9052:108;;;;1058:14:16;;1051:22;1033:41;;1021:2;1006:18;9052:108:15;;;;;;;;2052:23;;;;;;;;;1231:25:16;;;1219:2;1204:18;2052:23:15;1085:177:16;12519:239:15;;;;;;:::i;:::-;-1:-1:-1;;;12519:239:15;;;;;;;;;;;-1:-1:-1;;;;;;2506:33:16;;;2488:52;;2476:2;2461:18;12519:239:15;2344:202:16;7864:523:15;;;:::i;1974:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1654:43;;;;;;;;-1:-1:-1;;;;;2736:32:16;;;2718:51;;2706:2;2691:18;1654:43:15;2551:224:16;1856:37:15;;;;;;;;2952:4:16;2940:17;;;2922:36;;2910:2;2895:18;1856:37:15;2780:184:16;2403:30:15;;;;;-1:-1:-1;;;2403:30:15;;;;;;10939:253;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;2285:26:15:-;;;;;;;;;12828:615;;;:::i;:::-;;;;;;;;;;;;;;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;11628:320:15;;;;;;:::i;:::-;;:::i;12122:325::-;;;;;;:::i;:::-;;:::i;1732:22::-;;;:::i;:::-;;;;;;;:::i;9360:726::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2118:27::-;;;;;;8442:448;;;:::i;:::-;;;;6216:25:16;;;6272:2;6257:18;;6250:34;;;;6300:18;;;6293:34;;;;6370:14;6363:22;6358:2;6343:18;;6336:50;6417:3;6402:19;;6395:35;6461:3;6446:19;;6439:35;6203:3;6188:19;8442:448:15;5935:545:16;1899:45:15;;;;;1811:39;;;;;10238:265;;;;;;:::i;:::-;;:::i;2215:29::-;;;;;;1609:39;;;;;5382:1330;;;;;;:::i;:::-;;:::i;11310:136::-;;;;;;:::i;:::-;;:::i;4388:812::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2377:20:15:-;;;;;;;;-1:-1:-1;;;;;2377:20:15;;;6909:822;3225:5;;;;;-1:-1:-1;;;;;3225:5:15;3211:10;:19;;:44;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;3234:10:15;:21;3211:44;3203:77;;;;-1:-1:-1;;;3203:77:15;;;;;;;:::i;:::-;;;;;;;;;7037:9:::1;7032:312;7052:17:::0;;::::1;7032:312;;;7090:15;7108:6;;7115:1;7108:9;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;7140:16;::::0;;;:7:::1;:16:::0;;;;;;;;7108:9;;-1:-1:-1;;7140:16:15::1;;7139:17;7131:50;;;::::0;-1:-1:-1;;;7131:50:15;;7764:2:16;7131:50:15::1;::::0;::::1;7746:21:16::0;7803:2;7783:18;;;7776:30;-1:-1:-1;;;7822:18:16;;;7815:50;7882:18;;7131:50:15::1;7562:344:16::0;7131:50:15::1;7208:64;::::0;-1:-1:-1;;;7208:64:15;;-1:-1:-1;;;;;7208:11:15::1;:28;::::0;::::1;::::0;:64:::1;::::0;7237:10:::1;::::0;7257:4:::1;::::0;7264:7;;7208:64:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;7286:16:15::1;::::0;;;:7:::1;:16;::::0;;;;:23;;-1:-1:-1;;7286:23:15::1;7305:4;7286:23;::::0;;7323:8:::1;:10:::0;;;-1:-1:-1;7323:8:15;:10:::1;::::0;::::1;:::i;:::-;;;;;;7076:268;7071:3;;;;;:::i;:::-;;;;7032:312;;;-1:-1:-1::0;7392:15:15;;7388:174:::1;;7423:87;-1:-1:-1::0;;;;;7438:13:15::1;7423:47;7471:10;7491:4;7498:11:::0;7423:47:::1;:87::i;:::-;7540:11;7524:12;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7388:174:15::1;7585:42;::::0;;8867:25:16;;;8923:2;8908:18;;8901:34;;;7585:42:15::1;::::0;8840:18:16;7585:42:15::1;;;;;;;7702:22;:20;:22::i;:::-;6909:822:::0;;;:::o;7864:523::-;7910:7;7929:17;7949:11;-1:-1:-1;;;;;7949:23:15;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7929:45;;7988:9;8001:1;7988:14;7984:28;;8011:1;8004:8;;;7864:523;:::o;7984:28::-;8035:14;;;;8031:350;;;8155:8;;8167:1;8155:13;8151:27;;8177:1;8170:8;;;7864:523;:::o;8151:27::-;8225:20;8214:8;;8199:12;;:23;;;;:::i;:::-;:46;;;;:::i;:::-;8192:53;;;7864:523;:::o;8031:350::-;8361:9;8344:14;;:26;;;;:::i;10939:253::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;11012:22:15;::::1;11004:56;;;::::0;-1:-1:-1;;;11004:56:15;;9594:2:16;11004:56:15::1;::::0;::::1;9576:21:16::0;9633:2;9613:18;;;9606:30;-1:-1:-1;;;9652:18:16;;;9645:51;9713:18;;11004:56:15::1;9392:345:16::0;11004:56:15::1;11098:5;::::0;;-1:-1:-1;;;;;11113:16:15;;::::1;11098:5;11113:16:::0;;::::1;-1:-1:-1::0;;;;;;11113:16:15;::::1;;::::0;;;11153:32:::1;::::0;11098:5;;;::::1;;::::0;;;11153:32:::1;::::0;11079:16:::1;::::0;11153:32:::1;10994:198;10939:253:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;12828:615:15:-;12884:27;12921:18;12949:20;12979:23;13012:16;13038:18;13066:25;13101:15;13126:20;13184:8;13214:11;13248:13;13276:20;13310:8;;13332:12;;13358:15;:13;:15::i;:::-;13387:14;;13163:273;;13387:14;;;;;-1:-1:-1;;;13415:11:15;;;;13163:273;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12828:615;;;;;;;;;:::o;11628:320::-;3225:5;;;;;-1:-1:-1;;;;;3225:5:15;3211:10;:19;;:44;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;3234:10:15;:21;3211:44;3203:77;;;;-1:-1:-1;;;3203:77:15;;;;;;;:::i;:::-;-1:-1:-1;;;;;11726:16:15;::::1;11718:46;;;::::0;-1:-1:-1;;;11718:46:15;;10329:2:16;11718:46:15::1;::::0;::::1;10311:21:16::0;10368:2;10348:18;;;10341:30;-1:-1:-1;;;10387:18:16;;;10380:47;10444:18;;11718:46:15::1;10127:341:16::0;11718:46:15::1;11792:12;;11782:6;:22;;11774:61;;;::::0;-1:-1:-1;;;11774:61:15;;10675:2:16;11774:61:15::1;::::0;::::1;10657:21:16::0;10714:2;10694:18;;;10687:30;10753:28;10733:18;;;10726:56;10799:18;;11774:61:15::1;10473:350:16::0;11774:61:15::1;11870:6;11854:12;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;11886:55:15::1;::::0;-1:-1:-1;;;;;;11901:13:15::1;11886:43;11930:2:::0;11934:6;11886:43:::1;:55::i;:::-;11628:320:::0;;:::o;12122:325::-;3225:5;;;;;-1:-1:-1;;;;;3225:5:15;3211:10;:19;;:44;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;3234:10:15;:21;3211:44;3203:77;;;;-1:-1:-1;;;3203:77:15;;;;;;;:::i;:::-;-1:-1:-1;;;;;12218:16:15;::::1;12210:46;;;::::0;-1:-1:-1;;;12210:46:15;;10329:2:16;12210:46:15::1;::::0;::::1;10311:21:16::0;10368:2;10348:18;;;10341:30;-1:-1:-1;;;10387:18:16;;;10380:47;10444:18;;12210:46:15::1;10127:341:16::0;12210:46:15::1;12274:16;::::0;;;:7:::1;:16;::::0;;;;;::::1;;12266:45;;;::::0;-1:-1:-1;;;12266:45:15;;11163:2:16;12266:45:15::1;::::0;::::1;11145:21:16::0;11202:2;11182:18;;;11175:30;-1:-1:-1;;;11221:18:16;;;11214:46;11277:18;;12266:45:15::1;10961:340:16::0;12266:45:15::1;12349:5;12330:16:::0;;;:7:::1;:16;::::0;;;;:24;;-1:-1:-1;;12330:24:15::1;::::0;;12364:8:::1;:10:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;12384:56:15::1;::::0;-1:-1:-1;;;12384:56:15;;-1:-1:-1;;;;;12384:11:15::1;:28;::::0;::::1;::::0;:56:::1;::::0;12421:4:::1;::::0;12428:2;;12432:7;;12384:56:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12122:325:::0;;:::o;1732:22::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9360:726::-;9427:16;9455:23;9495:30;9504:8;;9514:10;9495:8;:30::i;:::-;9481:45;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9481:45:15;-1:-1:-1;9455:71:15;-1:-1:-1;9536:13:15;9589:1;9572:193;9597:11;-1:-1:-1;;;;;9597:22:15;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9592:1;:29;;:51;;;;;9633:10;9625:5;:18;9592:51;9572:193;;;9668:10;;;;:7;:10;;;;;;;;9664:91;;;9714:1;9698:6;9705:5;9698:13;;;;;;;;:::i;:::-;;;;;;;;;;:17;9733:7;;;;:::i;:::-;;;;9664:91;9645:3;;;;:::i;:::-;;;;9572:193;;;;9829:6;:13;9821:5;:21;9817:231;;;9858:24;9899:5;9885:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9885:20:15;;9858:47;;9924:9;9919:91;9943:5;9939:1;:9;9919:91;;;9986:6;9993:1;9986:9;;;;;;;;:::i;:::-;;;;;;;9973:7;9981:1;9973:10;;;;;;;;:::i;:::-;;;;;;;;;;:22;9950:3;;;;:::i;:::-;;;;9919:91;;;-1:-1:-1;10030:7:15;9360:726;-1:-1:-1;;;;9360:726:15:o;9817:231::-;-1:-1:-1;10073:6:15;9360:726;-1:-1:-1;;9360:726:15:o;8442:448::-;8499:19;8528:21;8559:18;8587:17;8614:23;8647:20;8705:8;;8727:12;;8753:15;:13;:15::i;:::-;8782:14;;;;;;;;;;;8810:11;-1:-1:-1;;;;;8810:23:15;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8849:11;-1:-1:-1;;;;;8849:22:15;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8684:199;;;;-1:-1:-1;8684:199:15;;-1:-1:-1;8684:199:15;-1:-1:-1;8684:199:15;-1:-1:-1;8684:199:15;;-1:-1:-1;8442:448:15;-1:-1:-1;8442:448:15:o;10238:265::-;3225:5;;;;;-1:-1:-1;;;;;3225:5:15;3211:10;:19;;:44;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;3234:10:15;:21;3211:44;3203:77;;;;-1:-1:-1;;;3203:77:15;;;;;;;:::i;:::-;10335:15:::1;10317:14;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;10365:34:15::1;::::0;-1:-1:-1;10383:15:15::1;:13;:15::i;:::-;10365:34;::::0;1231:25:16;;;1219:2;1204:18;10365:34:15::1;;;;;;;10474:22;:20;:22::i;:::-;10238:265:::0;:::o;5382:1330::-;2500:21:11;:19;:21::i;:::-;3347:11:15::1;::::0;-1:-1:-1;;;3347:11:15;::::1;;;3339:44;;;::::0;-1:-1:-1;;;3339:44:15;;11781:2:16;3339:44:15::1;::::0;::::1;11763:21:16::0;11820:2;11800:18;;;11793:30;-1:-1:-1;;;11839:18:16;;;11832:50;11899:18;;3339:44:15::1;11579:344:16::0;3339:44:15::1;5495:20:::2;5480:11;:35;;5472:73;;;::::0;-1:-1:-1;;;5472:73:15;;12130:2:16;5472:73:15::2;::::0;::::2;12112:21:16::0;12169:2;12149:18;;;12142:30;12208:27;12188:18;;;12181:55;12253:18;;5472:73:15::2;11928:349:16::0;5472:73:15::2;5563:34;5577:20;5563:11:::0;:34:::2;:::i;:::-;:39:::0;5555:72:::2;;;::::0;-1:-1:-1;;;5555:72:15;;12601:2:16;5555:72:15::2;::::0;::::2;12583:21:16::0;12640:2;12620:18;;;12613:30;-1:-1:-1;;;12659:18:16;;;12652:50;12719:18;;5555:72:15::2;12399:344:16::0;5555:72:15::2;5656:1;5645:8;;:12;5637:51;;;::::0;-1:-1:-1;;;5637:51:15;;12950:2:16;5637:51:15::2;::::0;::::2;12932:21:16::0;12989:2;12969:18;;;12962:30;13028:28;13008:18;;;13001:56;13074:18;;5637:51:15::2;12748:350:16::0;5637:51:15::2;5707:17;5727:34;5741:20;5727:11:::0;:34:::2;:::i;:::-;5707:54;;5792:8;;5779:9;:21;;5771:58;;;::::0;-1:-1:-1;;;5771:58:15;;13305:2:16;5771:58:15::2;::::0;::::2;13287:21:16::0;13344:2;13324:18;;;13317:30;13383:26;13363:18;;;13356:54;13427:18;;5771:58:15::2;13103:348:16::0;5771:58:15::2;5895:66;::::0;-1:-1:-1;;;5895:66:15;;-1:-1:-1;;;;;5895:13:15::2;:26;::::0;::::2;::::0;:66:::2;::::0;5922:10:::2;::::0;5942:4:::2;::::0;5949:11;;5895:66:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5887:100;;;::::0;-1:-1:-1;;;5887:100:15;;13908:2:16;5887:100:15::2;::::0;::::2;13890:21:16::0;13947:2;13927:18;;;13920:30;-1:-1:-1;;;13966:18:16;;;13959:51;14027:18;;5887:100:15::2;13706:345:16::0;5887:100:15::2;6054:11;6038:12;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;6117:23:15::2;::::0;-1:-1:-1;6171:1:15::2;6154:416;6179:11;-1:-1:-1::0;;;;;6179:22:15::2;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6174:1;:29;;:60;;;;;6225:9;6207:15;:27;6174:60;6154:416;;;6259:10;::::0;;;:7:::2;:10;::::0;;;;;::::2;;6255:305;;;6289:58;::::0;-1:-1:-1;;;6289:58:15;;-1:-1:-1;;;;;6289:11:15::2;:28;::::0;::::2;::::0;:58:::2;::::0;6326:4:::2;::::0;6333:10:::2;::::0;6345:1;;6289:58:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;6378:5:15::2;6365:10:::0;;;:7:::2;:10;::::0;;;;:18;;-1:-1:-1;;6365:18:15::2;::::0;;6401:8:::2;:10:::0;;;-1:-1:-1;6401:8:15;:10:::2;::::0;::::2;:::i;:::-;;;;;;6429:17;;;;;:::i;:::-;;;;6543:1;6509:10;-1:-1:-1::0;;;;;6486:59:15::2;;6521:20;6486:59;;;;1231:25:16::0;;1219:2;1204:18;;1085:177;6486:59:15::2;;;;;;;;6255:305;6236:3:::0;::::2;::::0;::::2;:::i;:::-;;;;6154:416;;;;6615:9;6596:15;:28;6588:68;;;::::0;-1:-1:-1;;;6588:68:15;;14258:2:16;6588:68:15::2;::::0;::::2;14240:21:16::0;14297:2;14277:18;;;14270:30;14336:29;14316:18;;;14309:57;14383:18;;6588:68:15::2;14056:351:16::0;6588:68:15::2;6671:34;6689:15;:13;:15::i;:::-;6671:34;::::0;1231:25:16;;;1219:2;1204:18;6671:34:15::2;;;;;;;5462:1250;;2542:20:11::0;1857:1;3068:21;;2888:208;11310:136:15;3225:5;;;;;-1:-1:-1;;;;;3225:5:15;3211:10;:19;;:44;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;3234:10:15;:21;3211:44;3203:77;;;;-1:-1:-1;;;3203:77:15;;;;;;;:::i;:::-;11377:11:::1;:21:::0;;;::::1;;-1:-1:-1::0;;;11377:21:15::1;-1:-1:-1::0;;;;11377:21:15;;::::1;;::::0;;11413:26:::1;::::0;::::1;::::0;::::1;::::0;11391:7;1058:14:16;1051:22;1033:41;;1021:2;1006:18;;893:187;11413:26:15::1;;;;;;;;11310:136:::0;:::o;4388:812::-;2500:21:11;:19;:21::i;:::-;3347:11:15::1;::::0;-1:-1:-1;;;3347:11:15;::::1;;;3339:44;;;::::0;-1:-1:-1;;;3339:44:15;;11781:2:16;3339:44:15::1;::::0;::::1;11763:21:16::0;11820:2;11800:18;;;11793:30;-1:-1:-1;;;11839:18:16;;;11832:50;11899:18;;3339:44:15::1;11579:344:16::0;3339:44:15::1;4479:28:::2;::::0;-1:-1:-1;;;4479:28:15;;::::2;::::0;::::2;1231:25:16::0;;;4511:10:15::2;::::0;-1:-1:-1;;;;;4479:11:15::2;:19;::::0;::::2;::::0;1204:18:16;;4479:28:15::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4479:42:15::2;;4471:68;;;::::0;-1:-1:-1;;;4471:68:15;;14870:2:16;4471:68:15::2;::::0;::::2;14852:21:16::0;14909:2;14889:18;;;14882:30;-1:-1:-1;;;14928:18:16;;;14921:43;14981:18;;4471:68:15::2;14668:337:16::0;4471:68:15::2;4558:16;::::0;;;:7:::2;:16;::::0;;;;;::::2;;4557:17;4549:50;;;::::0;-1:-1:-1;;;4549:50:15;;7764:2:16;4549:50:15::2;::::0;::::2;7746:21:16::0;7803:2;7783:18;;;7776:30;-1:-1:-1;;;7822:18:16;;;7815:50;7882:18;;4549:50:15::2;7562:344:16::0;4549:50:15::2;4633:20;4617:12;;:36;;4609:77;;;::::0;-1:-1:-1;;;4609:77:15;;15212:2:16;4609:77:15::2;::::0;::::2;15194:21:16::0;15251:2;15231:18;;;15224:30;15290;15270:18;;;15263:58;15338:18;;4609:77:15::2;15010:352:16::0;4609:77:15::2;4730:64;::::0;-1:-1:-1;;;4730:64:15;;-1:-1:-1;;;;;4730:11:15::2;:28;::::0;::::2;::::0;:64:::2;::::0;4759:10:::2;::::0;4779:4:::2;::::0;4786:7;;4730:64:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;4837:16:15::2;::::0;;;:7:::2;:16;::::0;;;;:23;;-1:-1:-1;;4837:23:15::2;4856:4;4837:23;::::0;;4870:8:::2;:10:::0;;;-1:-1:-1;4870:8:15;:10:::2;::::0;::::2;:::i;:::-;;;;;;4906:20;4890:12;;:36;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4981:77:15::2;::::0;-1:-1:-1;;;;;;4996:13:15::2;4981:43;5025:10;5037:20;4981:43;:77::i;:::-;5082:62;::::0;5123:20:::2;1231:25:16::0;;5114:7:15;;5102:10:::2;::::0;5082:62:::2;::::0;1219:2:16;1204:18;5082:62:15::2;;;;;;;5159:34;5177:15;:13;:15::i;:::-;5159:34;::::0;1231:25:16;;;1219:2;1204:18;5159:34:15::2;;;;;;;2542:20:11::0;1857:1;3068:21;;2888:208;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2718:51:16::0;2691:18;;2672:31:0::1;2551:224:16::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1618:188:6:-:0;1718:81;1738:5;1760;-1:-1:-1;;;;;1760:18:6;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1745:53:6;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;10596:250:15:-;10652:14;;;;10651:15;:72;;;;;10699:11;-1:-1:-1;;;;;10699:22:15;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10670:11;-1:-1:-1;;;;;10670:23:15;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;10651:72;10647:193;;;10739:14;:21;;-1:-1:-1;;10739:21:15;10756:4;10739:21;;;10803:25;;;-1:-1:-1;;;10803:25:15;;;;10779:50;;-1:-1:-1;;;;;10803:11:15;:23;;;;:25;;;;;;;;;;;;;;;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10779:50;;1231:25:16;;;1219:2;1204:18;10779:50:15;;;;;;;10596:250::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:9;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:9;1901:40:0;;;2718:51:16;2691:18;;1901:40:0;2551:224:16;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1219:160:6:-;1328:43;;-1:-1:-1;;;;;15559:32:16;;;1328:43:6;;;15541:51:16;15608:18;;;15601:34;;;1301:71:6;;1321:5;;1343:14;;;;;15514:18:16;;1328:43:6;15367:274:16;5617:111:13;5675:7;5312:5;;;5709;;;5311:36;5306:42;;5701:20;5694:27;;5617:111;;;;;:::o;2575:307:11:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:11;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:6;8910:8;8866:16;;-1:-1:-1;8942:15:6;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:6;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:6;;-1:-1:-1;;;;;2736:32:16;;9033:40:6;;;2718:51:16;2691:18;;9033:40:6;2551:224:16;14:689;109:6;117;125;178:2;166:9;157:7;153:23;149:32;146:52;;;194:1;191;184:12;146:52;234:9;221:23;263:18;304:2;296:6;293:14;290:34;;;320:1;317;310:12;290:34;358:6;347:9;343:22;333:32;;403:7;396:4;392:2;388:13;384:27;374:55;;425:1;422;415:12;374:55;465:2;452:16;491:2;483:6;480:14;477:34;;;507:1;504;497:12;477:34;562:7;555:4;545:6;542:1;538:14;534:2;530:23;526:34;523:47;520:67;;;583:1;580;573:12;520:67;614:4;606:13;;;;638:6;;-1:-1:-1;676:20:16;;;;663:34;;14:689;-1:-1:-1;;;;14:689:16:o;708:180::-;767:6;820:2;808:9;799:7;795:23;791:32;788:52;;;836:1;833;826:12;788:52;-1:-1:-1;859:23:16;;708:180;-1:-1:-1;708:180:16:o;1267:131::-;-1:-1:-1;;;;;1342:31:16;;1332:42;;1322:70;;1388:1;1385;1378:12;1403:936;1500:6;1508;1516;1524;1532;1585:3;1573:9;1564:7;1560:23;1556:33;1553:53;;;1602:1;1599;1592:12;1553:53;1641:9;1628:23;1660:31;1685:5;1660:31;:::i;:::-;1710:5;-1:-1:-1;1767:2:16;1752:18;;1739:32;1780:33;1739:32;1780:33;:::i;:::-;1832:7;-1:-1:-1;1886:2:16;1871:18;;1858:32;;-1:-1:-1;1941:2:16;1926:18;;1913:32;1964:18;1994:14;;;1991:34;;;2021:1;2018;2011:12;1991:34;2059:6;2048:9;2044:22;2034:32;;2104:7;2097:4;2093:2;2089:13;2085:27;2075:55;;2126:1;2123;2116:12;2075:55;2166:2;2153:16;2192:2;2184:6;2181:14;2178:34;;;2208:1;2205;2198:12;2178:34;2253:7;2248:2;2239:6;2235:2;2231:15;2227:24;2224:37;2221:57;;;2274:1;2271;2264:12;2221:57;1403:936;;;;-1:-1:-1;1403:936:16;;-1:-1:-1;2305:2:16;2297:11;;2327:6;1403:936;-1:-1:-1;;;1403:936:16:o;2969:247::-;3028:6;3081:2;3069:9;3060:7;3056:23;3052:32;3049:52;;;3097:1;3094;3087:12;3049:52;3136:9;3123:23;3155:31;3180:5;3155:31;:::i;:::-;3205:5;2969:247;-1:-1:-1;;;2969:247:16:o;3221:423::-;3263:3;3301:5;3295:12;3328:6;3323:3;3316:19;3353:1;3363:162;3377:6;3374:1;3371:13;3363:162;;;3439:4;3495:13;;;3491:22;;3485:29;3467:11;;;3463:20;;3456:59;3392:12;3363:162;;;3367:3;3570:1;3563:4;3554:6;3549:3;3545:16;3541:27;3534:38;3633:4;3626:2;3622:7;3617:2;3609:6;3605:15;3601:29;3596:3;3592:39;3588:50;3581:57;;;3221:423;;;;:::o;3649:891::-;3973:4;4002:3;4032:2;4021:9;4014:21;4052:45;4093:2;4082:9;4078:18;4070:6;4052:45;:::i;:::-;-1:-1:-1;;;;;4171:15:16;;;4166:2;4151:18;;4144:43;4223:15;;;;4218:2;4203:18;;4196:43;-1:-1:-1;4270:2:16;4255:18;;4248:34;;;;4313:3;4298:19;;4291:35;;;;4124:3;4342:19;;4335:35;;;;4401:3;4386:19;;4379:35;4458:14;4451:22;4445:3;4430:19;;4423:51;4518:14;4511:22;4505:3;4490:19;;;4483:51;4044:53;3649:891;-1:-1:-1;;3649:891:16:o;4753:315::-;4821:6;4829;4882:2;4870:9;4861:7;4857:23;4853:32;4850:52;;;4898:1;4895;4888:12;4850:52;4937:9;4924:23;4956:31;4981:5;4956:31;:::i;:::-;5006:5;5058:2;5043:18;;;;5030:32;;-1:-1:-1;;;4753:315:16:o;5073:220::-;5222:2;5211:9;5204:21;5185:4;5242:45;5283:2;5272:9;5268:18;5260:6;5242:45;:::i;5298:632::-;5469:2;5521:21;;;5591:13;;5494:18;;;5613:22;;;5440:4;;5469:2;5692:15;;;;5666:2;5651:18;;;5440:4;5735:169;5749:6;5746:1;5743:13;5735:169;;;5810:13;;5798:26;;5879:15;;;;5844:12;;;;5771:1;5764:9;5735:169;;;-1:-1:-1;5921:3:16;;5298:632;-1:-1:-1;;;;;;5298:632:16:o;6712:118::-;6798:5;6791:13;6784:21;6777:5;6774:32;6764:60;;6820:1;6817;6810:12;6835:241;6891:6;6944:2;6932:9;6923:7;6919:23;6915:32;6912:52;;;6960:1;6957;6950:12;6912:52;6999:9;6986:23;7018:28;7040:5;7018:28;:::i;7081:344::-;7283:2;7265:21;;;7322:2;7302:18;;;7295:30;-1:-1:-1;;;7356:2:16;7341:18;;7334:50;7416:2;7401:18;;7081:344::o;7430:127::-;7491:10;7486:3;7482:20;7479:1;7472:31;7522:4;7519:1;7512:15;7546:4;7543:1;7536:15;7911:375;-1:-1:-1;;;;;8169:15:16;;;8151:34;;8221:15;;;;8216:2;8201:18;;8194:43;8268:2;8253:18;;8246:34;;;;8101:2;8086:18;;7911:375::o;8291:127::-;8352:10;8347:3;8343:20;8340:1;8333:31;8383:4;8380:1;8373:15;8407:4;8404:1;8397:15;8423:135;8462:3;8483:17;;;8480:43;;8503:18;;:::i;:::-;-1:-1:-1;8550:1:16;8539:13;;8423:135::o;8563:125::-;8628:9;;;8649:10;;;8646:36;;;8662:18;;:::i;8946:184::-;9016:6;9069:2;9057:9;9048:7;9044:23;9040:32;9037:52;;;9085:1;9082;9075:12;9037:52;-1:-1:-1;9108:16:16;;8946:184;-1:-1:-1;8946:184:16:o;9135:127::-;9196:10;9191:3;9187:20;9184:1;9177:31;9227:4;9224:1;9217:15;9251:4;9248:1;9241:15;9267:120;9307:1;9333;9323:35;;9338:18;;:::i;:::-;-1:-1:-1;9372:9:16;;9267:120::o;9742:380::-;9821:1;9817:12;;;;9864;;;9885:61;;9939:4;9931:6;9927:17;9917:27;;9885:61;9992:2;9984:6;9981:14;9961:18;9958:38;9955:161;;10038:10;10033:3;10029:20;10026:1;10019:31;10073:4;10070:1;10063:15;10101:4;10098:1;10091:15;9955:161;;9742:380;;;:::o;10828:128::-;10895:9;;;10916:11;;;10913:37;;;10930:18;;:::i;11306:136::-;11345:3;11373:5;11363:39;;11382:18;;:::i;:::-;-1:-1:-1;;;11418:18:16;;11306:136::o;11447:127::-;11508:10;11503:3;11499:20;11496:1;11489:31;11539:4;11536:1;11529:15;11563:4;11560:1;11553:15;12282:112;12314:1;12340;12330:35;;12345:18;;:::i;:::-;-1:-1:-1;12379:9:16;;12282:112::o;13456:245::-;13523:6;13576:2;13564:9;13555:7;13551:23;13547:32;13544:52;;;13592:1;13589;13582:12;13544:52;13624:9;13618:16;13643:28;13665:5;13643:28;:::i;14412:251::-;14482:6;14535:2;14523:9;14514:7;14510:23;14506:32;14503:52;;;14551:1;14548;14541:12;14503:52;14583:9;14577:16;14602:31;14627:5;14602:31;:::i"},"methodIdentifiers":{"TOKENS_PER_NFT()":"adee8ff2","TOKENS_PER_NFT_UNITS()":"a98d4994","TOKEN_DECIMALS()":"5b7f415c","admin()":"f851a440","depositNFT(uint256)":"e91a7ca6","depositTokens(uint256)":"dd49756e","emergencyWithdrawNFT(address,uint256)":"922b8079","emergencyWithdrawTokens(address,uint256)":"917bb998","getFloorPrice()":"2a33d6b2","getNFTsInVault(uint256)":"978cd40f","getVaultInfo()":"7f98aa71","getVaultStats()":"a59aa5a6","isNFTInVault(uint256)":"035dd06d","nftContract()":"d56d229d","nftCount()":"0af2c6ca","nftHeld(uint256)":"50586088","onERC721Received(address,address,uint256,bytes)":"150b7a02","openMarketMode()":"7304fa20","owner()":"8da5cb5b","preloadVault(uint256[],uint256)":"029a3c5f","renounceOwnership()":"715018a6","setAdmin(address)":"704b6c02","setSwapEnabled(bool)":"e01af92c","songName()":"96cd06f8","swapEnabled()":"6ddd1713","tokenBalance()":"9e1a4d19","tokenContract()":"55a373d6","totalMarketCap()":"bbffa2d3","transferOwnership(address)":"f2fde38b","updateMarketCap(uint256)":"b1e776e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"songName_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFloorPrice\",\"type\":\"uint256\"}],\"name\":\"FloorPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensReceived\",\"type\":\"uint256\"}],\"name\":\"NFTDepositedToVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensPaid\",\"type\":\"uint256\"}],\"name\":\"NFTWithdrawnFromVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalNFTsMinted\",\"type\":\"uint256\"}],\"name\":\"OpenMarketModeActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SwapStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftReceived\",\"type\":\"uint256\"}],\"name\":\"TokensDepositedToVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftDeposited\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawnFromVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"VaultPreloaded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKENS_PER_NFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKENS_PER_NFT_UNITS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"depositNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFloorPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxResults\",\"type\":\"uint256\"}],\"name\":\"getNFTsInVault\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"vaultSongName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"conversionRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftsHeld\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensHeld\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentFloorPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"openMarket\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"swappingEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftsInVault\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensInVault\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"floorPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOpenMarket\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalNFTsMinted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxNFTSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isNFTInVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract IERC222NFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftHeld\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openMarketMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"preloadVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"songName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contract IERC222Token\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMarketCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"additionalValue\",\"type\":\"uint256\"}],\"name\":\"updateMarketCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Vault contract that enables swapping between NFTs and kTokensTracks floor price and manages paired NFT/kToken storageEnters \\\"open market\\\" mode after all NFTs are minted  Constructor Parameters: - nftContract_ - Address of the paired ERC222NFT contract - tokenContract_ - Address of the paired ERC222Token contract - songName_ - Name of the song this vault represents - admin_ - Admin address for management functions\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"depositNFT(uint256)\":{\"details\":\"Deposit NFT to vault and receive kTokens\",\"params\":{\"tokenId\":\"NFT token ID to deposit\"}},\"depositTokens(uint256)\":{\"details\":\"Deposit kTokens to vault and receive NFT (if available)\",\"params\":{\"tokenAmount\":\"Amount of kTokens to deposit (must be multiple of TOKENS_PER_NFT)\"}},\"emergencyWithdrawNFT(address,uint256)\":{\"details\":\"Emergency function to withdraw NFTs (admin only)\",\"params\":{\"to\":\"Address to withdraw NFT to\",\"tokenId\":\"NFT token ID to withdraw\"}},\"emergencyWithdrawTokens(address,uint256)\":{\"details\":\"Emergency function to withdraw tokens (admin only)\",\"params\":{\"amount\":\"Amount of tokens to withdraw\",\"to\":\"Address to withdraw tokens to\"}},\"getFloorPrice()\":{\"details\":\"Calculate current floor price based on market cap and total NFTs\",\"returns\":{\"_0\":\"Floor price in wei\"}},\"getNFTsInVault(uint256)\":{\"details\":\"Get list of NFT IDs currently in vault (up to maxResults)\",\"params\":{\"maxResults\":\"Maximum number of results to return\"},\"returns\":{\"_0\":\"Array of NFT token IDs in vault\"}},\"getVaultInfo()\":{\"details\":\"Get comprehensive vault information\"},\"getVaultStats()\":{\"details\":\"Get vault statistics\"},\"isNFTInVault(uint256)\":{\"details\":\"Check if a specific NFT is held in the vault\",\"params\":{\"tokenId\":\"NFT token ID to check\"},\"returns\":{\"_0\":\"True if NFT is in vault\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Handle NFT transfers to this contract\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"preloadVault(uint256[],uint256)\":{\"details\":\"Admin function to preload vault with NFTs and tokens\",\"params\":{\"nftIds\":\"Array of NFT token IDs to deposit\",\"tokenAmount\":\"Amount of kTokens to deposit\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAdmin(address)\":{\"details\":\"Set admin address\",\"params\":{\"newAdmin\":\"New admin address\"}},\"setSwapEnabled(bool)\":{\"details\":\"Enable or disable swapping\",\"params\":{\"enabled\":\"Whether swapping should be enabled\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateMarketCap(uint256)\":{\"details\":\"Update market cap (called by MintRouter or admin)\",\"params\":{\"additionalValue\":\"Additional value to add to market cap\"}}},\"title\":\"ERC222Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC222Vault.sol\":\"ERC222Vault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/ERC222Vault.sol\":{\"keccak256\":\"0xc715f43d670a5853fd09fc94144abb67629b7bbb1b35e1969d082e8a6517eb30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883866ae0086f80d4487775f97c3f39e448cbfb2a51a6c00cf9d88ac87d2adfd\",\"dweb:/ipfs/Qmf7eh49bCv1dU3Tv53QLYczJrHWyJrysva98BEdNf7Gz3\"]}},\"version\":1}"},"IERC222NFT":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"songName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"MAX_SUPPLY()":"32cb6b0c","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","songName()":"96cd06f8","supportsInterface(bytes4)":"01ffc9a7","totalMinted()":"a2309ff8","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"songName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC222Vault.sol\":\"IERC222NFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/ERC222Vault.sol\":{\"keccak256\":\"0xc715f43d670a5853fd09fc94144abb67629b7bbb1b35e1969d082e8a6517eb30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883866ae0086f80d4487775f97c3f39e448cbfb2a51a6c00cf9d88ac87d2adfd\",\"dweb:/ipfs/Qmf7eh49bCv1dU3Tv53QLYczJrHWyJrysva98BEdNf7Gz3\"]}},\"version\":1}"},"IERC222Token":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"TOKENS_PER_NFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"songName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"TOKENS_PER_NFT()":"adee8ff2","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","mint(address,uint256)":"40c10f19","songName()":"96cd06f8","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKENS_PER_NFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"songName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC222Vault.sol\":\"IERC222Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/ERC222Vault.sol\":{\"keccak256\":\"0xc715f43d670a5853fd09fc94144abb67629b7bbb1b35e1969d082e8a6517eb30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://883866ae0086f80d4487775f97c3f39e448cbfb2a51a6c00cf9d88ac87d2adfd\",\"dweb:/ipfs/Qmf7eh49bCv1dU3Tv53QLYczJrHWyJrysva98BEdNf7Gz3\"]}},\"version\":1}"}}}}}